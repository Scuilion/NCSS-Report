<?xml version="1.0"?>
<javancss>
  <date>2012-11-16</date>
  <time>15:18:00</time>
  <packages>
    <package>
      <name>.</name>
      <classes>444</classes>
      <functions>1200</functions>
      <ncss>6558</ncss>
      <javadocs>274</javadocs>
      <javadoc_lines>1470</javadoc_lines>
      <single_comment_lines>454</single_comment_lines>
      <multi_comment_lines>484</multi_comment_lines>
    </package>
    <package>
      <name>bla.poo</name>
      <classes>16</classes>
      <functions>104</functions>
      <ncss>332</ncss>
      <javadocs>84</javadocs>
      <javadoc_lines>1004</javadoc_lines>
      <single_comment_lines>20</single_comment_lines>
      <multi_comment_lines>508</multi_comment_lines>
    </package>
    <package>
      <name>boca.corba</name>
      <classes>4</classes>
      <functions>12</functions>
      <ncss>44</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>16</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>ccl.swing</name>
      <classes>8</classes>
      <functions>32</functions>
      <ncss>592</ncss>
      <javadocs>12</javadocs>
      <javadoc_lines>92</javadoc_lines>
      <single_comment_lines>12</single_comment_lines>
      <multi_comment_lines>68</multi_comment_lines>
    </package>
    <package>
      <name>ccl.util</name>
      <classes>28</classes>
      <functions>912</functions>
      <ncss>5084</ncss>
      <javadocs>88</javadocs>
      <javadoc_lines>348</javadoc_lines>
      <single_comment_lines>296</single_comment_lines>
      <multi_comment_lines>424</multi_comment_lines>
    </package>
    <package>
      <name>clas.s</name>
      <classes>4</classes>
      <functions>96</functions>
      <ncss>104</ncss>
      <javadocs>96</javadocs>
      <javadoc_lines>704</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>com</name>
      <classes>8</classes>
      <functions>8</functions>
      <ncss>44</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>4</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>com.com.com</name>
      <classes>24</classes>
      <functions>132</functions>
      <ncss>1976</ncss>
      <javadocs>76</javadocs>
      <javadoc_lines>976</javadoc_lines>
      <single_comment_lines>416</single_comment_lines>
      <multi_comment_lines>100</multi_comment_lines>
    </package>
    <package>
      <name>com.webify.webapp.wlib.palette</name>
      <classes>4</classes>
      <functions>0</functions>
      <ncss>12</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>32</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>corba.abroc</name>
      <classes>12</classes>
      <functions>276</functions>
      <ncss>2336</ncss>
      <javadocs>188</javadocs>
      <javadoc_lines>672</javadoc_lines>
      <single_comment_lines>876</single_comment_lines>
      <multi_comment_lines>16</multi_comment_lines>
    </package>
    <package>
      <name>hallo.hello</name>
      <classes>4</classes>
      <functions>4</functions>
      <ncss>120</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>24</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>ham.cham</name>
      <classes>0</classes>
      <functions>0</functions>
      <ncss>12</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>28</multi_comment_lines>
    </package>
    <package>
      <name>ho.ha.hi</name>
      <classes>12</classes>
      <functions>16</functions>
      <ncss>140</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>16</multi_comment_lines>
    </package>
    <package>
      <name>holi.cow</name>
      <classes>16</classes>
      <functions>84</functions>
      <ncss>384</ncss>
      <javadocs>8</javadocs>
      <javadoc_lines>16</javadoc_lines>
      <single_comment_lines>44</single_comment_lines>
      <multi_comment_lines>32</multi_comment_lines>
    </package>
    <package>
      <name>hope.pope</name>
      <classes>4</classes>
      <functions>4</functions>
      <ncss>12</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>152</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>idebughc</name>
      <classes>40</classes>
      <functions>480</functions>
      <ncss>5652</ncss>
      <javadocs>408</javadocs>
      <javadoc_lines>3240</javadoc_lines>
      <single_comment_lines>1040</single_comment_lines>
      <multi_comment_lines>3252</multi_comment_lines>
    </package>
    <package>
      <name>idebughc.testsuite</name>
      <classes>4</classes>
      <functions>40</functions>
      <ncss>1204</ncss>
      <javadocs>8</javadocs>
      <javadoc_lines>56</javadoc_lines>
      <single_comment_lines>324</single_comment_lines>
      <multi_comment_lines>188</multi_comment_lines>
    </package>
    <package>
      <name>jacob</name>
      <classes>16</classes>
      <functions>260</functions>
      <ncss>3132</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>324</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>java.lang</name>
      <classes>8</classes>
      <functions>272</functions>
      <ncss>692</ncss>
      <javadocs>272</javadocs>
      <javadoc_lines>4648</javadoc_lines>
      <single_comment_lines>108</single_comment_lines>
      <multi_comment_lines>136</multi_comment_lines>
    </package>
    <package>
      <name>java.net</name>
      <classes>4</classes>
      <functions>96</functions>
      <ncss>368</ncss>
      <javadocs>96</javadocs>
      <javadoc_lines>924</javadoc_lines>
      <single_comment_lines>4</single_comment_lines>
      <multi_comment_lines>132</multi_comment_lines>
    </package>
    <package>
      <name>java.sql</name>
      <classes>4</classes>
      <functions>76</functions>
      <ncss>104</ncss>
      <javadocs>80</javadocs>
      <javadoc_lines>876</javadoc_lines>
      <single_comment_lines>8</single_comment_lines>
      <multi_comment_lines>152</multi_comment_lines>
    </package>
    <package>
      <name>java.text</name>
      <classes>8</classes>
      <functions>152</functions>
      <ncss>2000</ncss>
      <javadocs>124</javadocs>
      <javadoc_lines>816</javadoc_lines>
      <single_comment_lines>188</single_comment_lines>
      <multi_comment_lines>800</multi_comment_lines>
    </package>
    <package>
      <name>javancss</name>
      <classes>58</classes>
      <functions>3624</functions>
      <ncss>51015</ncss>
      <javadocs>206</javadocs>
      <javadoc_lines>1354</javadoc_lines>
      <single_comment_lines>650</single_comment_lines>
      <multi_comment_lines>1598</multi_comment_lines>
    </package>
    <package>
      <name>javancss.parser</name>
      <classes>2</classes>
      <functions>22</functions>
      <ncss>28</ncss>
      <javadocs>8</javadocs>
      <javadoc_lines>22</javadoc_lines>
      <single_comment_lines>2</single_comment_lines>
      <multi_comment_lines>20</multi_comment_lines>
    </package>
    <package>
      <name>javancss.parser.java15</name>
      <classes>6</classes>
      <functions>86</functions>
      <ncss>3474</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>96</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>10</multi_comment_lines>
    </package>
    <package>
      <name>javancss.parser.java15.debug</name>
      <classes>6</classes>
      <functions>86</functions>
      <ncss>3474</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>96</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>10</multi_comment_lines>
    </package>
    <package>
      <name>javancss.test</name>
      <classes>12</classes>
      <functions>149</functions>
      <ncss>1693</ncss>
      <javadocs>35</javadocs>
      <javadoc_lines>185</javadoc_lines>
      <single_comment_lines>170</single_comment_lines>
      <multi_comment_lines>208</multi_comment_lines>
    </package>
    <package>
      <name>javancss.text</name>
      <classes>4</classes>
      <functions>8</functions>
      <ncss>20</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>4</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>lama.karma</name>
      <classes>4</classes>
      <functions>4</functions>
      <ncss>24</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>32</javadoc_lines>
      <single_comment_lines>4</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>mirror.list</name>
      <classes>12</classes>
      <functions>28</functions>
      <ncss>88</ncss>
      <javadocs>28</javadocs>
      <javadoc_lines>168</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>24</multi_comment_lines>
    </package>
    <package>
      <name>mypackage.service</name>
      <classes>4</classes>
      <functions>20</functions>
      <ncss>52</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>net.tds.openwave.ldap.attributes</name>
      <classes>4</classes>
      <functions>24</functions>
      <ncss>60</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>oki.doki</name>
      <classes>28</classes>
      <functions>72</functions>
      <ncss>260</ncss>
      <javadocs>36</javadocs>
      <javadoc_lines>304</javadoc_lines>
      <single_comment_lines>44</single_comment_lines>
      <multi_comment_lines>80</multi_comment_lines>
    </package>
    <package>
      <name>org.edorasframework.core.util</name>
      <classes>4</classes>
      <functions>8</functions>
      <ncss>26</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>org.example</name>
      <classes>4</classes>
      <functions>0</functions>
      <ncss>6</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>org.jboss.annotation.ejb</name>
      <classes>0</classes>
      <functions>0</functions>
      <ncss>36</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>112</multi_comment_lines>
    </package>
    <package>
      <name>org.jboss.annotation.internal</name>
      <classes>0</classes>
      <functions>0</functions>
      <ncss>8</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>124</multi_comment_lines>
    </package>
    <package>
      <name>org.jboss.ejb3.test.pkg</name>
      <classes>0</classes>
      <functions>0</functions>
      <ncss>8</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>12</single_comment_lines>
      <multi_comment_lines>84</multi_comment_lines>
    </package>
    <package>
      <name>org.jboss.tutorial.composite.bean</name>
      <classes>4</classes>
      <functions>0</functions>
      <ncss>40</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>24</javadoc_lines>
      <single_comment_lines>4</single_comment_lines>
      <multi_comment_lines>84</multi_comment_lines>
    </package>
    <package>
      <name>pac.kage</name>
      <classes>8</classes>
      <functions>16</functions>
      <ncss>192</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>64</javadoc_lines>
      <single_comment_lines>100</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>pla.gi.at</name>
      <classes>28</classes>
      <functions>76</functions>
      <ncss>368</ncss>
      <javadocs>24</javadocs>
      <javadoc_lines>160</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>plat.ch</name>
      <classes>36</classes>
      <functions>380</functions>
      <ncss>5380</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>12</javadoc_lines>
      <single_comment_lines>172</single_comment_lines>
      <multi_comment_lines>52</multi_comment_lines>
    </package>
    <package>
      <name>poo.foo</name>
      <classes>4</classes>
      <functions>0</functions>
      <ncss>8</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>8</multi_comment_lines>
    </package>
    <package>
      <name>steve.jobs</name>
      <classes>4</classes>
      <functions>4</functions>
      <ncss>40</ncss>
      <javadocs>4</javadocs>
      <javadoc_lines>12</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>swatch.watch</name>
      <classes>8</classes>
      <functions>164</functions>
      <ncss>1616</ncss>
      <javadocs>24</javadocs>
      <javadoc_lines>104</javadoc_lines>
      <single_comment_lines>148</single_comment_lines>
      <multi_comment_lines>228</multi_comment_lines>
    </package>
    <package>
      <name>test</name>
      <classes>32</classes>
      <functions>175</functions>
      <ncss>1428</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>12</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>testPackage</name>
      <classes>4</classes>
      <functions>0</functions>
      <ncss>6</ncss>
      <javadocs>2</javadocs>
      <javadoc_lines>8</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>xml.xslt</name>
      <classes>8</classes>
      <functions>72</functions>
      <ncss>968</ncss>
      <javadocs>48</javadocs>
      <javadoc_lines>468</javadoc_lines>
      <single_comment_lines>40</single_comment_lines>
      <multi_comment_lines>352</multi_comment_lines>
    </package>
    <package>
      <name>xyz.bla</name>
      <classes>52</classes>
      <functions>360</functions>
      <ncss>972</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>104</single_comment_lines>
      <multi_comment_lines>16</multi_comment_lines>
    </package>
    <package>
      <name>yahoo.google</name>
      <classes>4</classes>
      <functions>24</functions>
      <ncss>220</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>8</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <total>
      <classes>1012</classes>
      <functions>9658</functions>
      <ncss>102412</ncss>
      <javadocs>2269</javadocs>
      <javadoc_lines>19175</javadoc_lines>
      <single_comment_lines>5592</single_comment_lines>
      <multi_comment_lines>9346</multi_comment_lines>
    </total>
    <table>
      <tr><td>Packages</td><td>Classes</td><td>Functions</td><td>NCSS</td><td>Javadocs</td><td>per</td></tr>
      <tr><td>50.00</td><td>1,012.00</td><td>9,658.00</td><td>102,412.00</td><td>2,269.00</td><td>Project</td></tr>
      <tr><td></td><td>20.24</td><td>193.16</td><td>2,048.24</td><td>45.38</td><td>Package</td></tr>
      <tr><td></td><td></td><td>9.54</td><td>101.20</td><td>2.24</td><td>Class</td></tr>
      <tr><td></td><td></td><td></td><td>10.60</td><td>0.23</td><td>Function</td></tr>
    </table>
  </packages>

  <objects>
    <object>
      <name>javancss.AsciiFormatter</name>
      <ncss>130</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Formatter</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.FunctionMetric</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Javancss</name>
      <ncss>332</ncss>
      <functions>40</functions>
      <classes>1</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>javancss.Javancss.WindowAdapter</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavancssFrame</name>
      <ncss>198</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>javancss.Main</name>
      <ncss>8</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Metric</name>
      <ncss>24</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.ObjectMetric</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.PackageMetric</name>
      <ncss>19</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.XmlFormatter</name>
      <ncss>108</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.test.AbstractTest</name>
      <ncss>22</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.test.JavancssTest</name>
      <ncss>307</ncss>
      <functions>19</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>javancss.test.XmlFormatterTest</name>
      <ncss>31</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>jacob.Jacob</name>
      <ncss>311</ncss>
      <functions>29</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10</name>
      <ncss>555</ncss>
      <functions>96</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Provider</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101</name>
      <ncss>256</ncss>
      <functions>16</functions>
      <classes>12</classes>
      <javadocs>22</javadocs>
    </object>
    <object>
      <name>Test101.CheckedEntrySet</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.CheckedSortedMap</name>
      <ncss>18</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.CopiesList</name>
      <ncss>17</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptyList</name>
      <ncss>10</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptyMap</name>
      <ncss>24</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptySet</name>
      <ncss>16</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptySet.Iterator</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.Enumeration</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.ReverseComparator</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.ReverseComparator2</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonList</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonMap</name>
      <ncss>53</ncss>
      <functions>9</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonMap.ImmutableEntry</name>
      <ncss>21</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonSet</name>
      <ncss>21</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonSet.Iterator</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AClass</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AnEnum</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AnEnum</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test105</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.jboss.tutorial.composite.bean.EntityTestBean</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>ccl.util.Test11</name>
      <ncss>131</ncss>
      <functions>32</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test110</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test111</name>
      <ncss>4</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test112</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test112.Info</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test113</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test114</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser</name>
      <ncss>11660</ncss>
      <functions>779</functions>
      <classes>2</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser.JJCalls</name>
      <ncss>5</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser.ModifierSet</name>
      <ncss>36</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test116</name>
      <ncss>12</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes</name>
      <ncss>14</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>TestEnum</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test12</name>
      <ncss>140</ncss>
      <functions>29</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.webify.webapp.wlib.palette.Test120</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test120</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test123</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>com.Test123</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.Example2</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test125</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>mypackage.service.Test126</name>
      <ncss>6</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ClassWithGenericizedConstructor</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test128</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>PerfTest</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>PerfTest.class</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test13</name>
      <ncss>33</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Bug</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test123</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test123.SimpleBean</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test132</name>
      <ncss>10</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test133</name>
      <ncss>12</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test134</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test135</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test14</name>
      <ncss>72</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test15</name>
      <ncss>36</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test16</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test16.Predicate</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test17</name>
      <ncss>72</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test18</name>
      <ncss>39</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test18.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test19</name>
      <ncss>9</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AudioItem</name>
      <ncss>38</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>ImageLoop</name>
      <ncss>17</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>ImageLoopItem</name>
      <ncss>46</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>Daten</name>
      <ncss>187</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>InputWindow</name>
      <ncss>16</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Interface</name>
      <ncss>20</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>SelectFromListWindow</name>
      <ncss>18</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ShowMsgBox</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>SimSoccer</name>
      <ncss>27</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Net</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Net</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Neuron</name>
      <ncss>10</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Init</name>
      <ncss>44</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob2</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob3</name>
      <ncss>456</ncss>
      <functions>34</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob3.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test29</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob</name>
      <ncss>69</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test30</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>java.net.Socket</name>
      <ncss>87</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>24</javadocs>
    </object>
    <object>
      <name>java.sql.Connection</name>
      <ncss>25</ncss>
      <functions>19</functions>
      <classes>0</classes>
      <javadocs>20</javadocs>
    </object>
    <object>
      <name>java.text.DecimalFormat</name>
      <ncss>447</ncss>
      <functions>35</functions>
      <classes>0</classes>
      <javadocs>30</javadocs>
    </object>
    <object>
      <name>java.text.TextBoundaryData</name>
      <ncss>46</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test35</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test36</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test37</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test38</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.text.Test39</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob</name>
      <ncss>11</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test40</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test41</name>
      <ncss>18</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
    </object>
    <object>
      <name>test.sdf</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test46</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>Test47</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test48</name>
      <ncss>14</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>MainJMenuBar</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something1</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something2</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.swing.MainJMenuBar</name>
      <ncss>133</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>ccl.swing.MainJMenuBar.MainJMenu</name>
      <ncss>115</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test51</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test52</name>
      <ncss>12</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test52.Inner</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test53</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test54</name>
      <ncss>9</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test55</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>java.lang.Math</name>
      <ncss>92</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>34</javadocs>
    </object>
    <object>
      <name>java.lang.StrictMath</name>
      <ncss>77</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>34</javadocs>
    </object>
    <object>
      <name>idebughc.Event</name>
      <ncss>34</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>idebughc.Utilities</name>
      <ncss>118</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>ccl.util.Util</name>
      <ncss>555</ncss>
      <functions>96</functions>
      <classes>2</classes>
      <javadocs>22</javadocs>
    </object>
    <object>
      <name>ccl.util.Util.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Util.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.Collect</name>
      <ncss>33</ncss>
      <functions>18</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>idebughc.Collect</name>
      <ncss>201</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>idebughc.Debug</name>
      <ncss>613</ncss>
      <functions>39</functions>
      <classes>0</classes>
      <javadocs>32</javadocs>
    </object>
    <object>
      <name>idebughc.Utilities</name>
      <ncss>326</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput</name>
      <ncss>62</ncss>
      <functions>7</functions>
      <classes>3</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.ActionListener</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.ActionListener</name>
      <ncss>19</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.WindowAdapter</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.testsuite.TestSuiteThread</name>
      <ncss>299</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test66</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test67</name>
      <ncss>31</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test68</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test69</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test7</name>
      <ncss>30</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70</name>
      <ncss>4</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70.InnerClass</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70Super</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71</name>
      <ncss>18</ncss>
      <functions>1</functions>
      <classes>4</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.Runnable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.Runnable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.TestRun</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.TestRun</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test72</name>
      <ncss>53</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test73</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test74</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test74.StaticInnerInterface</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75</name>
      <ncss>557</ncss>
      <functions>66</functions>
      <classes>2</classes>
      <javadocs>47</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75.AnyInputStream</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75.AnyOutputStream</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>swatch.watch.Test76</name>
      <ncss>379</ncss>
      <functions>40</functions>
      <classes>1</classes>
      <javadocs>6</javadocs>
    </object>
    <object>
      <name>swatch.watch.Test76.PrivilegedAction</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pac.kage.Test77</name>
      <ncss>35</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>pac.kage.Test77.PrivilegedAction</name>
      <ncss>7</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78</name>
      <ncss>30</ncss>
      <functions>2</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78.Runnable</name>
      <ncss>10</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78.java.security.PrivilegedAction</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79</name>
      <ncss>1330</ncss>
      <functions>50</functions>
      <classes>7</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator</name>
      <ncss>66</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.ColorizeImageFilter</name>
      <ncss>25</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.PeekableStringTokenizer</name>
      <ncss>23</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.Privileged</name>
      <ncss>65</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.PrivilegedAction</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.RoundRectClipShape</name>
      <ncss>116</ncss>
      <functions>18</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator</name>
      <ncss>64</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.TitlePaneLayout</name>
      <ncss>80</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test8</name>
      <ncss>30</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80</name>
      <ncss>87</ncss>
      <functions>15</functions>
      <classes>3</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81</name>
      <ncss>85</ncss>
      <functions>10</functions>
      <classes>5</classes>
      <javadocs>6</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.BasicComboBoxUI.ComboBoxLayoutManager</name>
      <ncss>7</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.RolloverListener</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboBoxEditor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboPopup</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboPopup.InvocationKeyHandler</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.XPComboBoxButton</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>clas.s.Test82</name>
      <ncss>25</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>24</javadocs>
    </object>
    <object>
      <name>poo.foo.Test83</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>yahoo.google.Test84</name>
      <ncss>52</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xml.xslt.Test85</name>
      <ncss>218</ncss>
      <functions>16</functions>
      <classes>1</classes>
      <javadocs>12</javadocs>
    </object>
    <object>
      <name>xml.xslt.Test85.SinkOutputStream</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86</name>
      <ncss>19</ncss>
      <functions>2</functions>
      <classes>2</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86.CompositeAnnotationProcessor</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86.NoOpAP</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>bla.poo.Filer</name>
      <ncss>6</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>boca.corba.Test88</name>
      <ncss>8</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89</name>
      <ncss>59</ncss>
      <functions>9</functions>
      <classes>6</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.AccessFilter</name>
      <ncss>14</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test9</name>
      <ncss>311</ncss>
      <functions>29</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test9.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile</name>
      <ncss>425</ncss>
      <functions>20</functions>
      <classes>4</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.PolicyEntry</name>
      <ncss>24</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyPermissions</name>
      <ncss>45</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>hallo.hello.Test91</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>lama.karma.Test92</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>bla.poo.Test93</name>
      <ncss>27</ncss>
      <functions>11</functions>
      <classes>2</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>bla.poo.Test93.UncaughtExceptionHandler</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>hope.pope.Test94</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>steve.jobs.Test95</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test96</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>bla.poo.Test98</name>
      <ncss>35</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99</name>
      <ncss>240</ncss>
      <functions>12</functions>
      <classes>8</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.ExternalData</name>
      <ncss>14</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntry</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet</name>
      <ncss>37</ncss>
      <functions>10</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEnvironment</name>
      <ncss>45</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringKeySet</name>
      <ncss>23</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringKeySet.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringValues</name>
      <ncss>27</ncss>
      <functions>9</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringValues.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.Value</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.Variable</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.AsciiFormatter</name>
      <ncss>130</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Formatter</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.FunctionMetric</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Javancss</name>
      <ncss>335</ncss>
      <functions>40</functions>
      <classes>1</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>javancss.Javancss.WindowAdapter</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavancssFrame</name>
      <ncss>198</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>javancss.Main</name>
      <ncss>8</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Metric</name>
      <ncss>24</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.ObjectMetric</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.PackageMetric</name>
      <ncss>19</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.XmlFormatter</name>
      <ncss>108</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.test.AbstractTest</name>
      <ncss>22</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.test.JavancssTest</name>
      <ncss>335</ncss>
      <functions>22</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>javancss.test.XmlFormatterTest</name>
      <ncss>38</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>jacob.Jacob</name>
      <ncss>311</ncss>
      <functions>29</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10</name>
      <ncss>555</ncss>
      <functions>96</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Provider</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101</name>
      <ncss>256</ncss>
      <functions>16</functions>
      <classes>12</classes>
      <javadocs>22</javadocs>
    </object>
    <object>
      <name>Test101.CheckedEntrySet</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.CheckedSortedMap</name>
      <ncss>18</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.CopiesList</name>
      <ncss>17</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptyList</name>
      <ncss>10</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptyMap</name>
      <ncss>24</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptySet</name>
      <ncss>16</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptySet.Iterator</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.Enumeration</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.ReverseComparator</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.ReverseComparator2</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonList</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonMap</name>
      <ncss>53</ncss>
      <functions>9</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonMap.ImmutableEntry</name>
      <ncss>21</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonSet</name>
      <ncss>21</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonSet.Iterator</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AClass</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AnEnum</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AnEnum</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test105</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.jboss.tutorial.composite.bean.EntityTestBean</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>ccl.util.Test11</name>
      <ncss>131</ncss>
      <functions>32</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test110</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test111</name>
      <ncss>4</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test112</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test112.Info</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test113</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test114</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser</name>
      <ncss>11660</ncss>
      <functions>779</functions>
      <classes>2</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser.JJCalls</name>
      <ncss>5</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser.ModifierSet</name>
      <ncss>36</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test116</name>
      <ncss>12</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes</name>
      <ncss>14</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>TestEnum</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test12</name>
      <ncss>140</ncss>
      <functions>29</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.webify.webapp.wlib.palette.Test120</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test120</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test123</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>com.Test123</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.Example2</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test125</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>mypackage.service.Test126</name>
      <ncss>6</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ClassWithGenericizedConstructor</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test128</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>PerfTest</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>PerfTest.class</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test13</name>
      <ncss>33</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Bug</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test123</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test123.SimpleBean</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test132</name>
      <ncss>10</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test133</name>
      <ncss>12</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test134</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test135</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test14</name>
      <ncss>72</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test15</name>
      <ncss>36</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test16</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test16.Predicate</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test17</name>
      <ncss>72</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test18</name>
      <ncss>39</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test18.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test19</name>
      <ncss>9</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AudioItem</name>
      <ncss>38</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>ImageLoop</name>
      <ncss>17</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>ImageLoopItem</name>
      <ncss>46</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>Daten</name>
      <ncss>187</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>InputWindow</name>
      <ncss>16</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Interface</name>
      <ncss>20</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>SelectFromListWindow</name>
      <ncss>18</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ShowMsgBox</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>SimSoccer</name>
      <ncss>27</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Net</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Net</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Neuron</name>
      <ncss>10</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Init</name>
      <ncss>44</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob2</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob3</name>
      <ncss>456</ncss>
      <functions>34</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob3.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test29</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob</name>
      <ncss>69</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test30</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>java.net.Socket</name>
      <ncss>87</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>24</javadocs>
    </object>
    <object>
      <name>java.sql.Connection</name>
      <ncss>25</ncss>
      <functions>19</functions>
      <classes>0</classes>
      <javadocs>20</javadocs>
    </object>
    <object>
      <name>java.text.DecimalFormat</name>
      <ncss>447</ncss>
      <functions>35</functions>
      <classes>0</classes>
      <javadocs>30</javadocs>
    </object>
    <object>
      <name>java.text.TextBoundaryData</name>
      <ncss>46</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test35</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test36</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test37</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test38</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.text.Test39</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob</name>
      <ncss>11</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test40</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test41</name>
      <ncss>18</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
    </object>
    <object>
      <name>test.sdf</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test46</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>Test47</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test48</name>
      <ncss>14</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>MainJMenuBar</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something1</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something2</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.swing.MainJMenuBar</name>
      <ncss>133</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>ccl.swing.MainJMenuBar.MainJMenu</name>
      <ncss>115</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test51</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test52</name>
      <ncss>12</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test52.Inner</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test53</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test54</name>
      <ncss>9</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test55</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>java.lang.Math</name>
      <ncss>92</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>34</javadocs>
    </object>
    <object>
      <name>java.lang.StrictMath</name>
      <ncss>77</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>34</javadocs>
    </object>
    <object>
      <name>idebughc.Event</name>
      <ncss>34</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>idebughc.Utilities</name>
      <ncss>118</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>ccl.util.Util</name>
      <ncss>555</ncss>
      <functions>96</functions>
      <classes>2</classes>
      <javadocs>22</javadocs>
    </object>
    <object>
      <name>ccl.util.Util.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Util.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.Collect</name>
      <ncss>33</ncss>
      <functions>18</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>idebughc.Collect</name>
      <ncss>201</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>idebughc.Debug</name>
      <ncss>613</ncss>
      <functions>39</functions>
      <classes>0</classes>
      <javadocs>32</javadocs>
    </object>
    <object>
      <name>idebughc.Utilities</name>
      <ncss>326</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput</name>
      <ncss>62</ncss>
      <functions>7</functions>
      <classes>3</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.ActionListener</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.ActionListener</name>
      <ncss>19</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.WindowAdapter</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.testsuite.TestSuiteThread</name>
      <ncss>299</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test66</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test67</name>
      <ncss>31</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test68</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test69</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test7</name>
      <ncss>30</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70</name>
      <ncss>4</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70.InnerClass</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70Super</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71</name>
      <ncss>18</ncss>
      <functions>1</functions>
      <classes>4</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.Runnable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.Runnable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.TestRun</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.TestRun</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test72</name>
      <ncss>53</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test73</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test74</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test74.StaticInnerInterface</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75</name>
      <ncss>557</ncss>
      <functions>66</functions>
      <classes>2</classes>
      <javadocs>47</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75.AnyInputStream</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75.AnyOutputStream</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>swatch.watch.Test76</name>
      <ncss>379</ncss>
      <functions>40</functions>
      <classes>1</classes>
      <javadocs>6</javadocs>
    </object>
    <object>
      <name>swatch.watch.Test76.PrivilegedAction</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pac.kage.Test77</name>
      <ncss>35</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>pac.kage.Test77.PrivilegedAction</name>
      <ncss>7</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78</name>
      <ncss>30</ncss>
      <functions>2</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78.Runnable</name>
      <ncss>10</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78.java.security.PrivilegedAction</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79</name>
      <ncss>1330</ncss>
      <functions>50</functions>
      <classes>7</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator</name>
      <ncss>66</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.ColorizeImageFilter</name>
      <ncss>25</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.PeekableStringTokenizer</name>
      <ncss>23</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.Privileged</name>
      <ncss>65</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.PrivilegedAction</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.RoundRectClipShape</name>
      <ncss>116</ncss>
      <functions>18</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator</name>
      <ncss>64</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.TitlePaneLayout</name>
      <ncss>80</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test8</name>
      <ncss>30</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80</name>
      <ncss>87</ncss>
      <functions>15</functions>
      <classes>3</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81</name>
      <ncss>85</ncss>
      <functions>10</functions>
      <classes>5</classes>
      <javadocs>6</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.BasicComboBoxUI.ComboBoxLayoutManager</name>
      <ncss>7</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.RolloverListener</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboBoxEditor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboPopup</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboPopup.InvocationKeyHandler</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.XPComboBoxButton</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>clas.s.Test82</name>
      <ncss>25</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>24</javadocs>
    </object>
    <object>
      <name>poo.foo.Test83</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>yahoo.google.Test84</name>
      <ncss>52</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xml.xslt.Test85</name>
      <ncss>218</ncss>
      <functions>16</functions>
      <classes>1</classes>
      <javadocs>12</javadocs>
    </object>
    <object>
      <name>xml.xslt.Test85.SinkOutputStream</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86</name>
      <ncss>19</ncss>
      <functions>2</functions>
      <classes>2</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86.CompositeAnnotationProcessor</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86.NoOpAP</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>bla.poo.Filer</name>
      <ncss>6</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>boca.corba.Test88</name>
      <ncss>8</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89</name>
      <ncss>59</ncss>
      <functions>9</functions>
      <classes>6</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.AccessFilter</name>
      <ncss>14</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test9</name>
      <ncss>311</ncss>
      <functions>29</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test9.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile</name>
      <ncss>425</ncss>
      <functions>20</functions>
      <classes>4</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.PolicyEntry</name>
      <ncss>24</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyPermissions</name>
      <ncss>45</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>hallo.hello.Test91</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>lama.karma.Test92</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>bla.poo.Test93</name>
      <ncss>27</ncss>
      <functions>11</functions>
      <classes>2</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>bla.poo.Test93.UncaughtExceptionHandler</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>hope.pope.Test94</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>steve.jobs.Test95</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test96</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>bla.poo.Test98</name>
      <ncss>35</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99</name>
      <ncss>240</ncss>
      <functions>12</functions>
      <classes>8</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.ExternalData</name>
      <ncss>14</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntry</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet</name>
      <ncss>37</ncss>
      <functions>10</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEnvironment</name>
      <ncss>45</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringKeySet</name>
      <ncss>23</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringKeySet.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringValues</name>
      <ncss>27</ncss>
      <functions>9</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringValues.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.Value</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.Variable</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.AsciiFormatter</name>
      <ncss>130</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Formatter</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.FunctionMetric</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Javancss</name>
      <ncss>359</ncss>
      <functions>41</functions>
      <classes>1</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>javancss.Javancss.WindowAdapter</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavancssAntTask</name>
      <ncss>302</ncss>
      <functions>45</functions>
      <classes>0</classes>
      <javadocs>46</javadocs>
    </object>
    <object>
      <name>javancss.JavancssFrame</name>
      <ncss>198</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>javancss.Main</name>
      <ncss>9</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Metric</name>
      <ncss>24</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.ObjectMetric</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.PackageMetric</name>
      <ncss>19</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.XmlFormatter</name>
      <ncss>108</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.test.AbstractTest</name>
      <ncss>22</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.test.JavancssTest</name>
      <ncss>358</ncss>
      <functions>25</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>javancss.test.XmlFormatterTest</name>
      <ncss>38</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>javancss.parser.JavaParserInterface</name>
      <ncss>12</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.JavaParser15TokenManager</name>
      <ncss>1716</ncss>
      <functions>41</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.Token</name>
      <ncss>18</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.Token.GTToken</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager</name>
      <ncss>1716</ncss>
      <functions>41</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.debug.Token</name>
      <ncss>18</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.debug.Token.GTToken</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob</name>
      <ncss>311</ncss>
      <functions>29</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10</name>
      <ncss>555</ncss>
      <functions>96</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Provider</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101</name>
      <ncss>256</ncss>
      <functions>16</functions>
      <classes>12</classes>
      <javadocs>22</javadocs>
    </object>
    <object>
      <name>Test101.CheckedEntrySet</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.CheckedSortedMap</name>
      <ncss>18</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.CopiesList</name>
      <ncss>17</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptyList</name>
      <ncss>10</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptyMap</name>
      <ncss>24</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptySet</name>
      <ncss>16</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptySet.Iterator</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.Enumeration</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.ReverseComparator</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.ReverseComparator2</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonList</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonMap</name>
      <ncss>53</ncss>
      <functions>9</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonMap.ImmutableEntry</name>
      <ncss>21</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonSet</name>
      <ncss>21</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonSet.Iterator</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AClass</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AnEnum</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AnEnum</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test105</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.jboss.tutorial.composite.bean.EntityTestBean</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>ccl.util.Test11</name>
      <ncss>131</ncss>
      <functions>32</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test110</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test111</name>
      <ncss>4</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test112</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test112.Info</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test113</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test114</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser</name>
      <ncss>11660</ncss>
      <functions>779</functions>
      <classes>2</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser.JJCalls</name>
      <ncss>5</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser.ModifierSet</name>
      <ncss>36</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test116</name>
      <ncss>12</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes</name>
      <ncss>14</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>TestEnum</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test12</name>
      <ncss>140</ncss>
      <functions>29</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.webify.webapp.wlib.palette.Test120</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test120</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test123</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>com.Test123</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.Example2</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test125</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>mypackage.service.Test126</name>
      <ncss>6</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ClassWithGenericizedConstructor</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test128</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>PerfTest</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>PerfTest.class</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test13</name>
      <ncss>33</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Bug</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test123</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test123.SimpleBean</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test132</name>
      <ncss>10</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test133</name>
      <ncss>12</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test134</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test135</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test136</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>MyClass</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>MyClass.MyInterface</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>TestJavadocConstructor</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>Test14</name>
      <ncss>72</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>TestJavadocAnnotation</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>TestJavadocNew</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>TestJavadocNew.TestJavadocAnnotation</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>testPackage.TestInterface</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>testPackage.TestInterface.TestClass</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.example.ChildTree</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.example.ChildTree.Node</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.edorasframework.core.util.ClassDescriberTest</name>
      <ncss>12</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean</name>
      <ncss>8</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Class1</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Class2</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test15</name>
      <ncss>36</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test16</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test16.Predicate</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test17</name>
      <ncss>72</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test18</name>
      <ncss>39</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test18.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test19</name>
      <ncss>9</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AudioItem</name>
      <ncss>38</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>ImageLoop</name>
      <ncss>17</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>ImageLoopItem</name>
      <ncss>46</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>Daten</name>
      <ncss>187</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>InputWindow</name>
      <ncss>16</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Interface</name>
      <ncss>20</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>SelectFromListWindow</name>
      <ncss>18</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ShowMsgBox</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>SimSoccer</name>
      <ncss>27</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Net</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Net</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Neuron</name>
      <ncss>10</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Init</name>
      <ncss>44</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob2</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob3</name>
      <ncss>456</ncss>
      <functions>34</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob3.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test29</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob</name>
      <ncss>69</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test30</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>java.net.Socket</name>
      <ncss>87</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>24</javadocs>
    </object>
    <object>
      <name>java.sql.Connection</name>
      <ncss>25</ncss>
      <functions>19</functions>
      <classes>0</classes>
      <javadocs>20</javadocs>
    </object>
    <object>
      <name>java.text.DecimalFormat</name>
      <ncss>447</ncss>
      <functions>35</functions>
      <classes>0</classes>
      <javadocs>30</javadocs>
    </object>
    <object>
      <name>java.text.TextBoundaryData</name>
      <ncss>46</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test35</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test36</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test37</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test38</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.text.Test39</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob</name>
      <ncss>11</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test40</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test41</name>
      <ncss>18</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
    </object>
    <object>
      <name>test.sdf</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test46</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>Test47</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test48</name>
      <ncss>14</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>MainJMenuBar</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something1</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something2</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.swing.MainJMenuBar</name>
      <ncss>133</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>ccl.swing.MainJMenuBar.MainJMenu</name>
      <ncss>115</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test51</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test52</name>
      <ncss>12</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test52.Inner</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test53</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test54</name>
      <ncss>9</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test55</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>java.lang.Math</name>
      <ncss>92</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>34</javadocs>
    </object>
    <object>
      <name>java.lang.StrictMath</name>
      <ncss>77</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>34</javadocs>
    </object>
    <object>
      <name>idebughc.Event</name>
      <ncss>34</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>idebughc.Utilities</name>
      <ncss>118</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>ccl.util.Util</name>
      <ncss>555</ncss>
      <functions>96</functions>
      <classes>2</classes>
      <javadocs>22</javadocs>
    </object>
    <object>
      <name>ccl.util.Util.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Util.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.Collect</name>
      <ncss>33</ncss>
      <functions>18</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>idebughc.Collect</name>
      <ncss>201</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>idebughc.Debug</name>
      <ncss>613</ncss>
      <functions>39</functions>
      <classes>0</classes>
      <javadocs>32</javadocs>
    </object>
    <object>
      <name>idebughc.Utilities</name>
      <ncss>326</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput</name>
      <ncss>62</ncss>
      <functions>7</functions>
      <classes>3</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.ActionListener</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.ActionListener</name>
      <ncss>19</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.WindowAdapter</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.testsuite.TestSuiteThread</name>
      <ncss>299</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test66</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test67</name>
      <ncss>31</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test68</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test69</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test7</name>
      <ncss>30</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70</name>
      <ncss>4</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70.InnerClass</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70Super</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71</name>
      <ncss>18</ncss>
      <functions>1</functions>
      <classes>4</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.Runnable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.Runnable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.TestRun</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.TestRun</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test72</name>
      <ncss>53</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test73</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test74</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test74.StaticInnerInterface</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75</name>
      <ncss>557</ncss>
      <functions>66</functions>
      <classes>2</classes>
      <javadocs>47</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75.AnyInputStream</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75.AnyOutputStream</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>swatch.watch.Test76</name>
      <ncss>379</ncss>
      <functions>40</functions>
      <classes>1</classes>
      <javadocs>6</javadocs>
    </object>
    <object>
      <name>swatch.watch.Test76.PrivilegedAction</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pac.kage.Test77</name>
      <ncss>35</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>pac.kage.Test77.PrivilegedAction</name>
      <ncss>7</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78</name>
      <ncss>30</ncss>
      <functions>2</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78.Runnable</name>
      <ncss>10</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78.java.security.PrivilegedAction</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79</name>
      <ncss>1330</ncss>
      <functions>50</functions>
      <classes>7</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator</name>
      <ncss>66</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.ColorizeImageFilter</name>
      <ncss>25</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.PeekableStringTokenizer</name>
      <ncss>23</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.Privileged</name>
      <ncss>65</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.PrivilegedAction</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.RoundRectClipShape</name>
      <ncss>116</ncss>
      <functions>18</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator</name>
      <ncss>64</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.TitlePaneLayout</name>
      <ncss>80</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test8</name>
      <ncss>30</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80</name>
      <ncss>87</ncss>
      <functions>15</functions>
      <classes>3</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81</name>
      <ncss>85</ncss>
      <functions>10</functions>
      <classes>5</classes>
      <javadocs>6</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.BasicComboBoxUI.ComboBoxLayoutManager</name>
      <ncss>7</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.RolloverListener</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboBoxEditor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboPopup</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboPopup.InvocationKeyHandler</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.XPComboBoxButton</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>clas.s.Test82</name>
      <ncss>25</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>24</javadocs>
    </object>
    <object>
      <name>poo.foo.Test83</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>yahoo.google.Test84</name>
      <ncss>52</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xml.xslt.Test85</name>
      <ncss>218</ncss>
      <functions>16</functions>
      <classes>1</classes>
      <javadocs>12</javadocs>
    </object>
    <object>
      <name>xml.xslt.Test85.SinkOutputStream</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86</name>
      <ncss>19</ncss>
      <functions>2</functions>
      <classes>2</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86.CompositeAnnotationProcessor</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86.NoOpAP</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>bla.poo.Filer</name>
      <ncss>6</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>boca.corba.Test88</name>
      <ncss>8</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89</name>
      <ncss>59</ncss>
      <functions>9</functions>
      <classes>6</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.AccessFilter</name>
      <ncss>14</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test9</name>
      <ncss>311</ncss>
      <functions>29</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test9.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile</name>
      <ncss>425</ncss>
      <functions>20</functions>
      <classes>4</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.PolicyEntry</name>
      <ncss>24</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyPermissions</name>
      <ncss>45</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>hallo.hello.Test91</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>lama.karma.Test92</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>bla.poo.Test93</name>
      <ncss>27</ncss>
      <functions>11</functions>
      <classes>2</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>bla.poo.Test93.UncaughtExceptionHandler</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>hope.pope.Test94</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>steve.jobs.Test95</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test96</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>bla.poo.Test98</name>
      <ncss>35</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99</name>
      <ncss>240</ncss>
      <functions>12</functions>
      <classes>8</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.ExternalData</name>
      <ncss>14</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntry</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet</name>
      <ncss>37</ncss>
      <functions>10</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEnvironment</name>
      <ncss>45</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringKeySet</name>
      <ncss>23</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringKeySet.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringValues</name>
      <ncss>27</ncss>
      <functions>9</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringValues.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.Value</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.Variable</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.AsciiFormatter</name>
      <ncss>130</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Formatter</name>
      <ncss>5</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.FunctionMetric</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Javancss</name>
      <ncss>359</ncss>
      <functions>41</functions>
      <classes>1</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>javancss.Javancss.WindowAdapter</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavancssAntTask</name>
      <ncss>302</ncss>
      <functions>45</functions>
      <classes>0</classes>
      <javadocs>46</javadocs>
    </object>
    <object>
      <name>javancss.JavancssFrame</name>
      <ncss>198</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>javancss.Main</name>
      <ncss>9</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.Metric</name>
      <ncss>25</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.ObjectMetric</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.PackageMetric</name>
      <ncss>19</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.XmlFormatter</name>
      <ncss>120</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.test.AbstractTest</name>
      <ncss>22</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>javancss.test.JavancssTest</name>
      <ncss>358</ncss>
      <functions>25</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>javancss.test.XmlFormatterTest</name>
      <ncss>38</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>javancss.parser.JavaParserInterface</name>
      <ncss>12</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.JavaParser15TokenManager</name>
      <ncss>1716</ncss>
      <functions>41</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.Token</name>
      <ncss>18</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.Token.GTToken</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager</name>
      <ncss>1716</ncss>
      <functions>41</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.debug.Token</name>
      <ncss>18</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>javancss.parser.java15.debug.Token.GTToken</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob</name>
      <ncss>311</ncss>
      <functions>29</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10</name>
      <ncss>555</ncss>
      <functions>96</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Test10.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Provider</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101</name>
      <ncss>256</ncss>
      <functions>16</functions>
      <classes>12</classes>
      <javadocs>22</javadocs>
    </object>
    <object>
      <name>Test101.CheckedEntrySet</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.CheckedSortedMap</name>
      <ncss>18</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.CopiesList</name>
      <ncss>17</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptyList</name>
      <ncss>10</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptyMap</name>
      <ncss>24</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptySet</name>
      <ncss>16</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.EmptySet.Iterator</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.Enumeration</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.ReverseComparator</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.ReverseComparator2</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonList</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonMap</name>
      <ncss>53</ncss>
      <functions>9</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonMap.ImmutableEntry</name>
      <ncss>21</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonSet</name>
      <ncss>21</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test101.SingletonSet.Iterator</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AClass</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AnEnum</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AnEnum</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test105</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.jboss.tutorial.composite.bean.EntityTestBean</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>ccl.util.Test11</name>
      <ncss>131</ncss>
      <functions>32</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test110</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test111</name>
      <ncss>4</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test112</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test112.Info</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test113</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test114</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser</name>
      <ncss>11660</ncss>
      <functions>779</functions>
      <classes>2</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser.JJCalls</name>
      <ncss>5</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.JavaParser.ModifierSet</name>
      <ncss>36</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test116</name>
      <ncss>12</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes</name>
      <ncss>14</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>TestEnum</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test12</name>
      <ncss>140</ncss>
      <functions>29</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.webify.webapp.wlib.palette.Test120</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test120</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test123</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>com.Test123</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.Example2</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test125</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>mypackage.service.Test126</name>
      <ncss>6</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ClassWithGenericizedConstructor</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test128</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>PerfTest</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>PerfTest.class</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test13</name>
      <ncss>33</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Bug</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test123</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test123.SimpleBean</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test132</name>
      <ncss>10</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test133</name>
      <ncss>12</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test134</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test135</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test136</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>MyClass</name>
      <ncss>3</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>MyClass.MyInterface</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>TestJavadocConstructor</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>Test14</name>
      <ncss>72</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>TestJavadocAnnotation</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>TestJavadocNew</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>TestJavadocNew.TestJavadocAnnotation</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>testPackage.TestInterface</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>testPackage.TestInterface.TestClass</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.example.ChildTree</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.example.ChildTree.Node</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.edorasframework.core.util.ClassDescriberTest</name>
      <ncss>12</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean</name>
      <ncss>8</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Class1</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Class2</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test147</name>
      <ncss>11</ncss>
      <functions>0</functions>
      <classes>3</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test147.Object</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test147.Object</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test147.test2</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test15</name>
      <ncss>36</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test16</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test16.Predicate</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test17</name>
      <ncss>72</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test18</name>
      <ncss>39</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test18.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test19</name>
      <ncss>9</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>AudioItem</name>
      <ncss>38</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>ImageLoop</name>
      <ncss>17</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>ImageLoopItem</name>
      <ncss>46</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>Daten</name>
      <ncss>187</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>InputWindow</name>
      <ncss>16</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Interface</name>
      <ncss>20</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>SelectFromListWindow</name>
      <ncss>18</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ShowMsgBox</name>
      <ncss>11</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>SimSoccer</name>
      <ncss>27</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Net</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Net</name>
      <ncss>8</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Neuron</name>
      <ncss>10</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Init</name>
      <ncss>44</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob2</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob3</name>
      <ncss>456</ncss>
      <functions>34</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>jacob.Jacob3.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test29</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob</name>
      <ncss>69</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test30</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>java.net.Socket</name>
      <ncss>87</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>24</javadocs>
    </object>
    <object>
      <name>java.sql.Connection</name>
      <ncss>25</ncss>
      <functions>19</functions>
      <classes>0</classes>
      <javadocs>20</javadocs>
    </object>
    <object>
      <name>java.text.DecimalFormat</name>
      <ncss>447</ncss>
      <functions>35</functions>
      <classes>0</classes>
      <javadocs>30</javadocs>
    </object>
    <object>
      <name>java.text.TextBoundaryData</name>
      <ncss>46</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test35</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test36</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test37</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test38</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>javancss.text.Test39</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Jacob</name>
      <ncss>11</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test40</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test41</name>
      <ncss>18</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
    </object>
    <object>
      <name>test.sdf</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test46</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>Test47</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test48</name>
      <ncss>14</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>MainJMenuBar</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something1</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Something2</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.swing.MainJMenuBar</name>
      <ncss>133</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>ccl.swing.MainJMenuBar.MainJMenu</name>
      <ncss>115</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test51</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test52</name>
      <ncss>12</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test52.Inner</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test53</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test54</name>
      <ncss>9</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test55</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>java.lang.Math</name>
      <ncss>92</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>34</javadocs>
    </object>
    <object>
      <name>java.lang.StrictMath</name>
      <ncss>77</ncss>
      <functions>34</functions>
      <classes>0</classes>
      <javadocs>34</javadocs>
    </object>
    <object>
      <name>idebughc.Event</name>
      <ncss>34</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>idebughc.Utilities</name>
      <ncss>118</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>ccl.util.Util</name>
      <ncss>555</ncss>
      <functions>96</functions>
      <classes>2</classes>
      <javadocs>22</javadocs>
    </object>
    <object>
      <name>ccl.util.Util.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ccl.util.Util.Predicate</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.Collect</name>
      <ncss>33</ncss>
      <functions>18</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>idebughc.Collect</name>
      <ncss>201</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>idebughc.Debug</name>
      <ncss>613</ncss>
      <functions>39</functions>
      <classes>0</classes>
      <javadocs>32</javadocs>
    </object>
    <object>
      <name>idebughc.Utilities</name>
      <ncss>326</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput</name>
      <ncss>62</ncss>
      <functions>7</functions>
      <classes>3</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.ActionListener</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.ActionListener</name>
      <ncss>19</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.WindowOutput.WindowAdapter</name>
      <ncss>1</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>idebughc.testsuite.TestSuiteThread</name>
      <ncss>299</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test66</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test67</name>
      <ncss>31</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test68</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test69</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test7</name>
      <ncss>30</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70</name>
      <ncss>4</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70.InnerClass</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test70Super</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71</name>
      <ncss>18</ncss>
      <functions>1</functions>
      <classes>4</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.Runnable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.Runnable</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.TestRun</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test71.TestRun</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test72</name>
      <ncss>53</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>Test73</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test74</name>
      <ncss>2</ncss>
      <functions>0</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test74.StaticInnerInterface</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75</name>
      <ncss>557</ncss>
      <functions>66</functions>
      <classes>2</classes>
      <javadocs>47</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75.AnyInputStream</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>corba.abroc.Test75.AnyOutputStream</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>swatch.watch.Test76</name>
      <ncss>379</ncss>
      <functions>40</functions>
      <classes>1</classes>
      <javadocs>6</javadocs>
    </object>
    <object>
      <name>swatch.watch.Test76.PrivilegedAction</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pac.kage.Test77</name>
      <ncss>35</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>pac.kage.Test77.PrivilegedAction</name>
      <ncss>7</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78</name>
      <ncss>30</ncss>
      <functions>2</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78.Runnable</name>
      <ncss>10</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>ho.ha.hi.Test78.java.security.PrivilegedAction</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79</name>
      <ncss>1330</ncss>
      <functions>50</functions>
      <classes>7</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator</name>
      <ncss>66</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.ColorizeImageFilter</name>
      <ncss>25</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.PeekableStringTokenizer</name>
      <ncss>23</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.Privileged</name>
      <ncss>65</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.PrivilegedAction</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.RoundRectClipShape</name>
      <ncss>116</ncss>
      <functions>18</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator</name>
      <ncss>64</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>plat.ch.Test79.TitlePaneLayout</name>
      <ncss>80</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>Test8</name>
      <ncss>30</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80</name>
      <ncss>87</ncss>
      <functions>15</functions>
      <classes>3</classes>
      <javadocs>2</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>4</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>holi.cow.MTest80.AbstractAction</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81</name>
      <ncss>85</ncss>
      <functions>10</functions>
      <classes>5</classes>
      <javadocs>6</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.BasicComboBoxUI.ComboBoxLayoutManager</name>
      <ncss>7</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.RolloverListener</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboBoxEditor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboPopup</name>
      <ncss>8</ncss>
      <functions>2</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.WindowsComboPopup.InvocationKeyHandler</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>pla.gi.at.Test81.XPComboBoxButton</name>
      <ncss>6</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>clas.s.Test82</name>
      <ncss>25</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>24</javadocs>
    </object>
    <object>
      <name>poo.foo.Test83</name>
      <ncss>1</ncss>
      <functions>0</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>yahoo.google.Test84</name>
      <ncss>52</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xml.xslt.Test85</name>
      <ncss>218</ncss>
      <functions>16</functions>
      <classes>1</classes>
      <javadocs>12</javadocs>
    </object>
    <object>
      <name>xml.xslt.Test85.SinkOutputStream</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86</name>
      <ncss>19</ncss>
      <functions>2</functions>
      <classes>2</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86.CompositeAnnotationProcessor</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>mirror.list.Test86.NoOpAP</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>bla.poo.Filer</name>
      <ncss>6</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>4</javadocs>
    </object>
    <object>
      <name>boca.corba.Test88</name>
      <ncss>8</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89</name>
      <ncss>59</ncss>
      <functions>9</functions>
      <classes>6</classes>
      <javadocs>9</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.AccessFilter</name>
      <ncss>14</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>oki.doki.Test89.DeclarationFilter</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test9</name>
      <ncss>311</ncss>
      <functions>29</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>test.Test9.TimelogFunctor</name>
      <ncss>5</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile</name>
      <ncss>425</ncss>
      <functions>20</functions>
      <classes>4</classes>
      <javadocs>19</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.PolicyEntry</name>
      <ncss>24</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>3</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>com.com.com.PolicyPermissions</name>
      <ncss>45</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>hallo.hello.Test91</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>lama.karma.Test92</name>
      <ncss>4</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>bla.poo.Test93</name>
      <ncss>27</ncss>
      <functions>11</functions>
      <classes>2</classes>
      <javadocs>7</javadocs>
    </object>
    <object>
      <name>bla.poo.Test93.UncaughtExceptionHandler</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>hope.pope.Test94</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>steve.jobs.Test95</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>Test96</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>bla.poo.Test98</name>
      <ncss>35</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>10</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99</name>
      <ncss>240</ncss>
      <functions>12</functions>
      <classes>8</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.ExternalData</name>
      <ncss>14</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntry</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet</name>
      <ncss>37</ncss>
      <functions>10</functions>
      <classes>2</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringEnvironment</name>
      <ncss>45</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringKeySet</name>
      <ncss>23</ncss>
      <functions>7</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringKeySet.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringValues</name>
      <ncss>27</ncss>
      <functions>9</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.StringValues.Iterator</name>
      <ncss>7</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.Value</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>xyz.bla.Test99.Variable</name>
      <ncss>16</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <averages>
      <ncss>104.26</ncss>
      <functions>9.54</functions>
      <classes>0.39</classes>
      <javadocs>2.28</javadocs>
    </averages>
    <ncss>102,412.00</ncss>
  </objects>

  <functions>
    <function>
      <name>javancss.AsciiFormatter._formatListHeader(int,String[])</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatListLine(String,String[])</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._divide(int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._divide(long,long)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatPackageMatrix(int,int,int,int,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.AsciiFormatter(Javancss)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printPackageNcss()</name>
      <ncss>21</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatObjectResume(int,long,long,long,long)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printObjectNcss()</name>
      <ncss>21</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatFunctionResume(int,long,long,long)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printFunctionNcss()</name>
      <ncss>19</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printPackageNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printObjectNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printFunctionNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printJavaNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.FunctionMetric.FunctionMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.FunctionMetric.clear()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.createSourceReader(File)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureSource(File)</name>
      <ncss>28</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureSource(Reader)</name>
      <ncss>32</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureFiles(List)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureRoot(Reader)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getImports()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFunctions()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printObjectNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printFunctionNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printPackageNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(List)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(File)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.parseImports()</name>
      <ncss>33</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setSourceFile(File)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(Reader)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._addJavaFiles(File,List)</name>
      <ncss>11</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.findFiles(List,boolean)</name>
      <ncss>33</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.WindowAdapter.windowClosing(WindowEvent)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(String[],String)</name>
      <ncss>62</ncss>
      <ccn>26</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLOC()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getJvdc()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getJdcl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getSl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getMl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFunctionMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getObjectMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getPackageMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLastErrorMessage()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLastError()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setExit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setXML(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.useXML()</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFormatter()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getEncoding()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setEncoding(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.newReader(InputStream)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.newReader(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.save()</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame._setMenuBar()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.getInit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.JavancssFrame(Init)</name>
      <ncss>23</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.showJavancss(Javancss)</name>
      <ncss>61</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.run()</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.setVisible(boolean)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.setSelectedTab(String)</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.actionPerformed(ActionEvent)</name>
      <ncss>23</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Main.main(String[])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.Metric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.clear()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.compareTo(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.ObjectMetric.ObjectMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.ObjectMetric.clear()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.PackageMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.clear()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.add(PackageMetric)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._divide(int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._divide(long,long)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatPackageMatrix(int,int,int,int,int,int,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.XmlFormatter(Javancss)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printPackageNcss()</name>
      <ncss>25</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatObjectResume(int,long,long,long,long,long,long,long)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printObjectNcss()</name>
      <ncss>22</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatFunctionResume(int,long,long,long,long,long,long)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printFunctionNcss()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printStart()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.setTestDir(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestDir()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestFile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.AbstractTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.bugIf(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.bugIf(boolean,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.Assert(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.Assert(boolean,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.measureTestFile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcss(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcss(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int,int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testJavadocs()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testJavadocLines()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(int,String,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(javadocLines[],String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(Javancss,String,int)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.JavancssTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testNcss()</name>
      <ncss>136</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testNcssAndMore()</name>
      <ncss>71</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJvdcs(int,int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testCCN()</name>
      <ncss>19</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.assertCCN(List,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.measureWithArgs(String[])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testEncoding()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.testParsing()</name>
      <ncss>16</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.testXML2Text()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.XmlFormatterTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.getXslFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._gnudoit(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setNewEmacsWidth()</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setProjectSuffix()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.Jacob(Controller,String[])</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.loadProject()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.save()</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.showClasses()</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openOldProject(String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.createMakefile()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.setClassDependencies()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editFile(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.startJavaLanguageSpecHelp()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.insertPackage()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.removePackage()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._selectClasses(String,boolean)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.readFile(URL)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swapInt(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swapInt()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.objectsToVector(Object[])</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,Vector)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Provider.Service(Provider)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedEntrySet.CheckedEntrySet(V,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.checkedSortedMap(V,K,V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.CheckedSortedMap(V,K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.comparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.firstKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.lastKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.subMap(K,K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.headMap(K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.tailMap(K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.iterator()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptyList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.get(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptyMap()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.get(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.keySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.values()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.entrySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singleton(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.SingletonSet(E)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.next()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.iterator()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singletonList(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.SingletonList(E)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.get(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singletonMap(K,V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.SingletonMap(K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.get(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.keySet()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.entrySet()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.values()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.ImmutableEntry(K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.setValue(V)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.hashCode()</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.nCopies(int,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.CopiesList(int,E)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.get(int)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.reverseOrder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator.compare(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.reverseOrder(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator2.ReverseComparator2(T)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator2.compare(T,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.Enumeration.hasMoreElements()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.Enumeration.nextElement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.enumeration(T)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.list(T)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.eq(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.frequency(Collection,Object)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.disjoint(Collection,Collection)</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.addAll(T,T)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AClass.AClass(int,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AClass.getN()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AClass.getS()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AnEnum.aMethod()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AnEnum.aMethod()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test105.Test105(String[],String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid1(Bar.Info)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid2(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid(T.Info)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.Test113(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug0(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug1(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug2(Object)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test114.Javancss(String[],String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser._formatPackage(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getLOC()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getJvdc()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getFunction()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getObject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getImports()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getPackageObjects()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getLastFunction()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isPublic(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isProtected(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isPrivate(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isStatic(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isAbstract(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isFinal(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isNative(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isStrictfp(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isSynchronized(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isTransient(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isVolatile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.removeModifier(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CompilationUnit()</name>
      <ncss>124</ncss>
      <ccn>54</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImportUnit()</name>
      <ncss>60</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PackageDeclaration()</name>
      <ncss>28</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImportDeclaration()</name>
      <ncss>33</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeDeclaration()</name>
      <ncss>53</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassDeclaration()</name>
      <ncss>77</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnmodifiedClassDeclaration()</name>
      <ncss>57</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassBody()</name>
      <ncss>40</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NestedClassDeclaration()</name>
      <ncss>64</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassBodyDeclaration()</name>
      <ncss>80</ncss>
      <ccn>39</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarationLookahead()</name>
      <ncss>67</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InterfaceDeclaration()</name>
      <ncss>64</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NestedInterfaceDeclaration()</name>
      <ncss>63</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnmodifiedInterfaceDeclaration()</name>
      <ncss>80</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InterfaceMemberDeclaration()</name>
      <ncss>47</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldDeclaration()</name>
      <ncss>82</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableDeclarator()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableDeclaratorId()</name>
      <ncss>24</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableInitializer()</name>
      <ncss>40</ncss>
      <ccn>33</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArrayInitializer()</name>
      <ncss>51</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclaration()</name>
      <ncss>162</ncss>
      <ccn>53</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarator()</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameters()</name>
      <ncss>34</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameter()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConstructorDeclaration()</name>
      <ncss>148</ncss>
      <ccn>68</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExplicitConstructorInvocation()</name>
      <ncss>46</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Initializer()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Type()</name>
      <ncss>46</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldTypeLookahead()</name>
      <ncss>29</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimitiveType()</name>
      <ncss>30</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ResultType()</name>
      <ncss>22</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Name()</name>
      <ncss>22</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldTypeNameLookahead()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NameList()</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Expression()</name>
      <ncss>40</ncss>
      <ccn>33</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Assignment()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssignmentOperator()</name>
      <ncss>42</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalExpression()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalOrExpression()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalAndExpression()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InclusiveOrExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExclusiveOrExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AndExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EqualityExpression()</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InstanceOfExpression()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.RelationalExpression()</name>
      <ncss>31</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ShiftExpression()</name>
      <ncss>27</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AdditiveExpression()</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MultiplicativeExpression()</name>
      <ncss>27</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnaryExpression()</name>
      <ncss>54</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PreIncrementExpression()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PreDecrementExpression()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnaryExpressionNotPlusMinus()</name>
      <ncss>55</ncss>
      <ccn>35</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CastLookahead()</name>
      <ncss>60</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PostfixLookahead()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PostfixExpression()</name>
      <ncss>19</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CastExpression()</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimaryExpression()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimaryPrefix()</name>
      <ncss>53</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimarySuffix()</name>
      <ncss>29</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Literal()</name>
      <ncss>25</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BooleanLiteral()</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NullLiteral()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Arguments()</name>
      <ncss>37</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArgumentList()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AllocationExpression()</name>
      <ncss>52</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArrayDimsAndInits()</name>
      <ncss>36</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Statement()</name>
      <ncss>86</ncss>
      <ccn>43</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.LabeledStatement()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssertStatementLookahead()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssertStatement()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Block()</name>
      <ncss>52</ncss>
      <ccn>44</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BlockStatement()</name>
      <ncss>58</ncss>
      <ccn>44</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.LocalVariableDeclaration()</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EmptyStatement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.StatementExpression()</name>
      <ncss>81</ncss>
      <ccn>59</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SwitchStatement()</name>
      <ncss>69</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SwitchLabel()</name>
      <ncss>21</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.IfStatement()</name>
      <ncss>17</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.WhileStatement()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.DoStatement()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForStatement()</name>
      <ncss>144</ncss>
      <ccn>114</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForInit()</name>
      <ncss>36</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.StatementExpressionList()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForUpdate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BreakStatement()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ContinueStatement()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReturnStatement()</name>
      <ncss>41</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ThrowStatement()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SynchronizedStatement()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TryStatement()</name>
      <ncss>28</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Identifier()</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Annotation()</name>
      <ncss>15</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NormalAnnotation()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MarkerAnnotation()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SingleMemberAnnotation()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValuePairs()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValuePair()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValue()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValueArrayInitializer()</name>
      <ncss>52</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeDeclaration(int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeBody()</name>
      <ncss>39</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeMemberDeclaration()</name>
      <ncss>81</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.DefaultValue()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Modifiers()</name>
      <ncss>85</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceDeclaration(int)</name>
      <ncss>34</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumDeclaration(int)</name>
      <ncss>37</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeParameters()</name>
      <ncss>34</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExtendsList(boolean)</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImplementsList(boolean)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceBody(boolean)</name>
      <ncss>42</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumBody()</name>
      <ncss>79</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeParameter()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceType()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceBodyDeclaration(boolean)</name>
      <ncss>92</ncss>
      <ccn>66</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumConstant()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeBound()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeArguments()</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeArgument()</name>
      <ncss>31</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReferenceType()</name>
      <ncss>33</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.WildcardBounds()</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldDeclaration15(int)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclaration15(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarator15()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameters15()</name>
      <ncss>41</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameter15()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberSelector()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_1(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_2(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_3(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_4(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_5(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_6(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_7(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_8(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_9(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_10(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_11(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_12(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_13(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_14(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_15(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_16(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_17(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_18(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_19(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_20(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_21(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_22(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_23(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_24(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_25(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_26(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_27(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_28(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_29(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_30(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_31(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_32(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_33(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_34(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_35(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_36(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_37(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_38(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_39(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_40(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_41(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_42(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_43(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_44(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_45(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_46(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_47(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_48(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_49(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_50(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_51(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_52(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_53(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_54(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_55(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_56(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_57(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_58(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_59(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_60(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_61(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_62(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_63(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_64(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_65(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_551()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_562()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_472()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_444()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_113()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_561()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_550()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_3()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_428()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_78()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_112()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_530()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_445()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_411()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_2()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_486()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_382()</name>
      <ncss>34</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_111()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_110()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_462()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_560()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_436()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_559()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_558()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_549()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_404()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_109()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_403()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_402()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_381()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_108()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_380()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_343()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_316()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_44()</name>
      <ncss>41</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_295()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_294()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_293()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_272()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_292()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_230()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_145()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_529()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_379()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_107()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_106()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_437()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_439()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_358()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_357()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_356()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_355()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_354()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_438()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_353()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_352()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_40()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_351()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_350()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_349()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_435()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_348()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_43()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_347()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_346()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_77()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_345()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_1()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_344()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_317()</name>
      <ncss>83</ncss>
      <ccn>66</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_42()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_461()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_460()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_420()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_397()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_62()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_459()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_367()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_39()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_325()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_41()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_458()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_457()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_368()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_456()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_61()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_455()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_104()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_454()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_328()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_417()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_327()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_218()</name>
      <ncss>27</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_453()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_434()</name>
      <ncss>48</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_326()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_60()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_399()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_433()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_103()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_38()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_15()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_65()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_418()</name>
      <ncss>47</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_396()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_497()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_310()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_281()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_452()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_136()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_64()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_395()</name>
      <ncss>22</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_261()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_135()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_297()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_340()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_339()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_419()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_181()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_432()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_338()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_313()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_134()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_324()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_174()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_59()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_451()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_244()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_290()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_366()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_268()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_289()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_284()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_365()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_323()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_180()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_185()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_522()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_450()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_296()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_431()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_92()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_184()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_173()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_133()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_226()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_304()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_225()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_303()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_137()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_63()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_302()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_301()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_300()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_416()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_179()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_131()</name>
      <ncss>36</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_521()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_299()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_276()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_172()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_496()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_314()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_215()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_214()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_520()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_178()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_57()</name>
      <ncss>33</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_132()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_213()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_171()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_130()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_56()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_37()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_32()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_55()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_364()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_36()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_258()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_322()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_177()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_519()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_363()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_101()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_35()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_170()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_362()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_361()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_34()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_250()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_257()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_360()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_518()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_176()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_517()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_516()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_495()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_321()</name>
      <ncss>32</ncss>
      <ccn>27</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_169()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_256()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_481()</name>
      <ncss>36</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_249()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_53()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_14()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_248()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_285()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_13()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_247()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_58()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_298()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_90()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_175()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_31()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_255()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_12()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_544()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_89()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_168()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_33()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_52()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_11()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_54()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_543()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_374()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_273()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_288()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_542()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_246()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_491()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_186()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_245()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_265()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_275()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_541()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_373()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_333()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_287()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_242()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_540()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_254()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_539()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_501()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_94()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_243()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_30()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_267()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_286()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_241()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_253()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_335()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_183()</name>
      <ncss>29</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_29()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_252()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_334()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_309()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_490()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_359()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_251()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_308()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_320()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_97()</name>
      <ncss>22</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_266()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_274()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_26()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_240()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_492()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_28()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_27()</name>
      <ncss>55</ncss>
      <ccn>49</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_443()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_201()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_319()</name>
      <ncss>38</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_424()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_98()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_25()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_24()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_23()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_224()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_306()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_280()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_279()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_567()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_305()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_278()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_557()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_259()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_277()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_566()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_548()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_556()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_372()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_545()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_528()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_511()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_565()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_555()</name>
      <ncss>22</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_547()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_371()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_527()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_515()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_370()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_546()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_332()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_524()</name>
      <ncss>22</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_526()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_510()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_331()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_369()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_330()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_200()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_329()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_307()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_182()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_525()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_485()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_514()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_499()</name>
      <ncss>27</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_513()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_483()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_199()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_523()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_512()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_509()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_494()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_484()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_478()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_91()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_471()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_498()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_239()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_198()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_406()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_482()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_442()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_197()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_409()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_408()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_470()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_407()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_405()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_401()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_393()</name>
      <ncss>39</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_238()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_196()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_441()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_423()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_376()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_422()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_337()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_195()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_237()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_129()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_400()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_152()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_312()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_194()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_128()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_375()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_236()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_193()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_127()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_336()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_151()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_159()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_126()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_192()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_311()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_125()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_235()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_191()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_282()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_124()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_158()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_150()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_123()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_190()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_263()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_234()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_122()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_162()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_96()</name>
      <ncss>63</ncss>
      <ccn>50</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_189()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_149()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_157()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_121()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_22()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_262()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_233()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_120()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_148()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_220()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_119()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_474()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_156()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_161()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_105()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_219()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_118()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_446()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_232()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_51()</name>
      <ncss>63</ncss>
      <ccn>50</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_155()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_80()</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_147()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_86()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_160()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_447()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_429()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_166()</name>
      <ncss>48</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_231()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_165()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_167()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_21()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_146()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_88()</name>
      <ncss>35</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_83()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_154()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_10()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_378()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_85()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_9()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_480()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_479()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_469()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_8()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_153()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_84()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_468()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_164()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_7()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_82()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_20()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_467()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_6()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_50()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_476()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_163()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_466()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_87()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_465()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_464()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_5()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_217()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_463()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_440()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_102()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_216()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_49()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_209()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_208()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_207()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_489()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_206()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_504()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_205()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_204()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_203()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_283()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_99()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_202()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_377()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_508()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_264()</name>
      <ncss>30</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_503()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_342()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_116()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_223()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_500()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_222()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_507()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_117()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_221()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_506()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_211()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_212()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_260()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_505()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_502()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_493()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_477()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_341()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_210()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_100()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_315()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_291()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_421()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_115()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_488()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_144()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_270()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_398()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_81()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_18()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_271()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_19()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_48()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_269()</name>
      <ncss>25</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_47()</name>
      <ncss>25</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_475()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_449()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_487()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_229()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_448()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_430()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_228()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_138()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_227()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_188()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_95()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_187()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_538()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_537()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_318()</name>
      <ncss>33</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_392()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_391()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_390()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_536()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_415()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_535()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_389()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_571()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_554()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_534()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_388()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_93()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_17()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_387()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_16()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_564()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_114()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_414()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_413()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_46()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_553()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_570()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_143()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_531()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_569()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_412()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_45()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_568()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_563()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_552()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_532()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_142()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_533()</name>
      <ncss>29</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_386()</name>
      <ncss>29</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_427()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_141()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_385()</name>
      <ncss>30</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_426()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_384()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_425()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_410()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_140()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_394()</name>
      <ncss>50</ncss>
      <ccn>42</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_383()</name>
      <ncss>29</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_473()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_139()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_4()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_79()</name>
      <ncss>28</ncss>
      <ccn>22</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(java.io.InputStream)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(java.io.InputStream)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(java.io.Reader)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(java.io.Reader)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(JavaParserTokenManager)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(JavaParserTokenManager)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_consume_token(int)</name>
      <ncss>21</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_scan_token(int)</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getNextToken()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getToken(int)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_ntk()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_add_error_token(int,int)</name>
      <ncss>25</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.generateParseException()</name>
      <ncss>31</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.enable_tracing()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.disable_tracing()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_rescan_token()</name>
      <ncss>206</ncss>
      <ccn>69</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_save(int,int)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test116.methodica()</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.TempBooleanAttributes(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.isSingleValued()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getTrueString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getFalseString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.equals(BooleanAttribute)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestEnum.TestEnum(Type)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestEnum.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.readFile(URL)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test120.getFiles()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test120.getFile()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test123.getFile()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.Test123.finalize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.Example2.Example2()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test125.save(ManagedFile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.world()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.getLocation(LocationKey)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.insertLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.updateLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.deleteLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ClassWithGenericizedConstructor.ClassWithGenericizedConstructor(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test128.update(Component,UpdateStrategy)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>PerfTest.class.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>PerfTest.startTests()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Bug.Bug()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test123.SimpleBean.hasAnnotation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test123.SimpleBean.doesNotHaveAnnotation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test123.testAnnotationLimiter()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test132.Test132()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test133.convertIntoKnownBaseType(Object,Class)</name>
      <ncss>11</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test134.main(String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test16.Predicate.test(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test16.filter()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test17.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test17.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.foo(String[],Controller)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.Jacob(Controller,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.foo2(int,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.Something()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AudioItem.next()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.init()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.start()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.stop()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.mouseUp(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.paint(Graphics)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoop.ImageLoop(URL,String,ImageLoopItem)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.init()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.run()</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.paint(Graphics)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.update(Graphics)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.start()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.stop()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.mouseDown(int,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Daten._lesenDateien()</name>
      <ncss>28</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.init()</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putDatei(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.doPlan()</name>
      <ncss>99</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putAnzGamer(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putNextGamer(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putVerein(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putStadionname(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.getVereine()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>InputWindow.InputWindow(Interface,String,String)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>InputWindow.action(Event,Object)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SelectFromListWindow.SelectFromListWindow(Interface,String,String[])</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SelectFromListWindow.action(Event,Object)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ShowMsgBox.ShowMsgBox(Frame,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ShowMsgBox.action(Event,Object)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.Interface()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.putInput(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.putInput(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.input(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.selectFromList(String,String[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SimSoccer._init()</name>
      <ncss>22</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SimSoccer.main(String[])</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._getNeurons()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setInputNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setUnivers(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setStartPosition(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.nextStep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Net._getNeurons()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setInputNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setUnivers(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setStartPosition(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.nextStep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Neuron.getWeight()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.setWeight(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.distanceTo(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.moveTo(InputNeuron,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Neuron.addNeighbor(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.addMetaNeighbor(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.getNeighbors()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.getMetaNeighbors()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init._setProjectPath()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.start()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.setProjectFullName(String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getProjectFullName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getProjectPath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getTextBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getListBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob2.createMakefile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob2.test()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._gnudoit(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(Package,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getRcsVersion()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getRcs()</name>
      <ncss>25</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakefileAll()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClean()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakefileZip()</name>
      <ncss>42</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakePublic()</name>
      <ncss>56</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.Jacob3(Controller,String[])</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.loadProject()</name>
      <ncss>14</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.save()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.showClasses()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openOldProject(String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.createMakefile()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editFile(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.startJavaLanguageSpecHelp()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.insertPackage()</name>
      <ncss>24</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.removePackage()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._selectClasses(String,boolean)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.selectMainClass()</name>
      <ncss>24</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.removeClasses()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.addClasses()</name>
      <ncss>39</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.exit()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test30.filter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(SocketImpl)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int,InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,InetAddress,int,boolean)</name>
      <ncss>18</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getInetAddress()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getLocalAddress()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getPort()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getLocalPort()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getInputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getOutputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setTcpNoDelay(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getTcpNoDelay()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSoLinger(boolean,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getSoLinger()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSoTimeout(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getSoTimeout()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.close()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSocketImplFactory(SocketImplFactory)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.createStatement()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.prepareStatement(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.prepareCall(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.nativeSQL(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setAutoCommit(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getAutoCommit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.commit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.rollback()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.isClosed()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getMetaData()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setReadOnly(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.isReadOnly()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setCatalog(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getCatalog()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setTransactionIsolation(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getTransactionIsolation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getWarnings()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.clearWarnings()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat(String,DecimalFormatSymbols)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.format(double,StringBuffer,FieldPosition)</name>
      <ncss>23</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.format(long,StringBuffer,FieldPosition)</name>
      <ncss>23</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.parse(String,ParsePosition)</name>
      <ncss>118</ncss>
      <ccn>59</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getDecimalFormatSymbols()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setDecimalFormatSymbols(DecimalFormatSymbols)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getPositivePrefix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setPositivePrefix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getNegativePrefix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setNegativePrefix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getPositiveSuffix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setPositiveSuffix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getNegativeSuffix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setNegativeSuffix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getMultiplier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setMultiplier(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getGroupingSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setGroupingSize(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isDecimalSeparatorAlwaysShown()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.clone()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toLocalizedPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toPattern(boolean)</name>
      <ncss>32</ncss>
      <ccn>19</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyPattern(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyLocalizedPattern(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyPattern(String,boolean)</name>
      <ncss>125</ncss>
      <ccn>34</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.appendNativeDigits(StringBuffer,FieldPosition)</name>
      <ncss>29</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isSpecialChar(char)</name>
      <ncss>2</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isLongMIN_VALUE(DigitList)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.readObject(ObjectInputStream)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.forward()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.backward()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.map()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.text.Test39.Test39()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.text.Test39.run()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.removePackage()</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test40.Test40(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.getI()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.setI(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.Test41(int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.darwinize()</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.dummy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.Test46()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.filter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.main(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test47.filter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test48.Test48()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test48.foo()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>MainJMenuBar.MainJMenuBar(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.Something1()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.Something2()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenuBar(Vector,MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.updateMenu()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getOldFileItems(Init)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getMenuBodyElements(Vector,Init)</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getHelpBroker(MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.MainJMenu(Vector,MainJFrame)</name>
      <ncss>58</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.removeOldFileItems()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.insertOldFiles(MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.methodTest52()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Test52()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Test52(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Inner.Inner()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test53.Test53(String,Object,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test53.Test53(String,Object,String,String[])</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test54.Test54(Fd2Record)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test55.Test55(Hashtable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test55.Test56(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.Math.Math()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.sin(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.cos(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.tan(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.asin(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.acos(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.atan(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.toRadians(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.toDegrees(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.exp(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.log(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.sqrt(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.IEEEremainder(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.ceil(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.floor(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.rint(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.atan2(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.pow(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.round(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.round(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.initRNG()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.Math.random()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(float)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(double)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.StrictMath()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.sin(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.cos(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.tan(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.asin(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.acos(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.atan(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.toRadians(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.toDegrees(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.exp(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.log(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.sqrt(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.IEEEremainder(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.ceil(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.floor(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.rint(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.atan2(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.pow(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.round(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.round(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.initRNG()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.random()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(float)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(double)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.equals(Object)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.Event(String,String,String,String,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getSourceHost()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getSourceComponent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getCreationDate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getDescription()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.Utilities(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.printStackTrace()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStack()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStackSafe()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.addClassToHashtable(Hashtable,String)</name>
      <ncss>13</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.removeClassFromHashtable(Hashtable,String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.levelTest(int)</name>
      <ncss>15</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.categoryTest(String)</name>
      <ncss>22</ncss>
      <ccn>16</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.sourceClassValid()</name>
      <ncss>47</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.readFile(URL)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swapInt(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swapInt()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.objectsToVector(Object[])</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,Vector)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.Collect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkDebugCollectRef(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.setDebug(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.register(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkStatisticID(Statistic)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.unregister(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isRegistered(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.currentValue(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.report(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reportAll()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reset(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.set(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidCategory(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidLevel(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.Collect()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkDebugCollectRef(Debug)</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.setDebug(Debug)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.register(Statistic)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkStatisticID(Statistic)</name>
      <ncss>23</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.unregister(Statistic)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isRegistered(Statistic)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.currentValue(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.report(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reportAll()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reset(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.set(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidCategory(String)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidLevel(int)</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_checkDebugCollectRef(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_checkStatisticID(Statistic)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_isRegistered(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.clone()</name>
      <ncss>15</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.Debug()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.Debug(DebugConstants,Collect)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.setOutputInterface(DebugOutput)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getAssert()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getCollect()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getOutputInterface()</name>
      <ncss>23</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getDebugConstants()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOn()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOn(Thread)</name>
      <ncss>24</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOff()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOff(Thread)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.turnOn()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.turnOff()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addCategory(String,int)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeCategory(String)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.containsCategory(String)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listCategories()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addClass(Class)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addClass(String)</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeClass(Class)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeClass(String)</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getContext(Thread)</name>
      <ncss>23</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addContext(Context)</name>
      <ncss>24</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeContext(Context)</name>
      <ncss>24</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listClasses()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.setLevel(int)</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getLevel()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listThreads()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.init(DebugConstants,Collect)</name>
      <ncss>34</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addCategoryToHashtable(Hashtable,String,int)</name>
      <ncss>35</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeCategoryFromHashtable(Hashtable,String)</name>
      <ncss>21</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getOutputInterface()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getAssert()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getCollect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getDebugConstants()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.Utilities(Debug)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.printStackTrace()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStackSafe()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.addClassToHashtable(Hashtable,String)</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.removeClassFromHashtable(Hashtable,String)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.levelTest(int)</name>
      <ncss>51</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.categoryTest(String)</name>
      <ncss>65</ncss>
      <ccn>18</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.sourceClassValid()</name>
      <ncss>92</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.getWriter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.clone()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.WindowOutput(Debug)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.ActionListener.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.ActionListener.actionPerformed(ActionEvent)</name>
      <ncss>19</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.WindowAdapter.windowClosing(WindowEvent)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.createUI()</name>
      <ncss>45</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.TestSuiteThread(String)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.run()</name>
      <ncss>188</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.interrupt()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.isInterrupted()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.destroy()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.getContextClassLoader()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.setContextClassLoader(java.lang.ClassLoader)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test66.Test66()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test67.assert(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test67.main(String[])</name>
      <ncss>27</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test68.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test7.foo()</name>
      <ncss>29</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test70.InnerClass.test()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.Runnable.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.Runnable.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.TestRun.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.main(String[])</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.TestRun.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.testPWS()</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test72.testPWU10()</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test72.intersect(BoundingBox)</name>
      <ncss>2</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.verboseIntersect(BoundingBox)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.testQuestionMark()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyInputStream.AnyInputStream(EncapsInputStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyOutputStream.AnyOutputStream(ORB)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyOutputStream.create_input_stream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.convertToNative(ORB,Any)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyImpl(ORB)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyImpl(ORB,Any)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.type()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.realType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.realType(TypeCode)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.type(TypeCode)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.equal(Any)</name>
      <ncss>67</ncss>
      <ccn>62</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.equalMember(TypeCode,InputStream,InputStream)</name>
      <ncss>95</ncss>
      <ccn>80</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.create_output_stream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.create_input_stream()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.read_value(org.omg.CORBA.portable.InputStream,TypeCode)</name>
      <ncss>21</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.write_value(OutputStream)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Streamable(Streamable)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Streamable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_short(short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.getTCKindName(int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.checkExtractBadOperation(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.checkExtractBadOperationList(tcName[])</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_short()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_long(int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_long()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ushort(short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ushort()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ulong(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ulong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_float(float)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_float()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_double(double)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_double()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_longlong(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_longlong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ulonglong(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ulonglong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_boolean(boolean)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_boolean()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_char(char)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_char()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_wchar(char)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_wchar()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_octet(byte)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_octet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_string(String)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_string()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_wstring(String)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_wstring()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_any(Any)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_any()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Object(org.omg.CORBA.Object)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Object(org.omg.CORBA.Object,TypeCode)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Object()</name>
      <ncss>11</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_TypeCode(TypeCode)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_TypeCode()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Principal(Principal)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Principal()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Value()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Value(Serializable)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Value(Serializable,org.omg.CORBA.TypeCode)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_fixed(java.math.BigDecimal)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_fixed(java.math.BigDecimal,org.omg.CORBA.TypeCode)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_fixed()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.createTypeCodeForClass(java.lang.Class,ORB)</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.getPrimitiveTypeCodeForClass(Class,ORB)</name>
      <ncss>29</ncss>
      <ccn>20</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extractAny(TypeCode,ORB)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extractAnyFromStream(TypeCode,InputStream,ORB)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.isInitialized()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.PrivilegedAction.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.IIOPOutputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.beginOptionalCustomData()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.setOrbStream(org.omg.CORBA_2_3.portable.OutputStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.getOrbStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.increaseRecursionDepth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.decreaseRecursionDepth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeObjectOverride(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.simpleWriteObject(Object,byte)</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.getFieldsNoCopy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.defaultWriteObjectDelegate()</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.enableReplaceObjectDelegate(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.annotateClass(Class)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.drain()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.flush()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.replaceObject(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.reset()</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(byte[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(byte[],int,int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeBoolean(boolean)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeByte(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeBytes(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeChar(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeChars(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeDouble(double)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeFloat(float)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeInt(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeLong(long)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeShort(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeStreamHeader()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.internalWriteUTF(org.omg.CORBA.portable.OutputStream,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeUTF(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.checkSpecialClasses(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.checkSubstitutableSpecialClasses(Object)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.outputObject(Object)</name>
      <ncss>27</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.invokeObjectWriter(ObjectStreamClass,Object)</name>
      <ncss>19</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeField(ObjectStreamField,Object)</name>
      <ncss>56</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeObjectField(ObjectStreamField,Object)</name>
      <ncss>33</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.outputClassFields(Object,Class,ObjectStreamField[])</name>
      <ncss>46</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.PrivilegedAction.run()</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.JNDIStateFactoryImpl()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.getStateToBind(Object,Name,Context,Hashtable)</name>
      <ncss>18</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.getORB(Context)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.Runnable.run()</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.java.security.PrivilegedAction.run()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.addToQueue(ImageInputStream)</name>
      <ncss>24</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.removeFromQueue(ImageInputStream)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Metacity(String)</name>
      <ncss>60</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getTitlePaneLayout()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getRoundedClipShape(int,int,int,int,int,int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.paintButtonBackground(SynthContext,Graphics,int,int,int,int)</name>
      <ncss>71</ncss>
      <ccn>27</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawButton(Node,String,String,Graphics,int,int,JInternalFrame)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.paintFrameBorder(SynthContext,Graphics,int,int,int,int)</name>
      <ncss>69</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Privileged.doPrivileged(int,Object)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Privileged.run()</name>
      <ncss>55</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getThemeDir(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getUserTheme()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.tileImage(Graphics,Image,int,int,int,int,int[])</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getImage(String,Color)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getImage(String)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.ColorizeImageFilter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.setColor(Color)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.colorize(Image,Color)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.filterRGB(int,int,int)</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.findChild(JComponent,String)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.addLayoutComponent(String,Component)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.removeLayoutComponent(Component)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.preferredLayoutSize(Container)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.minimumLayoutSize(Container)</name>
      <ncss>40</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.layoutContainer(Container)</name>
      <ncss>35</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getFrameGeometry()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.setFrameGeometry(JComponent,Map)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getInt(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBoolean(String,boolean)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawArc(Node,Graphics)</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawLine(Node,Graphics)</name>
      <ncss>17</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawRectangle(Node,Graphics)</name>
      <ncss>17</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTile(Node,Graphics,JInternalFrame)</name>
      <ncss>32</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTint(Node,Graphics)</name>
      <ncss>20</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTitle(Node,Graphics,JInternalFrame)</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateButtonSize(JComponent)</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateTitleArea(JInternalFrame)</name>
      <ncss>22</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateTitleTextWidth(Graphics,JInternalFrame)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.setClip(Node,Graphics)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKArrow(Node,Graphics)</name>
      <ncss>50</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKBox(Node,Graphics)</name>
      <ncss>36</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKVLine(Node,Graphics)</name>
      <ncss>19</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGradient(Node,Graphics)</name>
      <ncss>28</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawImage(Node,Graphics)</name>
      <ncss>35</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawIcon(Node,Graphics,JInternalFrame)</name>
      <ncss>24</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawInclude(Node,Graphics,JInternalFrame)</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.draw(Node,Graphics,JInternalFrame)</name>
      <ncss>55</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawPiece(Node,Graphics,String,int,int,int,int,JInternalFrame)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBorderInsets(SynthContext,Insets)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.logError(String,Exception)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.logError(String,String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PrivilegedAction.run()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getXMLDoc(URL)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNodesByName(Node,String)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(String,String[])</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(Node,String,String[])</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(NodeList,String,String[])</name>
      <ncss>22</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getStringAttr(Node,String)</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getStringAttr(NamedNodeMap,String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBooleanAttr(Node,String,boolean)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getIntAttr(Node,String,int)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getFloatAttr(Node,String,float)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.parseColor(String)</name>
      <ncss>22</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.parseColor2(String)</name>
      <ncss>47</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.evaluate(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.evaluate(String,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.expression()</name>
      <ncss>22</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.getTermValue()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.getFactorValue()</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.PeekableStringTokenizer(String,String,boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.peek()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.hasMoreTokens()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.nextToken()</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundRectClipShape()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundRectClipShape(int,int,int,int,int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.setRoundedRect(int,int,int,int,int,int,int)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getX()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getY()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getArcWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getArcHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getBounds2D()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getCornerFlags()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.setFrame(double,double,double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.contains(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.classify(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.intersects(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.contains(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getPathIterator(AffineTransform)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.RoundishRectIterator(RoundRectClipShape,AffineTransform)</name>
      <ncss>31</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.getWindingRule()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.isDone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.currentSegment(int[])</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.currentSegment(int[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test8.foo()</name>
      <ncss>29</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.createUI(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.MotifInternalFrameUI(JInternalFrame)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installUI(JComponent)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installDefaults()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installKeyboardActions()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.uninstallDefaults()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.getFrame()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.createNorthPane(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.getMaximumSize(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.uninstallKeyboardActions()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setupMenuOpenKey()</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setupMenuCloseKey()</name>
      <ncss>26</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.activateFrame(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.deactivateFrame(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setColors(JInternalFrame)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createUI(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.installUI(JComponent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.uninstallUI(JComponent)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.paintCurrentValue(Graphics,Rectangle,boolean)</name>
      <ncss>12</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.getPreferredSize(JComponent)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.BasicComboBoxUI.ComboBoxLayoutManager.layoutContainer(Container)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createLayoutManager()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.installKeyboardActions()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createPopup()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createEditor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createArrowButton()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.XPComboBoxButton.XPComboBoxButton()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.XPComboBoxButton.getPreferredSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.RolloverListener.mouseEntered(MouseEvent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.RolloverListener.mouseExited(MouseEvent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.WindowsComboPopup(JComboBox)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.createKeyListener()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.InvocationKeyHandler.InvocationKeyHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboBoxEditor.setItem(Object)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.commentText()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.tags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.tags(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.seeTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.inlineTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.firstSentenceTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.getRawCommentText()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.setRawCommentText(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.name()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.compareTo(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isField()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isEnumConstant()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isConstructor()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isAnnotationTypeElement()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isInterface()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isException()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isError()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isEnum()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isAnnotationType()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isOrdinaryClass()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isClass()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isIncluded()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.position()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.ArrayQueue(int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.resize(int)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.add(T)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.remove(int)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.get(int)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.size()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.resolveServerClassLoader(Map,MBeanServer)</name>
      <ncss>25</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.resolveClientClassLoader(Map)</name>
      <ncss>11</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.initCause(T,Throwable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getCause(Throwable)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getNotifBufferSize(Map)</name>
      <ncss>24</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getMaxFetchNotifNumber(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getFetchTimeout(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getIntegerAttribute(Map,String,long,long,long)</name>
      <ncss>20</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.checkAttributes(Map)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.filterAttributes(Map)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.purgeUnserializable(Collection)</name>
      <ncss>20</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.hideAttributes(SortedMap)</name>
      <ncss>55</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.parseHiddenAttributes(String,SortedSet,SortedSet)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getServerConnectionTimeout(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getConnectionCheckPeriod(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.mapToHashtable(Map)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.SinkOutputStream.write(OutputStream[],int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.SinkOutputStream.write(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.NoOpAP.NoOpAP()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.NoOpAP.process()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.CompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.CompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.process()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.getCompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.getCompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createSourceFile(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createClassFile(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createTextFile(Location,String,File,String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createBinaryFile(Location,String,File)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.getCommandName()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.printCommandHelp(PrintStream,boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.processCommand(String[],ORB,PrintStream)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.getFilter(Modifier)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.getFilter(Declaration)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.and(DeclarationFilter)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.or(DeclarationFilter)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.not()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.filter(D)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.filter(Declaration,D)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter(Modifier)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter(Modifier,Modifier)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.matches(Declaration)</name>
      <ncss>5</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._gnudoit(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setNewEmacsWidth()</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setProjectSuffix()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.Jacob(Controller,String[])</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.loadProject()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.save()</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.showClasses()</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openOldProject(String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.createMakefile()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.setClassDependencies()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editFile(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.startJavaLanguageSpecHelp()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.insertPackage()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.removePackage()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._selectClasses(String,boolean)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyFile()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.init()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.refresh()</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.initKeyStore(URL,String,String)</name>
      <ncss>22</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.initPolicyFile()</name>
      <ncss>47</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.checkForTrustedIdentity(Certificate)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.init(URL)</name>
      <ncss>20</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getInputStream(URL)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getCodeSource(PolicyParser.GrantEntry,KeyStore)</name>
      <ncss>17</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.addGrantEntry(PolicyParser.GrantEntry,KeyStore)</name>
      <ncss>46</ncss>
      <ccn>20</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getInstance(String,String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getCertificates(KeyStore,String)</name>
      <ncss>25</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.elements()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(Subject,CodeSource)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(CodeSource)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(Permissions,CodeSource)</name>
      <ncss>25</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.addSelfPermissions(Permission,CodeSource,CodeSource,Permissions)</name>
      <ncss>23</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPrincipalInfo(PolicyParser.PrincipalEntry,CodeSource)</name>
      <ncss>38</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getSignerCertificates(CodeSource)</name>
      <ncss>26</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.canonicalizeCodebase(CodeSource,boolean)</name>
      <ncss>48</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.PolicyEntry(CodeSource)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.add(Permission)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.getCodeSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.toString()</name>
      <ncss>14</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.PolicyPermissions(PolicyFile,CodeSource)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.add(Permission)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.init()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.implies(Permission)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.elements()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.toString()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>hallo.hello.Test91.getAttributes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>lama.karma.Test92.show()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.UncaughtExceptionHandler.uncaughtException(Thread,Throwable)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getDefaultUncaughtExceptionHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getUncaughtExceptionHandler()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setUncaughtExceptionHandler(UncaughtExceptionHandler)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.dispatchUncaughtException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setPriority0(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.stop0(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.suspend0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.resume0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.interrupt0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>hope.pope.Test94.compareTo(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>steve.jobs.Test95.KeyEvent(Component,int,long,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test96.removeAWTEventListener(AWTEventListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.name()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.ordinal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.Enum(String,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.clone()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.compareTo(E)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.getDeclaringClass()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.valueOf(T,String)</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.getenv(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.getenv()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.environment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.emptyEnvironment(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.environ()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ProcessEnvironment()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.validateVariable(String)</name>
      <ncss>3</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.validateValue(String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.ExternalData(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.getBytes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.Variable(String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOfQueryOnly(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOfQueryOnly(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOf(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOf(Variable[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.compareTo(Variable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.Value(String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOfQueryOnly(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOfQueryOnly(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOf(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOf(Value[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.compareTo(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.toString(Value)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.StringEnvironment(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.get(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.put(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.keySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.entrySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.values()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.toEnvironmentBlock(m.values[][])</name>
      <ncss>17</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.toEnvironmentBlock(String,String[])</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.StringEntry(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.setValue(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.StringEntrySet(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.setValue(Value)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.vvEntry(Object)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.StringValues(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.StringKeySet(Variable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayCompare(int[],int[][])</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayEquals(boolean[],boolean[][])</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayHash(int[])</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatListHeader(int,String[])</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatListLine(String,String[])</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._divide(int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._divide(long,long)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatPackageMatrix(int,int,int,int,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.AsciiFormatter(Javancss)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printPackageNcss()</name>
      <ncss>21</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatObjectResume(int,long,long,long,long)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printObjectNcss()</name>
      <ncss>21</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatFunctionResume(int,long,long,long)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printFunctionNcss()</name>
      <ncss>19</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printPackageNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printObjectNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printFunctionNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printJavaNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.FunctionMetric.FunctionMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.FunctionMetric.clear()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.createSourceReader(File)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureSource(File)</name>
      <ncss>28</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureSource(Reader)</name>
      <ncss>32</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureFiles(List)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureRoot(Reader)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getImports()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFunctions()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printObjectNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printFunctionNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printPackageNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(List)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(File)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.parseImports()</name>
      <ncss>33</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setSourceFile(File)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(Reader)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._addJavaFiles(File,List)</name>
      <ncss>11</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.findFiles(List,boolean)</name>
      <ncss>33</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.WindowAdapter.windowClosing(WindowEvent)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(String[],String)</name>
      <ncss>65</ncss>
      <ccn>28</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLOC()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getJvdc()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getJdcl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getSl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getMl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFunctionMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getObjectMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getPackageMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLastErrorMessage()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLastError()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setExit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setXML(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.useXML()</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFormatter()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getEncoding()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setEncoding(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.newReader(InputStream)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.newReader(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.save()</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame._setMenuBar()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.getInit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.JavancssFrame(Init)</name>
      <ncss>23</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.showJavancss(Javancss)</name>
      <ncss>61</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.run()</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.setVisible(boolean)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.setSelectedTab(String)</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.actionPerformed(ActionEvent)</name>
      <ncss>23</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Main.main(String[])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.Metric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.clear()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.compareTo(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.ObjectMetric.ObjectMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.ObjectMetric.clear()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.PackageMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.clear()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.add(PackageMetric)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._divide(int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._divide(long,long)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatPackageMatrix(int,int,int,int,int,int,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.XmlFormatter(Javancss)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printPackageNcss()</name>
      <ncss>25</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatObjectResume(int,long,long,long,long,long,long,long)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printObjectNcss()</name>
      <ncss>22</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatFunctionResume(int,long,long,long,long,long,long)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printFunctionNcss()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printStart()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.setTestDir(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestDir()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestFile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.AbstractTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.AbstractTest(Test)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.main()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.main(File)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.measureTestFile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcss(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcss(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int,int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testJavadocs()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testJavadocLines()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(int,String,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(javadocLines[],String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(Javancss,String,int)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.JavancssTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.JavancssTest(Test)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._doIt()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testNcss()</name>
      <ncss>138</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testNcssAndMore()</name>
      <ncss>73</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJvdcs(int,int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testCCN()</name>
      <ncss>21</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.assertCCN(List,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.measureWithArgs(String[])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testEncoding()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.testParsing()</name>
      <ncss>16</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.testXML2Text()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.XmlFormatterTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.XmlFormatterTest(Test)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.getXslFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest._doIt()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._gnudoit(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setNewEmacsWidth()</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setProjectSuffix()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.Jacob(Controller,String[])</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.loadProject()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.save()</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.showClasses()</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openOldProject(String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.createMakefile()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.setClassDependencies()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editFile(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.startJavaLanguageSpecHelp()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.insertPackage()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.removePackage()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._selectClasses(String,boolean)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.readFile(URL)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swapInt(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swapInt()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.objectsToVector(Object[])</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,Vector)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Provider.Service(Provider)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedEntrySet.CheckedEntrySet(V,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.checkedSortedMap(V,K,V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.CheckedSortedMap(V,K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.comparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.firstKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.lastKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.subMap(K,K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.headMap(K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.tailMap(K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.iterator()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptyList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.get(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptyMap()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.get(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.keySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.values()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.entrySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singleton(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.SingletonSet(E)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.next()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.iterator()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singletonList(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.SingletonList(E)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.get(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singletonMap(K,V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.SingletonMap(K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.get(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.keySet()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.entrySet()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.values()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.ImmutableEntry(K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.setValue(V)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.hashCode()</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.nCopies(int,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.CopiesList(int,E)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.get(int)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.reverseOrder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator.compare(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.reverseOrder(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator2.ReverseComparator2(T)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator2.compare(T,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.Enumeration.hasMoreElements()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.Enumeration.nextElement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.enumeration(T)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.list(T)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.eq(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.frequency(Collection,Object)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.disjoint(Collection,Collection)</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.addAll(T,T)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AClass.AClass(int,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AClass.getN()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AClass.getS()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AnEnum.aMethod()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AnEnum.aMethod()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test105.Test105(String[],String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid1(Bar.Info)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid2(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid(T.Info)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.Test113(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug0(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug1(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug2(Object)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test114.Javancss(String[],String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser._formatPackage(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getLOC()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getJvdc()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getFunction()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getObject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getImports()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getPackageObjects()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getLastFunction()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isPublic(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isProtected(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isPrivate(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isStatic(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isAbstract(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isFinal(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isNative(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isStrictfp(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isSynchronized(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isTransient(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isVolatile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.removeModifier(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CompilationUnit()</name>
      <ncss>124</ncss>
      <ccn>54</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImportUnit()</name>
      <ncss>60</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PackageDeclaration()</name>
      <ncss>28</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImportDeclaration()</name>
      <ncss>33</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeDeclaration()</name>
      <ncss>53</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassDeclaration()</name>
      <ncss>77</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnmodifiedClassDeclaration()</name>
      <ncss>57</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassBody()</name>
      <ncss>40</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NestedClassDeclaration()</name>
      <ncss>64</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassBodyDeclaration()</name>
      <ncss>80</ncss>
      <ccn>39</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarationLookahead()</name>
      <ncss>67</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InterfaceDeclaration()</name>
      <ncss>64</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NestedInterfaceDeclaration()</name>
      <ncss>63</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnmodifiedInterfaceDeclaration()</name>
      <ncss>80</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InterfaceMemberDeclaration()</name>
      <ncss>47</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldDeclaration()</name>
      <ncss>82</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableDeclarator()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableDeclaratorId()</name>
      <ncss>24</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableInitializer()</name>
      <ncss>40</ncss>
      <ccn>33</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArrayInitializer()</name>
      <ncss>51</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclaration()</name>
      <ncss>162</ncss>
      <ccn>53</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarator()</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameters()</name>
      <ncss>34</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameter()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConstructorDeclaration()</name>
      <ncss>148</ncss>
      <ccn>68</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExplicitConstructorInvocation()</name>
      <ncss>46</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Initializer()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Type()</name>
      <ncss>46</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldTypeLookahead()</name>
      <ncss>29</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimitiveType()</name>
      <ncss>30</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ResultType()</name>
      <ncss>22</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Name()</name>
      <ncss>22</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldTypeNameLookahead()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NameList()</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Expression()</name>
      <ncss>40</ncss>
      <ccn>33</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Assignment()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssignmentOperator()</name>
      <ncss>42</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalExpression()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalOrExpression()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalAndExpression()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InclusiveOrExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExclusiveOrExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AndExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EqualityExpression()</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InstanceOfExpression()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.RelationalExpression()</name>
      <ncss>31</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ShiftExpression()</name>
      <ncss>27</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AdditiveExpression()</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MultiplicativeExpression()</name>
      <ncss>27</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnaryExpression()</name>
      <ncss>54</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PreIncrementExpression()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PreDecrementExpression()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnaryExpressionNotPlusMinus()</name>
      <ncss>55</ncss>
      <ccn>35</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CastLookahead()</name>
      <ncss>60</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PostfixLookahead()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PostfixExpression()</name>
      <ncss>19</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CastExpression()</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimaryExpression()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimaryPrefix()</name>
      <ncss>53</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimarySuffix()</name>
      <ncss>29</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Literal()</name>
      <ncss>25</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BooleanLiteral()</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NullLiteral()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Arguments()</name>
      <ncss>37</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArgumentList()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AllocationExpression()</name>
      <ncss>52</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArrayDimsAndInits()</name>
      <ncss>36</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Statement()</name>
      <ncss>86</ncss>
      <ccn>43</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.LabeledStatement()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssertStatementLookahead()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssertStatement()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Block()</name>
      <ncss>52</ncss>
      <ccn>44</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BlockStatement()</name>
      <ncss>58</ncss>
      <ccn>44</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.LocalVariableDeclaration()</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EmptyStatement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.StatementExpression()</name>
      <ncss>81</ncss>
      <ccn>59</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SwitchStatement()</name>
      <ncss>69</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SwitchLabel()</name>
      <ncss>21</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.IfStatement()</name>
      <ncss>17</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.WhileStatement()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.DoStatement()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForStatement()</name>
      <ncss>144</ncss>
      <ccn>114</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForInit()</name>
      <ncss>36</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.StatementExpressionList()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForUpdate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BreakStatement()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ContinueStatement()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReturnStatement()</name>
      <ncss>41</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ThrowStatement()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SynchronizedStatement()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TryStatement()</name>
      <ncss>28</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Identifier()</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Annotation()</name>
      <ncss>15</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NormalAnnotation()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MarkerAnnotation()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SingleMemberAnnotation()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValuePairs()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValuePair()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValue()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValueArrayInitializer()</name>
      <ncss>52</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeDeclaration(int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeBody()</name>
      <ncss>39</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeMemberDeclaration()</name>
      <ncss>81</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.DefaultValue()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Modifiers()</name>
      <ncss>85</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceDeclaration(int)</name>
      <ncss>34</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumDeclaration(int)</name>
      <ncss>37</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeParameters()</name>
      <ncss>34</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExtendsList(boolean)</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImplementsList(boolean)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceBody(boolean)</name>
      <ncss>42</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumBody()</name>
      <ncss>79</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeParameter()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceType()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceBodyDeclaration(boolean)</name>
      <ncss>92</ncss>
      <ccn>66</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumConstant()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeBound()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeArguments()</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeArgument()</name>
      <ncss>31</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReferenceType()</name>
      <ncss>33</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.WildcardBounds()</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldDeclaration15(int)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclaration15(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarator15()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameters15()</name>
      <ncss>41</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameter15()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberSelector()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_1(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_2(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_3(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_4(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_5(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_6(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_7(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_8(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_9(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_10(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_11(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_12(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_13(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_14(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_15(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_16(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_17(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_18(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_19(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_20(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_21(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_22(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_23(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_24(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_25(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_26(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_27(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_28(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_29(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_30(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_31(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_32(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_33(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_34(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_35(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_36(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_37(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_38(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_39(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_40(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_41(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_42(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_43(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_44(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_45(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_46(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_47(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_48(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_49(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_50(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_51(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_52(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_53(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_54(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_55(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_56(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_57(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_58(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_59(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_60(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_61(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_62(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_63(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_64(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_65(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_551()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_562()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_472()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_444()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_113()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_561()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_550()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_3()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_428()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_78()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_112()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_530()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_445()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_411()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_2()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_486()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_382()</name>
      <ncss>34</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_111()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_110()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_462()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_560()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_436()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_559()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_558()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_549()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_404()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_109()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_403()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_402()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_381()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_108()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_380()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_343()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_316()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_44()</name>
      <ncss>41</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_295()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_294()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_293()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_272()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_292()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_230()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_145()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_529()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_379()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_107()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_106()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_437()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_439()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_358()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_357()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_356()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_355()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_354()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_438()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_353()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_352()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_40()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_351()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_350()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_349()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_435()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_348()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_43()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_347()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_346()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_77()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_345()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_1()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_344()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_317()</name>
      <ncss>83</ncss>
      <ccn>66</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_42()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_461()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_460()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_420()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_397()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_62()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_459()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_367()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_39()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_325()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_41()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_458()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_457()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_368()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_456()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_61()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_455()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_104()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_454()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_328()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_417()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_327()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_218()</name>
      <ncss>27</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_453()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_434()</name>
      <ncss>48</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_326()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_60()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_399()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_433()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_103()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_38()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_15()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_65()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_418()</name>
      <ncss>47</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_396()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_497()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_310()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_281()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_452()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_136()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_64()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_395()</name>
      <ncss>22</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_261()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_135()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_297()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_340()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_339()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_419()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_181()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_432()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_338()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_313()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_134()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_324()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_174()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_59()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_451()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_244()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_290()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_366()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_268()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_289()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_284()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_365()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_323()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_180()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_185()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_522()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_450()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_296()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_431()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_92()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_184()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_173()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_133()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_226()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_304()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_225()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_303()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_137()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_63()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_302()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_301()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_300()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_416()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_179()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_131()</name>
      <ncss>36</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_521()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_299()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_276()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_172()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_496()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_314()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_215()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_214()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_520()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_178()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_57()</name>
      <ncss>33</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_132()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_213()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_171()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_130()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_56()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_37()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_32()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_55()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_364()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_36()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_258()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_322()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_177()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_519()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_363()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_101()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_35()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_170()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_362()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_361()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_34()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_250()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_257()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_360()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_518()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_176()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_517()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_516()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_495()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_321()</name>
      <ncss>32</ncss>
      <ccn>27</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_169()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_256()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_481()</name>
      <ncss>36</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_249()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_53()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_14()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_248()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_285()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_13()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_247()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_58()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_298()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_90()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_175()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_31()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_255()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_12()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_544()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_89()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_168()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_33()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_52()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_11()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_54()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_543()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_374()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_273()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_288()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_542()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_246()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_491()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_186()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_245()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_265()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_275()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_541()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_373()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_333()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_287()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_242()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_540()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_254()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_539()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_501()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_94()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_243()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_30()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_267()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_286()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_241()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_253()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_335()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_183()</name>
      <ncss>29</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_29()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_252()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_334()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_309()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_490()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_359()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_251()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_308()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_320()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_97()</name>
      <ncss>22</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_266()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_274()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_26()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_240()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_492()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_28()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_27()</name>
      <ncss>55</ncss>
      <ccn>49</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_443()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_201()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_319()</name>
      <ncss>38</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_424()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_98()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_25()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_24()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_23()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_224()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_306()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_280()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_279()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_567()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_305()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_278()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_557()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_259()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_277()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_566()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_548()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_556()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_372()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_545()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_528()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_511()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_565()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_555()</name>
      <ncss>22</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_547()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_371()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_527()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_515()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_370()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_546()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_332()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_524()</name>
      <ncss>22</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_526()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_510()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_331()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_369()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_330()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_200()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_329()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_307()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_182()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_525()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_485()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_514()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_499()</name>
      <ncss>27</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_513()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_483()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_199()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_523()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_512()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_509()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_494()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_484()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_478()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_91()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_471()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_498()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_239()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_198()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_406()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_482()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_442()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_197()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_409()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_408()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_470()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_407()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_405()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_401()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_393()</name>
      <ncss>39</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_238()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_196()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_441()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_423()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_376()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_422()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_337()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_195()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_237()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_129()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_400()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_152()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_312()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_194()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_128()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_375()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_236()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_193()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_127()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_336()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_151()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_159()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_126()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_192()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_311()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_125()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_235()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_191()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_282()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_124()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_158()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_150()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_123()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_190()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_263()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_234()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_122()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_162()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_96()</name>
      <ncss>63</ncss>
      <ccn>50</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_189()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_149()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_157()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_121()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_22()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_262()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_233()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_120()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_148()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_220()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_119()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_474()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_156()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_161()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_105()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_219()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_118()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_446()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_232()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_51()</name>
      <ncss>63</ncss>
      <ccn>50</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_155()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_80()</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_147()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_86()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_160()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_447()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_429()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_166()</name>
      <ncss>48</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_231()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_165()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_167()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_21()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_146()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_88()</name>
      <ncss>35</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_83()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_154()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_10()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_378()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_85()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_9()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_480()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_479()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_469()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_8()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_153()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_84()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_468()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_164()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_7()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_82()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_20()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_467()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_6()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_50()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_476()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_163()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_466()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_87()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_465()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_464()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_5()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_217()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_463()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_440()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_102()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_216()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_49()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_209()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_208()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_207()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_489()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_206()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_504()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_205()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_204()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_203()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_283()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_99()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_202()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_377()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_508()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_264()</name>
      <ncss>30</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_503()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_342()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_116()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_223()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_500()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_222()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_507()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_117()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_221()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_506()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_211()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_212()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_260()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_505()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_502()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_493()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_477()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_341()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_210()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_100()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_315()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_291()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_421()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_115()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_488()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_144()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_270()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_398()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_81()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_18()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_271()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_19()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_48()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_269()</name>
      <ncss>25</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_47()</name>
      <ncss>25</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_475()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_449()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_487()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_229()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_448()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_430()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_228()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_138()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_227()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_188()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_95()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_187()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_538()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_537()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_318()</name>
      <ncss>33</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_392()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_391()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_390()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_536()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_415()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_535()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_389()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_571()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_554()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_534()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_388()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_93()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_17()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_387()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_16()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_564()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_114()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_414()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_413()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_46()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_553()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_570()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_143()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_531()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_569()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_412()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_45()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_568()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_563()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_552()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_532()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_142()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_533()</name>
      <ncss>29</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_386()</name>
      <ncss>29</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_427()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_141()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_385()</name>
      <ncss>30</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_426()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_384()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_425()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_410()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_140()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_394()</name>
      <ncss>50</ncss>
      <ccn>42</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_383()</name>
      <ncss>29</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_473()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_139()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_4()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_79()</name>
      <ncss>28</ncss>
      <ccn>22</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(java.io.InputStream)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(java.io.InputStream)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(java.io.Reader)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(java.io.Reader)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(JavaParserTokenManager)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(JavaParserTokenManager)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_consume_token(int)</name>
      <ncss>21</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_scan_token(int)</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getNextToken()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getToken(int)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_ntk()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_add_error_token(int,int)</name>
      <ncss>25</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.generateParseException()</name>
      <ncss>31</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.enable_tracing()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.disable_tracing()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_rescan_token()</name>
      <ncss>206</ncss>
      <ccn>69</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_save(int,int)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test116.methodica()</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.TempBooleanAttributes(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.isSingleValued()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getTrueString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getFalseString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.equals(BooleanAttribute)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestEnum.TestEnum(Type)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestEnum.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.readFile(URL)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test120.getFiles()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test120.getFile()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test123.getFile()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.Test123.finalize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.Example2.Example2()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test125.save(ManagedFile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.world()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.getLocation(LocationKey)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.insertLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.updateLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.deleteLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ClassWithGenericizedConstructor.ClassWithGenericizedConstructor(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test128.update(Component,UpdateStrategy)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>PerfTest.class.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>PerfTest.startTests()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Bug.Bug()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test123.SimpleBean.hasAnnotation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test123.SimpleBean.doesNotHaveAnnotation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test123.testAnnotationLimiter()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test132.Test132()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test133.convertIntoKnownBaseType(Object,Class)</name>
      <ncss>11</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test134.main(String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test16.Predicate.test(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test16.filter()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test17.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test17.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.foo(String[],Controller)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.Jacob(Controller,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.foo2(int,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.Something()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AudioItem.next()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.init()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.start()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.stop()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.mouseUp(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.paint(Graphics)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoop.ImageLoop(URL,String,ImageLoopItem)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.init()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.run()</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.paint(Graphics)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.update(Graphics)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.start()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.stop()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.mouseDown(int,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Daten._lesenDateien()</name>
      <ncss>28</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.init()</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putDatei(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.doPlan()</name>
      <ncss>99</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putAnzGamer(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putNextGamer(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putVerein(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putStadionname(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.getVereine()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>InputWindow.InputWindow(Interface,String,String)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>InputWindow.action(Event,Object)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SelectFromListWindow.SelectFromListWindow(Interface,String,String[])</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SelectFromListWindow.action(Event,Object)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ShowMsgBox.ShowMsgBox(Frame,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ShowMsgBox.action(Event,Object)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.Interface()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.putInput(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.putInput(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.input(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.selectFromList(String,String[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SimSoccer._init()</name>
      <ncss>22</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SimSoccer.main(String[])</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._getNeurons()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setInputNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setUnivers(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setStartPosition(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.nextStep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Net._getNeurons()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setInputNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setUnivers(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setStartPosition(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.nextStep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Neuron.getWeight()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.setWeight(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.distanceTo(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.moveTo(InputNeuron,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Neuron.addNeighbor(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.addMetaNeighbor(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.getNeighbors()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.getMetaNeighbors()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init._setProjectPath()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.start()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.setProjectFullName(String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getProjectFullName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getProjectPath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getTextBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getListBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob2.createMakefile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob2.test()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._gnudoit(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(Package,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getRcsVersion()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getRcs()</name>
      <ncss>25</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakefileAll()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClean()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakefileZip()</name>
      <ncss>42</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakePublic()</name>
      <ncss>56</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.Jacob3(Controller,String[])</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.loadProject()</name>
      <ncss>14</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.save()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.showClasses()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openOldProject(String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.createMakefile()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editFile(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.startJavaLanguageSpecHelp()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.insertPackage()</name>
      <ncss>24</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.removePackage()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._selectClasses(String,boolean)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.selectMainClass()</name>
      <ncss>24</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.removeClasses()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.addClasses()</name>
      <ncss>39</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.exit()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test30.filter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(SocketImpl)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int,InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,InetAddress,int,boolean)</name>
      <ncss>18</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getInetAddress()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getLocalAddress()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getPort()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getLocalPort()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getInputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getOutputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setTcpNoDelay(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getTcpNoDelay()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSoLinger(boolean,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getSoLinger()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSoTimeout(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getSoTimeout()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.close()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSocketImplFactory(SocketImplFactory)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.createStatement()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.prepareStatement(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.prepareCall(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.nativeSQL(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setAutoCommit(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getAutoCommit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.commit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.rollback()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.isClosed()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getMetaData()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setReadOnly(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.isReadOnly()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setCatalog(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getCatalog()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setTransactionIsolation(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getTransactionIsolation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getWarnings()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.clearWarnings()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat(String,DecimalFormatSymbols)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.format(double,StringBuffer,FieldPosition)</name>
      <ncss>23</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.format(long,StringBuffer,FieldPosition)</name>
      <ncss>23</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.parse(String,ParsePosition)</name>
      <ncss>118</ncss>
      <ccn>59</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getDecimalFormatSymbols()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setDecimalFormatSymbols(DecimalFormatSymbols)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getPositivePrefix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setPositivePrefix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getNegativePrefix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setNegativePrefix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getPositiveSuffix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setPositiveSuffix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getNegativeSuffix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setNegativeSuffix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getMultiplier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setMultiplier(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getGroupingSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setGroupingSize(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isDecimalSeparatorAlwaysShown()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.clone()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toLocalizedPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toPattern(boolean)</name>
      <ncss>32</ncss>
      <ccn>19</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyPattern(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyLocalizedPattern(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyPattern(String,boolean)</name>
      <ncss>125</ncss>
      <ccn>34</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.appendNativeDigits(StringBuffer,FieldPosition)</name>
      <ncss>29</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isSpecialChar(char)</name>
      <ncss>2</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isLongMIN_VALUE(DigitList)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.readObject(ObjectInputStream)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.forward()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.backward()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.map()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.text.Test39.Test39()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.text.Test39.run()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.removePackage()</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test40.Test40(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.getI()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.setI(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.Test41(int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.darwinize()</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.dummy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.Test46()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.filter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.main(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test47.filter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test48.Test48()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test48.foo()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>MainJMenuBar.MainJMenuBar(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.Something1()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.Something2()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenuBar(Vector,MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.updateMenu()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getOldFileItems(Init)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getMenuBodyElements(Vector,Init)</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getHelpBroker(MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.MainJMenu(Vector,MainJFrame)</name>
      <ncss>58</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.removeOldFileItems()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.insertOldFiles(MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.methodTest52()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Test52()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Test52(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Inner.Inner()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test53.Test53(String,Object,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test53.Test53(String,Object,String,String[])</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test54.Test54(Fd2Record)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test55.Test55(Hashtable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test55.Test56(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.Math.Math()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.sin(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.cos(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.tan(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.asin(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.acos(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.atan(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.toRadians(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.toDegrees(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.exp(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.log(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.sqrt(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.IEEEremainder(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.ceil(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.floor(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.rint(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.atan2(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.pow(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.round(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.round(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.initRNG()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.Math.random()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(float)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(double)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.StrictMath()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.sin(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.cos(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.tan(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.asin(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.acos(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.atan(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.toRadians(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.toDegrees(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.exp(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.log(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.sqrt(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.IEEEremainder(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.ceil(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.floor(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.rint(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.atan2(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.pow(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.round(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.round(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.initRNG()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.random()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(float)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(double)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.equals(Object)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.Event(String,String,String,String,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getSourceHost()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getSourceComponent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getCreationDate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getDescription()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.Utilities(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.printStackTrace()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStack()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStackSafe()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.addClassToHashtable(Hashtable,String)</name>
      <ncss>13</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.removeClassFromHashtable(Hashtable,String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.levelTest(int)</name>
      <ncss>15</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.categoryTest(String)</name>
      <ncss>22</ncss>
      <ccn>16</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.sourceClassValid()</name>
      <ncss>47</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.readFile(URL)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swapInt(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swapInt()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.objectsToVector(Object[])</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,Vector)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.Collect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkDebugCollectRef(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.setDebug(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.register(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkStatisticID(Statistic)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.unregister(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isRegistered(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.currentValue(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.report(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reportAll()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reset(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.set(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidCategory(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidLevel(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.Collect()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkDebugCollectRef(Debug)</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.setDebug(Debug)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.register(Statistic)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkStatisticID(Statistic)</name>
      <ncss>23</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.unregister(Statistic)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isRegistered(Statistic)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.currentValue(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.report(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reportAll()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reset(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.set(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidCategory(String)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidLevel(int)</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_checkDebugCollectRef(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_checkStatisticID(Statistic)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_isRegistered(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.clone()</name>
      <ncss>15</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.Debug()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.Debug(DebugConstants,Collect)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.setOutputInterface(DebugOutput)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getAssert()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getCollect()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getOutputInterface()</name>
      <ncss>23</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getDebugConstants()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOn()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOn(Thread)</name>
      <ncss>24</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOff()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOff(Thread)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.turnOn()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.turnOff()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addCategory(String,int)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeCategory(String)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.containsCategory(String)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listCategories()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addClass(Class)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addClass(String)</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeClass(Class)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeClass(String)</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getContext(Thread)</name>
      <ncss>23</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addContext(Context)</name>
      <ncss>24</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeContext(Context)</name>
      <ncss>24</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listClasses()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.setLevel(int)</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getLevel()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listThreads()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.init(DebugConstants,Collect)</name>
      <ncss>34</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addCategoryToHashtable(Hashtable,String,int)</name>
      <ncss>35</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeCategoryFromHashtable(Hashtable,String)</name>
      <ncss>21</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getOutputInterface()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getAssert()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getCollect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getDebugConstants()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.Utilities(Debug)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.printStackTrace()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStackSafe()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.addClassToHashtable(Hashtable,String)</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.removeClassFromHashtable(Hashtable,String)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.levelTest(int)</name>
      <ncss>51</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.categoryTest(String)</name>
      <ncss>65</ncss>
      <ccn>18</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.sourceClassValid()</name>
      <ncss>92</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.getWriter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.clone()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.WindowOutput(Debug)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.ActionListener.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.ActionListener.actionPerformed(ActionEvent)</name>
      <ncss>19</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.WindowAdapter.windowClosing(WindowEvent)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.createUI()</name>
      <ncss>45</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.TestSuiteThread(String)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.run()</name>
      <ncss>188</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.interrupt()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.isInterrupted()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.destroy()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.getContextClassLoader()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.setContextClassLoader(java.lang.ClassLoader)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test66.Test66()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test67.assert(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test67.main(String[])</name>
      <ncss>27</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test68.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test7.foo()</name>
      <ncss>29</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test70.InnerClass.test()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.Runnable.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.Runnable.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.TestRun.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.main(String[])</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.TestRun.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.testPWS()</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test72.testPWU10()</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test72.intersect(BoundingBox)</name>
      <ncss>2</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.verboseIntersect(BoundingBox)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.testQuestionMark()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyInputStream.AnyInputStream(EncapsInputStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyOutputStream.AnyOutputStream(ORB)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyOutputStream.create_input_stream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.convertToNative(ORB,Any)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyImpl(ORB)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyImpl(ORB,Any)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.type()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.realType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.realType(TypeCode)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.type(TypeCode)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.equal(Any)</name>
      <ncss>67</ncss>
      <ccn>62</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.equalMember(TypeCode,InputStream,InputStream)</name>
      <ncss>95</ncss>
      <ccn>80</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.create_output_stream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.create_input_stream()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.read_value(org.omg.CORBA.portable.InputStream,TypeCode)</name>
      <ncss>21</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.write_value(OutputStream)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Streamable(Streamable)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Streamable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_short(short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.getTCKindName(int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.checkExtractBadOperation(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.checkExtractBadOperationList(tcName[])</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_short()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_long(int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_long()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ushort(short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ushort()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ulong(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ulong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_float(float)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_float()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_double(double)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_double()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_longlong(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_longlong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ulonglong(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ulonglong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_boolean(boolean)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_boolean()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_char(char)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_char()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_wchar(char)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_wchar()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_octet(byte)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_octet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_string(String)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_string()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_wstring(String)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_wstring()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_any(Any)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_any()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Object(org.omg.CORBA.Object)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Object(org.omg.CORBA.Object,TypeCode)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Object()</name>
      <ncss>11</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_TypeCode(TypeCode)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_TypeCode()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Principal(Principal)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Principal()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Value()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Value(Serializable)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Value(Serializable,org.omg.CORBA.TypeCode)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_fixed(java.math.BigDecimal)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_fixed(java.math.BigDecimal,org.omg.CORBA.TypeCode)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_fixed()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.createTypeCodeForClass(java.lang.Class,ORB)</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.getPrimitiveTypeCodeForClass(Class,ORB)</name>
      <ncss>29</ncss>
      <ccn>20</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extractAny(TypeCode,ORB)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extractAnyFromStream(TypeCode,InputStream,ORB)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.isInitialized()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.PrivilegedAction.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.IIOPOutputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.beginOptionalCustomData()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.setOrbStream(org.omg.CORBA_2_3.portable.OutputStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.getOrbStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.increaseRecursionDepth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.decreaseRecursionDepth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeObjectOverride(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.simpleWriteObject(Object,byte)</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.getFieldsNoCopy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.defaultWriteObjectDelegate()</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.enableReplaceObjectDelegate(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.annotateClass(Class)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.drain()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.flush()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.replaceObject(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.reset()</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(byte[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(byte[],int,int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeBoolean(boolean)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeByte(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeBytes(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeChar(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeChars(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeDouble(double)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeFloat(float)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeInt(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeLong(long)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeShort(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeStreamHeader()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.internalWriteUTF(org.omg.CORBA.portable.OutputStream,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeUTF(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.checkSpecialClasses(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.checkSubstitutableSpecialClasses(Object)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.outputObject(Object)</name>
      <ncss>27</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.invokeObjectWriter(ObjectStreamClass,Object)</name>
      <ncss>19</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeField(ObjectStreamField,Object)</name>
      <ncss>56</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeObjectField(ObjectStreamField,Object)</name>
      <ncss>33</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.outputClassFields(Object,Class,ObjectStreamField[])</name>
      <ncss>46</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.PrivilegedAction.run()</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.JNDIStateFactoryImpl()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.getStateToBind(Object,Name,Context,Hashtable)</name>
      <ncss>18</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.getORB(Context)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.Runnable.run()</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.java.security.PrivilegedAction.run()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.addToQueue(ImageInputStream)</name>
      <ncss>24</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.removeFromQueue(ImageInputStream)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Metacity(String)</name>
      <ncss>60</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getTitlePaneLayout()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getRoundedClipShape(int,int,int,int,int,int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.paintButtonBackground(SynthContext,Graphics,int,int,int,int)</name>
      <ncss>71</ncss>
      <ccn>27</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawButton(Node,String,String,Graphics,int,int,JInternalFrame)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.paintFrameBorder(SynthContext,Graphics,int,int,int,int)</name>
      <ncss>69</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Privileged.doPrivileged(int,Object)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Privileged.run()</name>
      <ncss>55</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getThemeDir(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getUserTheme()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.tileImage(Graphics,Image,int,int,int,int,int[])</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getImage(String,Color)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getImage(String)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.ColorizeImageFilter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.setColor(Color)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.colorize(Image,Color)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.filterRGB(int,int,int)</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.findChild(JComponent,String)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.addLayoutComponent(String,Component)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.removeLayoutComponent(Component)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.preferredLayoutSize(Container)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.minimumLayoutSize(Container)</name>
      <ncss>40</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.layoutContainer(Container)</name>
      <ncss>35</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getFrameGeometry()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.setFrameGeometry(JComponent,Map)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getInt(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBoolean(String,boolean)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawArc(Node,Graphics)</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawLine(Node,Graphics)</name>
      <ncss>17</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawRectangle(Node,Graphics)</name>
      <ncss>17</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTile(Node,Graphics,JInternalFrame)</name>
      <ncss>32</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTint(Node,Graphics)</name>
      <ncss>20</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTitle(Node,Graphics,JInternalFrame)</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateButtonSize(JComponent)</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateTitleArea(JInternalFrame)</name>
      <ncss>22</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateTitleTextWidth(Graphics,JInternalFrame)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.setClip(Node,Graphics)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKArrow(Node,Graphics)</name>
      <ncss>50</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKBox(Node,Graphics)</name>
      <ncss>36</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKVLine(Node,Graphics)</name>
      <ncss>19</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGradient(Node,Graphics)</name>
      <ncss>28</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawImage(Node,Graphics)</name>
      <ncss>35</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawIcon(Node,Graphics,JInternalFrame)</name>
      <ncss>24</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawInclude(Node,Graphics,JInternalFrame)</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.draw(Node,Graphics,JInternalFrame)</name>
      <ncss>55</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawPiece(Node,Graphics,String,int,int,int,int,JInternalFrame)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBorderInsets(SynthContext,Insets)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.logError(String,Exception)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.logError(String,String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PrivilegedAction.run()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getXMLDoc(URL)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNodesByName(Node,String)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(String,String[])</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(Node,String,String[])</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(NodeList,String,String[])</name>
      <ncss>22</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getStringAttr(Node,String)</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getStringAttr(NamedNodeMap,String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBooleanAttr(Node,String,boolean)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getIntAttr(Node,String,int)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getFloatAttr(Node,String,float)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.parseColor(String)</name>
      <ncss>22</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.parseColor2(String)</name>
      <ncss>47</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.evaluate(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.evaluate(String,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.expression()</name>
      <ncss>22</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.getTermValue()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.getFactorValue()</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.PeekableStringTokenizer(String,String,boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.peek()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.hasMoreTokens()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.nextToken()</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundRectClipShape()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundRectClipShape(int,int,int,int,int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.setRoundedRect(int,int,int,int,int,int,int)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getX()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getY()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getArcWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getArcHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getBounds2D()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getCornerFlags()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.setFrame(double,double,double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.contains(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.classify(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.intersects(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.contains(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getPathIterator(AffineTransform)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.RoundishRectIterator(RoundRectClipShape,AffineTransform)</name>
      <ncss>31</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.getWindingRule()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.isDone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.currentSegment(int[])</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.currentSegment(int[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test8.foo()</name>
      <ncss>29</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.createUI(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.MotifInternalFrameUI(JInternalFrame)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installUI(JComponent)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installDefaults()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installKeyboardActions()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.uninstallDefaults()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.getFrame()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.createNorthPane(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.getMaximumSize(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.uninstallKeyboardActions()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setupMenuOpenKey()</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setupMenuCloseKey()</name>
      <ncss>26</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.activateFrame(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.deactivateFrame(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setColors(JInternalFrame)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createUI(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.installUI(JComponent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.uninstallUI(JComponent)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.paintCurrentValue(Graphics,Rectangle,boolean)</name>
      <ncss>12</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.getPreferredSize(JComponent)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.BasicComboBoxUI.ComboBoxLayoutManager.layoutContainer(Container)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createLayoutManager()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.installKeyboardActions()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createPopup()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createEditor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createArrowButton()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.XPComboBoxButton.XPComboBoxButton()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.XPComboBoxButton.getPreferredSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.RolloverListener.mouseEntered(MouseEvent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.RolloverListener.mouseExited(MouseEvent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.WindowsComboPopup(JComboBox)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.createKeyListener()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.InvocationKeyHandler.InvocationKeyHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboBoxEditor.setItem(Object)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.commentText()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.tags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.tags(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.seeTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.inlineTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.firstSentenceTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.getRawCommentText()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.setRawCommentText(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.name()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.compareTo(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isField()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isEnumConstant()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isConstructor()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isAnnotationTypeElement()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isInterface()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isException()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isError()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isEnum()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isAnnotationType()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isOrdinaryClass()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isClass()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isIncluded()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.position()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.ArrayQueue(int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.resize(int)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.add(T)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.remove(int)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.get(int)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.size()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.resolveServerClassLoader(Map,MBeanServer)</name>
      <ncss>25</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.resolveClientClassLoader(Map)</name>
      <ncss>11</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.initCause(T,Throwable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getCause(Throwable)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getNotifBufferSize(Map)</name>
      <ncss>24</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getMaxFetchNotifNumber(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getFetchTimeout(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getIntegerAttribute(Map,String,long,long,long)</name>
      <ncss>20</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.checkAttributes(Map)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.filterAttributes(Map)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.purgeUnserializable(Collection)</name>
      <ncss>20</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.hideAttributes(SortedMap)</name>
      <ncss>55</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.parseHiddenAttributes(String,SortedSet,SortedSet)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getServerConnectionTimeout(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getConnectionCheckPeriod(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.mapToHashtable(Map)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.SinkOutputStream.write(OutputStream[],int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.SinkOutputStream.write(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.NoOpAP.NoOpAP()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.NoOpAP.process()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.CompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.CompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.process()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.getCompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.getCompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createSourceFile(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createClassFile(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createTextFile(Location,String,File,String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createBinaryFile(Location,String,File)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.getCommandName()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.printCommandHelp(PrintStream,boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.processCommand(String[],ORB,PrintStream)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.getFilter(Modifier)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.getFilter(Declaration)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.and(DeclarationFilter)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.or(DeclarationFilter)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.not()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.filter(D)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.filter(Declaration,D)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter(Modifier)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter(Modifier,Modifier)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.matches(Declaration)</name>
      <ncss>5</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._gnudoit(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setNewEmacsWidth()</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setProjectSuffix()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.Jacob(Controller,String[])</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.loadProject()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.save()</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.showClasses()</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openOldProject(String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.createMakefile()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.setClassDependencies()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editFile(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.startJavaLanguageSpecHelp()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.insertPackage()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.removePackage()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._selectClasses(String,boolean)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyFile()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.init()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.refresh()</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.initKeyStore(URL,String,String)</name>
      <ncss>22</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.initPolicyFile()</name>
      <ncss>47</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.checkForTrustedIdentity(Certificate)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.init(URL)</name>
      <ncss>20</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getInputStream(URL)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getCodeSource(PolicyParser.GrantEntry,KeyStore)</name>
      <ncss>17</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.addGrantEntry(PolicyParser.GrantEntry,KeyStore)</name>
      <ncss>46</ncss>
      <ccn>20</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getInstance(String,String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getCertificates(KeyStore,String)</name>
      <ncss>25</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.elements()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(Subject,CodeSource)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(CodeSource)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(Permissions,CodeSource)</name>
      <ncss>25</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.addSelfPermissions(Permission,CodeSource,CodeSource,Permissions)</name>
      <ncss>23</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPrincipalInfo(PolicyParser.PrincipalEntry,CodeSource)</name>
      <ncss>38</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getSignerCertificates(CodeSource)</name>
      <ncss>26</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.canonicalizeCodebase(CodeSource,boolean)</name>
      <ncss>48</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.PolicyEntry(CodeSource)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.add(Permission)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.getCodeSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.toString()</name>
      <ncss>14</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.PolicyPermissions(PolicyFile,CodeSource)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.add(Permission)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.init()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.implies(Permission)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.elements()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.toString()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>hallo.hello.Test91.getAttributes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>lama.karma.Test92.show()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.UncaughtExceptionHandler.uncaughtException(Thread,Throwable)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getDefaultUncaughtExceptionHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getUncaughtExceptionHandler()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setUncaughtExceptionHandler(UncaughtExceptionHandler)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.dispatchUncaughtException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setPriority0(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.stop0(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.suspend0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.resume0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.interrupt0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>hope.pope.Test94.compareTo(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>steve.jobs.Test95.KeyEvent(Component,int,long,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test96.removeAWTEventListener(AWTEventListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.name()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.ordinal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.Enum(String,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.clone()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.compareTo(E)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.getDeclaringClass()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.valueOf(T,String)</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.getenv(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.getenv()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.environment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.emptyEnvironment(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.environ()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ProcessEnvironment()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.validateVariable(String)</name>
      <ncss>3</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.validateValue(String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.ExternalData(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.getBytes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.Variable(String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOfQueryOnly(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOfQueryOnly(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOf(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOf(Variable[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.compareTo(Variable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.Value(String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOfQueryOnly(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOfQueryOnly(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOf(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOf(Value[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.compareTo(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.toString(Value)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.StringEnvironment(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.get(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.put(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.keySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.entrySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.values()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.toEnvironmentBlock(m.values[][])</name>
      <ncss>17</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.toEnvironmentBlock(String,String[])</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.StringEntry(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.setValue(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.StringEntrySet(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.setValue(Value)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.vvEntry(Object)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.StringValues(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.StringKeySet(Variable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayCompare(int[],int[][])</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayEquals(boolean[],boolean[][])</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayHash(int[])</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatListHeader(int,String[])</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatListLine(String,String[])</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._divide(int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._divide(long,long)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatPackageMatrix(int,int,int,int,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.AsciiFormatter(Javancss)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printPackageNcss()</name>
      <ncss>21</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatObjectResume(int,long,long,long,long)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printObjectNcss()</name>
      <ncss>21</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatFunctionResume(int,long,long,long)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printFunctionNcss()</name>
      <ncss>19</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printPackageNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printObjectNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printFunctionNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printJavaNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.FunctionMetric.FunctionMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.FunctionMetric.clear()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.createSourceReader(File)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureSource(File)</name>
      <ncss>28</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureSource(Reader)</name>
      <ncss>48</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureFiles(List)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureRoot(Reader)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getImports()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFunctions()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printObjectNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printFunctionNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printPackageNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(List)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(File)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.parseImports()</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setSourceFile(File)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(Reader)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._addJavaFiles(File,List)</name>
      <ncss>11</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.findFiles(List,boolean)</name>
      <ncss>36</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(String[],String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.WindowAdapter.windowClosing(WindowEvent)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(String[])</name>
      <ncss>65</ncss>
      <ccn>28</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLOC()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getJvdc()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getJdcl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getSl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getMl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFunctionMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getObjectMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getPackageMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLastErrorMessage()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLastError()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setExit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setXML(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.useXML()</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFormatter()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getEncoding()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setEncoding(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.newReader(InputStream)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.newReader(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.JavancssAntTask()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFormat(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setPackageMetrics(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassMetrics(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFunctionMetrics(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setGenerateReport(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setSrcdir(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setOutputfile(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClasspath(Path)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setAbortOnFail(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.execute()</name>
      <ncss>16</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.generateReport(List)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.thresholdsExceeded(List)</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.findFilesToAnalyse()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.copyFiles(String[])</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.createClasspath()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.getCommandLineArguments(List)</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.createSourceListFile(List)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.getJavaNcss(List)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.packageThresholdsExceeded(List)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.packageThresholdExceeded(PackageMetric)</name>
      <ncss>27</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.classThresholdsExceeded(List)</name>
      <ncss>8</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.classThresholdExceeded(ObjectMetric)</name>
      <ncss>38</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.functionThresholdsExceeded(List)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.functionThresholdExceeded(FunctionMetric)</name>
      <ncss>30</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassPerPkgMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassPerPkgMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFuncPerPkgMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFuncPerPkgMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerPkgMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerPkgMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassPerClassMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassPerClassMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFuncPerClassMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFuncPerClassMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerClassMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerClassMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setJvdcPerClassMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setJvdcPerClassMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setCcnPerFuncMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setCcnPerFuncMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerFuncMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerFuncMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setJvdcPerFuncMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setJvdcPerFuncMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.save()</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame._setMenuBar()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.getInit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.JavancssFrame(Init)</name>
      <ncss>23</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.showJavancss(Javancss)</name>
      <ncss>61</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.run()</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.setVisible(boolean)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.setSelectedTab(String)</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.actionPerformed(ActionEvent)</name>
      <ncss>23</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Main.main(String[])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.Metric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.clear()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.compareTo(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.ObjectMetric.ObjectMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.ObjectMetric.clear()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.PackageMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.clear()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.add(PackageMetric)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._divide(int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._divide(long,long)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatPackageMatrix(int,int,int,int,int,int,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.XmlFormatter(Javancss)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printPackageNcss()</name>
      <ncss>25</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatObjectResume(int,long,long,long,long,long,long,long)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printObjectNcss()</name>
      <ncss>22</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatFunctionResume(int,long,long,long,long,long,long)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printFunctionNcss()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printStart()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.setTestDir(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestDir()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestFile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.AbstractTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.AbstractTest(Test)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.main()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.main(File)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.measureTestFile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcss(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcss(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int,int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testJavadocs()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testJavadocLines()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(int,String,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(javadocLines[],String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(Javancss,String,int)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkParse(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.JavancssTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.JavancssTest(Test)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._doIt()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testNcss()</name>
      <ncss>143</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testNcssAndMore()</name>
      <ncss>73</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJvdcs(int,int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testCCN()</name>
      <ncss>21</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.assertCCN(List,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.measureWithArgs(String[])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testEncoding()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testVersion()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testRecursive()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.testParsing()</name>
      <ncss>16</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.testXML2Text()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.XmlFormatterTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.XmlFormatterTest(Test)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.getXslFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest._doIt()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.parse()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.parseImportUnit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getLOC()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getJvdc()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getFunction()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getObject()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getPackage()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getImports()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getPackageObjects()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getLastFunction()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.setDebugStream(java.io.PrintStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjStopStringLiteralDfa_0(int,long,long,long)</name>
      <ncss>96</ncss>
      <ccn>78</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjStartNfa_0(int,long,long,long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjStopAtPos(int,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjStartNfaWithStates_0(int,int,int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa0_0()</name>
      <ncss>101</ncss>
      <ccn>85</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa1_0(long,long)</name>
      <ncss>117</ncss>
      <ccn>87</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa2_0(long,long,long,long)</name>
      <ncss>68</ncss>
      <ccn>53</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa3_0(long,long,long,long)</name>
      <ncss>74</ncss>
      <ccn>61</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa4_0(long,long,long,long)</name>
      <ncss>66</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa5_0(long,long,long,long)</name>
      <ncss>60</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa6_0(long,long)</name>
      <ncss>46</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa7_0(long,long)</name>
      <ncss>30</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa8_0(long,long)</name>
      <ncss>27</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa9_0(long,long)</name>
      <ncss>21</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa10_0(long,long)</name>
      <ncss>13</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa11_0(long,long)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCheckNAdd(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjAddStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCheckNAddTwoStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCheckNAddStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCheckNAddStates(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveNfa_0(int,int)</name>
      <ncss>496</ncss>
      <ccn>230</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa0_2()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa1_2(long)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa0_1()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa1_1(long)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCanMove_0(int,int,int,long,long)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCanMove_1(int,int,int,long,long)</name>
      <ncss>80</ncss>
      <ccn>77</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCanMove_2(int,int,int,long,long)</name>
      <ncss>80</ncss>
      <ccn>77</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.JavaParser15TokenManager(JavaCharStream)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.JavaParser15TokenManager(JavaCharStream,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.ReInit(JavaCharStream)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.ReInitRounds()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.ReInit(JavaCharStream,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.SwitchTo(int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjFillToken()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.getNextToken()</name>
      <ncss>94</ncss>
      <ccn>35</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.SkipLexicalActions(Token)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.MoreLexicalActions()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.TokenLexicalActions(Token)</name>
      <ncss>22</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.Token.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.Token.newToken(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.setDebugStream(java.io.PrintStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjStopStringLiteralDfa_0(int,long,long,long)</name>
      <ncss>96</ncss>
      <ccn>78</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjStartNfa_0(int,long,long,long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjStopAtPos(int,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjStartNfaWithStates_0(int,int,int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa0_0()</name>
      <ncss>101</ncss>
      <ccn>85</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa1_0(long,long)</name>
      <ncss>117</ncss>
      <ccn>87</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa2_0(long,long,long,long)</name>
      <ncss>68</ncss>
      <ccn>53</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa3_0(long,long,long,long)</name>
      <ncss>74</ncss>
      <ccn>61</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa4_0(long,long,long,long)</name>
      <ncss>66</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa5_0(long,long,long,long)</name>
      <ncss>60</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa6_0(long,long)</name>
      <ncss>46</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa7_0(long,long)</name>
      <ncss>30</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa8_0(long,long)</name>
      <ncss>27</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa9_0(long,long)</name>
      <ncss>21</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa10_0(long,long)</name>
      <ncss>13</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa11_0(long,long)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCheckNAdd(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjAddStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCheckNAddTwoStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCheckNAddStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCheckNAddStates(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveNfa_0(int,int)</name>
      <ncss>496</ncss>
      <ccn>230</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa0_2()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa1_2(long)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa0_1()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa1_1(long)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCanMove_0(int,int,int,long,long)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCanMove_1(int,int,int,long,long)</name>
      <ncss>80</ncss>
      <ccn>77</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCanMove_2(int,int,int,long,long)</name>
      <ncss>80</ncss>
      <ccn>77</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.JavaParser15DebugTokenManager(JavaCharStream)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.JavaParser15DebugTokenManager(JavaCharStream,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.ReInit(JavaCharStream)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.ReInitRounds()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.ReInit(JavaCharStream,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.SwitchTo(int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjFillToken()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.getNextToken()</name>
      <ncss>94</ncss>
      <ccn>35</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.SkipLexicalActions(Token)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.MoreLexicalActions()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.TokenLexicalActions(Token)</name>
      <ncss>22</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.Token.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.Token.newToken(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._gnudoit(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setNewEmacsWidth()</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setProjectSuffix()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.Jacob(Controller,String[])</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.loadProject()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.save()</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.showClasses()</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openOldProject(String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.createMakefile()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.setClassDependencies()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editFile(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.startJavaLanguageSpecHelp()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.insertPackage()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.removePackage()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._selectClasses(String,boolean)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.readFile(URL)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swapInt(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swapInt()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.objectsToVector(Object[])</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,Vector)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Provider.Service(Provider)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedEntrySet.CheckedEntrySet(V,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.checkedSortedMap(V,K,V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.CheckedSortedMap(V,K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.comparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.firstKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.lastKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.subMap(K,K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.headMap(K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.tailMap(K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.iterator()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptyList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.get(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptyMap()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.get(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.keySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.values()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.entrySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singleton(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.SingletonSet(E)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.next()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.iterator()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singletonList(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.SingletonList(E)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.get(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singletonMap(K,V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.SingletonMap(K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.get(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.keySet()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.entrySet()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.values()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.ImmutableEntry(K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.setValue(V)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.hashCode()</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.nCopies(int,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.CopiesList(int,E)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.get(int)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.reverseOrder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator.compare(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.reverseOrder(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator2.ReverseComparator2(T)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator2.compare(T,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.Enumeration.hasMoreElements()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.Enumeration.nextElement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.enumeration(T)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.list(T)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.eq(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.frequency(Collection,Object)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.disjoint(Collection,Collection)</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.addAll(T,T)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AClass.AClass(int,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AClass.getN()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AClass.getS()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AnEnum.aMethod()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AnEnum.aMethod()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test105.Test105(String[],String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid1(Bar.Info)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid2(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid(T.Info)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.Test113(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug0(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug1(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug2(Object)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test114.Javancss(String[],String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser._formatPackage(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getLOC()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getJvdc()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getFunction()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getObject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getImports()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getPackageObjects()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getLastFunction()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isPublic(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isProtected(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isPrivate(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isStatic(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isAbstract(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isFinal(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isNative(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isStrictfp(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isSynchronized(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isTransient(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isVolatile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.removeModifier(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CompilationUnit()</name>
      <ncss>124</ncss>
      <ccn>54</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImportUnit()</name>
      <ncss>60</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PackageDeclaration()</name>
      <ncss>28</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImportDeclaration()</name>
      <ncss>33</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeDeclaration()</name>
      <ncss>53</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassDeclaration()</name>
      <ncss>77</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnmodifiedClassDeclaration()</name>
      <ncss>57</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassBody()</name>
      <ncss>40</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NestedClassDeclaration()</name>
      <ncss>64</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassBodyDeclaration()</name>
      <ncss>80</ncss>
      <ccn>39</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarationLookahead()</name>
      <ncss>67</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InterfaceDeclaration()</name>
      <ncss>64</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NestedInterfaceDeclaration()</name>
      <ncss>63</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnmodifiedInterfaceDeclaration()</name>
      <ncss>80</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InterfaceMemberDeclaration()</name>
      <ncss>47</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldDeclaration()</name>
      <ncss>82</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableDeclarator()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableDeclaratorId()</name>
      <ncss>24</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableInitializer()</name>
      <ncss>40</ncss>
      <ccn>33</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArrayInitializer()</name>
      <ncss>51</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclaration()</name>
      <ncss>162</ncss>
      <ccn>53</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarator()</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameters()</name>
      <ncss>34</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameter()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConstructorDeclaration()</name>
      <ncss>148</ncss>
      <ccn>68</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExplicitConstructorInvocation()</name>
      <ncss>46</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Initializer()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Type()</name>
      <ncss>46</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldTypeLookahead()</name>
      <ncss>29</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimitiveType()</name>
      <ncss>30</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ResultType()</name>
      <ncss>22</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Name()</name>
      <ncss>22</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldTypeNameLookahead()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NameList()</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Expression()</name>
      <ncss>40</ncss>
      <ccn>33</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Assignment()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssignmentOperator()</name>
      <ncss>42</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalExpression()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalOrExpression()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalAndExpression()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InclusiveOrExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExclusiveOrExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AndExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EqualityExpression()</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InstanceOfExpression()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.RelationalExpression()</name>
      <ncss>31</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ShiftExpression()</name>
      <ncss>27</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AdditiveExpression()</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MultiplicativeExpression()</name>
      <ncss>27</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnaryExpression()</name>
      <ncss>54</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PreIncrementExpression()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PreDecrementExpression()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnaryExpressionNotPlusMinus()</name>
      <ncss>55</ncss>
      <ccn>35</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CastLookahead()</name>
      <ncss>60</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PostfixLookahead()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PostfixExpression()</name>
      <ncss>19</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CastExpression()</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimaryExpression()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimaryPrefix()</name>
      <ncss>53</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimarySuffix()</name>
      <ncss>29</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Literal()</name>
      <ncss>25</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BooleanLiteral()</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NullLiteral()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Arguments()</name>
      <ncss>37</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArgumentList()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AllocationExpression()</name>
      <ncss>52</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArrayDimsAndInits()</name>
      <ncss>36</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Statement()</name>
      <ncss>86</ncss>
      <ccn>43</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.LabeledStatement()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssertStatementLookahead()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssertStatement()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Block()</name>
      <ncss>52</ncss>
      <ccn>44</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BlockStatement()</name>
      <ncss>58</ncss>
      <ccn>44</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.LocalVariableDeclaration()</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EmptyStatement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.StatementExpression()</name>
      <ncss>81</ncss>
      <ccn>59</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SwitchStatement()</name>
      <ncss>69</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SwitchLabel()</name>
      <ncss>21</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.IfStatement()</name>
      <ncss>17</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.WhileStatement()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.DoStatement()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForStatement()</name>
      <ncss>144</ncss>
      <ccn>114</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForInit()</name>
      <ncss>36</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.StatementExpressionList()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForUpdate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BreakStatement()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ContinueStatement()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReturnStatement()</name>
      <ncss>41</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ThrowStatement()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SynchronizedStatement()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TryStatement()</name>
      <ncss>28</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Identifier()</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Annotation()</name>
      <ncss>15</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NormalAnnotation()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MarkerAnnotation()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SingleMemberAnnotation()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValuePairs()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValuePair()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValue()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValueArrayInitializer()</name>
      <ncss>52</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeDeclaration(int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeBody()</name>
      <ncss>39</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeMemberDeclaration()</name>
      <ncss>81</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.DefaultValue()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Modifiers()</name>
      <ncss>85</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceDeclaration(int)</name>
      <ncss>34</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumDeclaration(int)</name>
      <ncss>37</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeParameters()</name>
      <ncss>34</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExtendsList(boolean)</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImplementsList(boolean)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceBody(boolean)</name>
      <ncss>42</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumBody()</name>
      <ncss>79</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeParameter()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceType()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceBodyDeclaration(boolean)</name>
      <ncss>92</ncss>
      <ccn>66</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumConstant()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeBound()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeArguments()</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeArgument()</name>
      <ncss>31</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReferenceType()</name>
      <ncss>33</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.WildcardBounds()</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldDeclaration15(int)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclaration15(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarator15()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameters15()</name>
      <ncss>41</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameter15()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberSelector()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_1(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_2(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_3(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_4(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_5(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_6(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_7(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_8(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_9(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_10(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_11(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_12(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_13(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_14(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_15(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_16(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_17(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_18(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_19(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_20(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_21(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_22(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_23(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_24(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_25(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_26(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_27(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_28(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_29(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_30(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_31(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_32(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_33(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_34(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_35(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_36(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_37(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_38(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_39(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_40(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_41(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_42(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_43(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_44(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_45(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_46(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_47(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_48(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_49(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_50(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_51(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_52(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_53(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_54(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_55(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_56(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_57(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_58(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_59(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_60(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_61(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_62(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_63(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_64(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_65(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_551()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_562()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_472()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_444()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_113()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_561()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_550()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_3()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_428()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_78()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_112()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_530()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_445()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_411()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_2()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_486()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_382()</name>
      <ncss>34</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_111()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_110()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_462()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_560()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_436()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_559()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_558()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_549()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_404()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_109()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_403()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_402()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_381()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_108()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_380()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_343()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_316()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_44()</name>
      <ncss>41</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_295()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_294()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_293()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_272()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_292()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_230()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_145()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_529()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_379()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_107()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_106()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_437()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_439()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_358()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_357()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_356()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_355()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_354()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_438()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_353()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_352()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_40()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_351()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_350()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_349()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_435()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_348()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_43()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_347()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_346()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_77()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_345()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_1()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_344()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_317()</name>
      <ncss>83</ncss>
      <ccn>66</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_42()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_461()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_460()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_420()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_397()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_62()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_459()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_367()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_39()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_325()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_41()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_458()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_457()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_368()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_456()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_61()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_455()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_104()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_454()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_328()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_417()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_327()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_218()</name>
      <ncss>27</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_453()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_434()</name>
      <ncss>48</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_326()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_60()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_399()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_433()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_103()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_38()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_15()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_65()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_418()</name>
      <ncss>47</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_396()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_497()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_310()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_281()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_452()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_136()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_64()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_395()</name>
      <ncss>22</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_261()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_135()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_297()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_340()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_339()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_419()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_181()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_432()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_338()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_313()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_134()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_324()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_174()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_59()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_451()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_244()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_290()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_366()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_268()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_289()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_284()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_365()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_323()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_180()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_185()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_522()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_450()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_296()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_431()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_92()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_184()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_173()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_133()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_226()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_304()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_225()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_303()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_137()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_63()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_302()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_301()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_300()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_416()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_179()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_131()</name>
      <ncss>36</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_521()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_299()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_276()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_172()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_496()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_314()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_215()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_214()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_520()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_178()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_57()</name>
      <ncss>33</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_132()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_213()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_171()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_130()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_56()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_37()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_32()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_55()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_364()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_36()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_258()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_322()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_177()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_519()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_363()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_101()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_35()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_170()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_362()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_361()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_34()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_250()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_257()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_360()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_518()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_176()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_517()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_516()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_495()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_321()</name>
      <ncss>32</ncss>
      <ccn>27</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_169()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_256()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_481()</name>
      <ncss>36</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_249()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_53()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_14()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_248()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_285()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_13()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_247()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_58()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_298()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_90()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_175()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_31()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_255()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_12()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_544()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_89()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_168()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_33()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_52()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_11()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_54()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_543()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_374()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_273()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_288()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_542()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_246()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_491()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_186()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_245()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_265()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_275()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_541()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_373()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_333()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_287()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_242()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_540()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_254()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_539()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_501()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_94()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_243()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_30()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_267()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_286()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_241()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_253()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_335()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_183()</name>
      <ncss>29</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_29()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_252()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_334()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_309()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_490()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_359()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_251()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_308()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_320()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_97()</name>
      <ncss>22</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_266()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_274()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_26()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_240()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_492()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_28()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_27()</name>
      <ncss>55</ncss>
      <ccn>49</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_443()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_201()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_319()</name>
      <ncss>38</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_424()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_98()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_25()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_24()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_23()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_224()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_306()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_280()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_279()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_567()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_305()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_278()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_557()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_259()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_277()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_566()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_548()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_556()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_372()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_545()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_528()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_511()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_565()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_555()</name>
      <ncss>22</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_547()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_371()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_527()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_515()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_370()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_546()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_332()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_524()</name>
      <ncss>22</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_526()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_510()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_331()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_369()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_330()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_200()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_329()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_307()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_182()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_525()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_485()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_514()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_499()</name>
      <ncss>27</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_513()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_483()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_199()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_523()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_512()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_509()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_494()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_484()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_478()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_91()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_471()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_498()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_239()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_198()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_406()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_482()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_442()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_197()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_409()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_408()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_470()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_407()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_405()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_401()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_393()</name>
      <ncss>39</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_238()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_196()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_441()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_423()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_376()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_422()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_337()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_195()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_237()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_129()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_400()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_152()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_312()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_194()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_128()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_375()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_236()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_193()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_127()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_336()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_151()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_159()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_126()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_192()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_311()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_125()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_235()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_191()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_282()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_124()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_158()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_150()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_123()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_190()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_263()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_234()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_122()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_162()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_96()</name>
      <ncss>63</ncss>
      <ccn>50</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_189()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_149()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_157()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_121()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_22()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_262()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_233()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_120()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_148()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_220()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_119()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_474()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_156()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_161()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_105()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_219()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_118()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_446()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_232()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_51()</name>
      <ncss>63</ncss>
      <ccn>50</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_155()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_80()</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_147()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_86()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_160()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_447()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_429()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_166()</name>
      <ncss>48</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_231()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_165()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_167()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_21()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_146()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_88()</name>
      <ncss>35</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_83()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_154()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_10()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_378()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_85()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_9()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_480()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_479()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_469()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_8()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_153()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_84()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_468()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_164()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_7()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_82()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_20()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_467()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_6()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_50()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_476()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_163()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_466()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_87()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_465()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_464()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_5()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_217()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_463()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_440()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_102()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_216()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_49()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_209()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_208()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_207()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_489()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_206()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_504()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_205()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_204()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_203()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_283()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_99()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_202()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_377()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_508()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_264()</name>
      <ncss>30</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_503()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_342()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_116()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_223()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_500()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_222()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_507()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_117()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_221()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_506()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_211()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_212()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_260()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_505()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_502()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_493()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_477()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_341()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_210()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_100()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_315()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_291()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_421()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_115()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_488()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_144()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_270()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_398()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_81()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_18()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_271()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_19()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_48()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_269()</name>
      <ncss>25</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_47()</name>
      <ncss>25</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_475()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_449()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_487()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_229()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_448()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_430()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_228()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_138()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_227()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_188()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_95()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_187()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_538()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_537()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_318()</name>
      <ncss>33</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_392()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_391()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_390()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_536()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_415()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_535()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_389()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_571()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_554()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_534()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_388()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_93()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_17()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_387()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_16()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_564()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_114()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_414()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_413()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_46()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_553()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_570()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_143()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_531()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_569()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_412()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_45()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_568()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_563()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_552()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_532()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_142()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_533()</name>
      <ncss>29</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_386()</name>
      <ncss>29</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_427()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_141()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_385()</name>
      <ncss>30</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_426()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_384()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_425()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_410()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_140()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_394()</name>
      <ncss>50</ncss>
      <ccn>42</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_383()</name>
      <ncss>29</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_473()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_139()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_4()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_79()</name>
      <ncss>28</ncss>
      <ccn>22</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(java.io.InputStream)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(java.io.InputStream)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(java.io.Reader)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(java.io.Reader)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(JavaParserTokenManager)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(JavaParserTokenManager)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_consume_token(int)</name>
      <ncss>21</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_scan_token(int)</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getNextToken()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getToken(int)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_ntk()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_add_error_token(int,int)</name>
      <ncss>25</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.generateParseException()</name>
      <ncss>31</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.enable_tracing()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.disable_tracing()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_rescan_token()</name>
      <ncss>206</ncss>
      <ccn>69</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_save(int,int)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test116.methodica()</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.TempBooleanAttributes(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.isSingleValued()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getTrueString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getFalseString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.equals(BooleanAttribute)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestEnum.TestEnum(Type)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestEnum.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.readFile(URL)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test120.getFiles()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test120.getFile()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test123.getFile()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.Test123.finalize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.Example2.Example2()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test125.save(ManagedFile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.world()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.getLocation(LocationKey)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.insertLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.updateLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.deleteLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ClassWithGenericizedConstructor.ClassWithGenericizedConstructor(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test128.update(Component,UpdateStrategy)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>PerfTest.class.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>PerfTest.startTests()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Bug.Bug()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test123.SimpleBean.hasAnnotation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test123.SimpleBean.doesNotHaveAnnotation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test123.testAnnotationLimiter()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test132.Test132()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test133.convertIntoKnownBaseType(Object,Class)</name>
      <ncss>11</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test134.main(String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>MyClass.MyInterface.doStuff()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestJavadocConstructor.TestJavadocConstructor(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>TestJavadocConstructor.testMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test14.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestJavadocAnnotation.testMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>TestJavadocNew.TestJavadocAnnotation.testMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>TestJavadocNew.testMethod(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean.getS()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean.inherit0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean.inherit1()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean.inherit2()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test.flatten(Source,Store)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Class1.foo()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Class2.bar()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Class2.foo()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test16.Predicate.test(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test16.filter()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test17.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test17.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.foo(String[],Controller)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.Jacob(Controller,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.foo2(int,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.Something()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AudioItem.next()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.init()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.start()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.stop()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.mouseUp(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.paint(Graphics)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoop.ImageLoop(URL,String,ImageLoopItem)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.init()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.run()</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.paint(Graphics)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.update(Graphics)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.start()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.stop()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.mouseDown(int,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Daten._lesenDateien()</name>
      <ncss>28</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.init()</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putDatei(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.doPlan()</name>
      <ncss>99</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putAnzGamer(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putNextGamer(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putVerein(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putStadionname(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.getVereine()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>InputWindow.InputWindow(Interface,String,String)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>InputWindow.action(Event,Object)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SelectFromListWindow.SelectFromListWindow(Interface,String,String[])</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SelectFromListWindow.action(Event,Object)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ShowMsgBox.ShowMsgBox(Frame,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ShowMsgBox.action(Event,Object)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.Interface()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.putInput(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.putInput(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.input(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.selectFromList(String,String[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SimSoccer._init()</name>
      <ncss>22</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SimSoccer.main(String[])</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._getNeurons()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setInputNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setUnivers(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setStartPosition(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.nextStep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Net._getNeurons()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setInputNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setUnivers(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setStartPosition(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.nextStep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Neuron.getWeight()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.setWeight(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.distanceTo(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.moveTo(InputNeuron,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Neuron.addNeighbor(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.addMetaNeighbor(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.getNeighbors()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.getMetaNeighbors()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init._setProjectPath()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.start()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.setProjectFullName(String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getProjectFullName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getProjectPath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getTextBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getListBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob2.createMakefile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob2.test()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._gnudoit(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(Package,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getRcsVersion()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getRcs()</name>
      <ncss>25</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakefileAll()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClean()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakefileZip()</name>
      <ncss>42</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakePublic()</name>
      <ncss>56</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.Jacob3(Controller,String[])</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.loadProject()</name>
      <ncss>14</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.save()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.showClasses()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openOldProject(String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.createMakefile()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editFile(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.startJavaLanguageSpecHelp()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.insertPackage()</name>
      <ncss>24</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.removePackage()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._selectClasses(String,boolean)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.selectMainClass()</name>
      <ncss>24</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.removeClasses()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.addClasses()</name>
      <ncss>39</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.exit()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test30.filter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(SocketImpl)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int,InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,InetAddress,int,boolean)</name>
      <ncss>18</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getInetAddress()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getLocalAddress()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getPort()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getLocalPort()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getInputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getOutputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setTcpNoDelay(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getTcpNoDelay()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSoLinger(boolean,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getSoLinger()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSoTimeout(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getSoTimeout()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.close()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSocketImplFactory(SocketImplFactory)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.createStatement()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.prepareStatement(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.prepareCall(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.nativeSQL(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setAutoCommit(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getAutoCommit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.commit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.rollback()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.isClosed()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getMetaData()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setReadOnly(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.isReadOnly()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setCatalog(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getCatalog()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setTransactionIsolation(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getTransactionIsolation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getWarnings()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.clearWarnings()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat(String,DecimalFormatSymbols)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.format(double,StringBuffer,FieldPosition)</name>
      <ncss>23</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.format(long,StringBuffer,FieldPosition)</name>
      <ncss>23</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.parse(String,ParsePosition)</name>
      <ncss>118</ncss>
      <ccn>59</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getDecimalFormatSymbols()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setDecimalFormatSymbols(DecimalFormatSymbols)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getPositivePrefix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setPositivePrefix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getNegativePrefix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setNegativePrefix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getPositiveSuffix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setPositiveSuffix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getNegativeSuffix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setNegativeSuffix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getMultiplier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setMultiplier(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getGroupingSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setGroupingSize(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isDecimalSeparatorAlwaysShown()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.clone()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toLocalizedPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toPattern(boolean)</name>
      <ncss>32</ncss>
      <ccn>19</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyPattern(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyLocalizedPattern(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyPattern(String,boolean)</name>
      <ncss>125</ncss>
      <ccn>34</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.appendNativeDigits(StringBuffer,FieldPosition)</name>
      <ncss>29</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isSpecialChar(char)</name>
      <ncss>2</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isLongMIN_VALUE(DigitList)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.readObject(ObjectInputStream)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.forward()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.backward()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.map()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.text.Test39.Test39()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.text.Test39.run()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.removePackage()</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test40.Test40(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.getI()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.setI(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.Test41(int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.darwinize()</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.dummy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.Test46()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.filter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.main(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test47.filter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test48.Test48()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test48.foo()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>MainJMenuBar.MainJMenuBar(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.Something1()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.Something2()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenuBar(Vector,MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.updateMenu()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getOldFileItems(Init)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getMenuBodyElements(Vector,Init)</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getHelpBroker(MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.MainJMenu(Vector,MainJFrame)</name>
      <ncss>58</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.removeOldFileItems()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.insertOldFiles(MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.methodTest52()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Test52()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Test52(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Inner.Inner()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test53.Test53(String,Object,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test53.Test53(String,Object,String,String[])</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test54.Test54(Fd2Record)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test55.Test55(Hashtable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test55.Test56(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.Math.Math()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.sin(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.cos(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.tan(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.asin(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.acos(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.atan(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.toRadians(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.toDegrees(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.exp(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.log(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.sqrt(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.IEEEremainder(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.ceil(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.floor(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.rint(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.atan2(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.pow(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.round(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.round(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.initRNG()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.Math.random()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(float)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(double)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.StrictMath()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.sin(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.cos(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.tan(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.asin(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.acos(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.atan(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.toRadians(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.toDegrees(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.exp(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.log(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.sqrt(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.IEEEremainder(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.ceil(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.floor(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.rint(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.atan2(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.pow(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.round(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.round(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.initRNG()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.random()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(float)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(double)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.equals(Object)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.Event(String,String,String,String,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getSourceHost()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getSourceComponent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getCreationDate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getDescription()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.Utilities(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.printStackTrace()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStack()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStackSafe()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.addClassToHashtable(Hashtable,String)</name>
      <ncss>13</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.removeClassFromHashtable(Hashtable,String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.levelTest(int)</name>
      <ncss>15</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.categoryTest(String)</name>
      <ncss>22</ncss>
      <ccn>16</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.sourceClassValid()</name>
      <ncss>47</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.readFile(URL)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swapInt(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swapInt()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.objectsToVector(Object[])</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,Vector)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.Collect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkDebugCollectRef(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.setDebug(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.register(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkStatisticID(Statistic)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.unregister(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isRegistered(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.currentValue(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.report(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reportAll()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reset(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.set(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidCategory(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidLevel(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.Collect()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkDebugCollectRef(Debug)</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.setDebug(Debug)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.register(Statistic)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkStatisticID(Statistic)</name>
      <ncss>23</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.unregister(Statistic)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isRegistered(Statistic)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.currentValue(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.report(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reportAll()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reset(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.set(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidCategory(String)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidLevel(int)</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_checkDebugCollectRef(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_checkStatisticID(Statistic)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_isRegistered(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.clone()</name>
      <ncss>15</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.Debug()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.Debug(DebugConstants,Collect)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.setOutputInterface(DebugOutput)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getAssert()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getCollect()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getOutputInterface()</name>
      <ncss>23</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getDebugConstants()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOn()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOn(Thread)</name>
      <ncss>24</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOff()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOff(Thread)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.turnOn()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.turnOff()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addCategory(String,int)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeCategory(String)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.containsCategory(String)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listCategories()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addClass(Class)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addClass(String)</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeClass(Class)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeClass(String)</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getContext(Thread)</name>
      <ncss>23</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addContext(Context)</name>
      <ncss>24</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeContext(Context)</name>
      <ncss>24</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listClasses()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.setLevel(int)</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getLevel()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listThreads()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.init(DebugConstants,Collect)</name>
      <ncss>34</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addCategoryToHashtable(Hashtable,String,int)</name>
      <ncss>35</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeCategoryFromHashtable(Hashtable,String)</name>
      <ncss>21</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getOutputInterface()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getAssert()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getCollect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getDebugConstants()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.Utilities(Debug)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.printStackTrace()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStackSafe()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.addClassToHashtable(Hashtable,String)</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.removeClassFromHashtable(Hashtable,String)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.levelTest(int)</name>
      <ncss>51</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.categoryTest(String)</name>
      <ncss>65</ncss>
      <ccn>18</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.sourceClassValid()</name>
      <ncss>92</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.getWriter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.clone()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.WindowOutput(Debug)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.ActionListener.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.ActionListener.actionPerformed(ActionEvent)</name>
      <ncss>19</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.WindowAdapter.windowClosing(WindowEvent)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.createUI()</name>
      <ncss>45</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.TestSuiteThread(String)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.run()</name>
      <ncss>188</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.interrupt()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.isInterrupted()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.destroy()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.getContextClassLoader()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.setContextClassLoader(java.lang.ClassLoader)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test66.Test66()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test67.assert(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test67.main(String[])</name>
      <ncss>27</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test68.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test7.foo()</name>
      <ncss>29</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test70.InnerClass.test()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.Runnable.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.Runnable.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.TestRun.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.main(String[])</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.TestRun.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.testPWS()</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test72.testPWU10()</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test72.intersect(BoundingBox)</name>
      <ncss>2</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.verboseIntersect(BoundingBox)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.testQuestionMark()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyInputStream.AnyInputStream(EncapsInputStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyOutputStream.AnyOutputStream(ORB)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyOutputStream.create_input_stream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.convertToNative(ORB,Any)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyImpl(ORB)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyImpl(ORB,Any)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.type()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.realType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.realType(TypeCode)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.type(TypeCode)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.equal(Any)</name>
      <ncss>67</ncss>
      <ccn>62</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.equalMember(TypeCode,InputStream,InputStream)</name>
      <ncss>95</ncss>
      <ccn>80</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.create_output_stream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.create_input_stream()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.read_value(org.omg.CORBA.portable.InputStream,TypeCode)</name>
      <ncss>21</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.write_value(OutputStream)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Streamable(Streamable)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Streamable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_short(short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.getTCKindName(int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.checkExtractBadOperation(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.checkExtractBadOperationList(tcName[])</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_short()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_long(int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_long()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ushort(short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ushort()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ulong(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ulong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_float(float)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_float()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_double(double)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_double()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_longlong(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_longlong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ulonglong(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ulonglong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_boolean(boolean)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_boolean()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_char(char)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_char()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_wchar(char)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_wchar()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_octet(byte)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_octet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_string(String)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_string()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_wstring(String)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_wstring()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_any(Any)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_any()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Object(org.omg.CORBA.Object)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Object(org.omg.CORBA.Object,TypeCode)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Object()</name>
      <ncss>11</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_TypeCode(TypeCode)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_TypeCode()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Principal(Principal)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Principal()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Value()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Value(Serializable)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Value(Serializable,org.omg.CORBA.TypeCode)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_fixed(java.math.BigDecimal)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_fixed(java.math.BigDecimal,org.omg.CORBA.TypeCode)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_fixed()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.createTypeCodeForClass(java.lang.Class,ORB)</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.getPrimitiveTypeCodeForClass(Class,ORB)</name>
      <ncss>29</ncss>
      <ccn>20</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extractAny(TypeCode,ORB)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extractAnyFromStream(TypeCode,InputStream,ORB)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.isInitialized()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.PrivilegedAction.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.IIOPOutputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.beginOptionalCustomData()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.setOrbStream(org.omg.CORBA_2_3.portable.OutputStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.getOrbStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.increaseRecursionDepth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.decreaseRecursionDepth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeObjectOverride(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.simpleWriteObject(Object,byte)</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.getFieldsNoCopy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.defaultWriteObjectDelegate()</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.enableReplaceObjectDelegate(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.annotateClass(Class)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.drain()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.flush()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.replaceObject(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.reset()</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(byte[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(byte[],int,int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeBoolean(boolean)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeByte(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeBytes(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeChar(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeChars(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeDouble(double)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeFloat(float)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeInt(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeLong(long)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeShort(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeStreamHeader()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.internalWriteUTF(org.omg.CORBA.portable.OutputStream,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeUTF(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.checkSpecialClasses(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.checkSubstitutableSpecialClasses(Object)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.outputObject(Object)</name>
      <ncss>27</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.invokeObjectWriter(ObjectStreamClass,Object)</name>
      <ncss>19</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeField(ObjectStreamField,Object)</name>
      <ncss>56</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeObjectField(ObjectStreamField,Object)</name>
      <ncss>33</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.outputClassFields(Object,Class,ObjectStreamField[])</name>
      <ncss>46</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.PrivilegedAction.run()</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.JNDIStateFactoryImpl()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.getStateToBind(Object,Name,Context,Hashtable)</name>
      <ncss>18</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.getORB(Context)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.Runnable.run()</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.java.security.PrivilegedAction.run()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.addToQueue(ImageInputStream)</name>
      <ncss>24</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.removeFromQueue(ImageInputStream)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Metacity(String)</name>
      <ncss>60</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getTitlePaneLayout()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getRoundedClipShape(int,int,int,int,int,int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.paintButtonBackground(SynthContext,Graphics,int,int,int,int)</name>
      <ncss>71</ncss>
      <ccn>27</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawButton(Node,String,String,Graphics,int,int,JInternalFrame)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.paintFrameBorder(SynthContext,Graphics,int,int,int,int)</name>
      <ncss>69</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Privileged.doPrivileged(int,Object)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Privileged.run()</name>
      <ncss>55</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getThemeDir(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getUserTheme()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.tileImage(Graphics,Image,int,int,int,int,int[])</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getImage(String,Color)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getImage(String)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.ColorizeImageFilter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.setColor(Color)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.colorize(Image,Color)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.filterRGB(int,int,int)</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.findChild(JComponent,String)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.addLayoutComponent(String,Component)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.removeLayoutComponent(Component)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.preferredLayoutSize(Container)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.minimumLayoutSize(Container)</name>
      <ncss>40</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.layoutContainer(Container)</name>
      <ncss>35</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getFrameGeometry()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.setFrameGeometry(JComponent,Map)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getInt(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBoolean(String,boolean)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawArc(Node,Graphics)</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawLine(Node,Graphics)</name>
      <ncss>17</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawRectangle(Node,Graphics)</name>
      <ncss>17</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTile(Node,Graphics,JInternalFrame)</name>
      <ncss>32</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTint(Node,Graphics)</name>
      <ncss>20</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTitle(Node,Graphics,JInternalFrame)</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateButtonSize(JComponent)</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateTitleArea(JInternalFrame)</name>
      <ncss>22</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateTitleTextWidth(Graphics,JInternalFrame)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.setClip(Node,Graphics)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKArrow(Node,Graphics)</name>
      <ncss>50</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKBox(Node,Graphics)</name>
      <ncss>36</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKVLine(Node,Graphics)</name>
      <ncss>19</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGradient(Node,Graphics)</name>
      <ncss>28</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawImage(Node,Graphics)</name>
      <ncss>35</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawIcon(Node,Graphics,JInternalFrame)</name>
      <ncss>24</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawInclude(Node,Graphics,JInternalFrame)</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.draw(Node,Graphics,JInternalFrame)</name>
      <ncss>55</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawPiece(Node,Graphics,String,int,int,int,int,JInternalFrame)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBorderInsets(SynthContext,Insets)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.logError(String,Exception)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.logError(String,String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PrivilegedAction.run()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getXMLDoc(URL)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNodesByName(Node,String)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(String,String[])</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(Node,String,String[])</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(NodeList,String,String[])</name>
      <ncss>22</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getStringAttr(Node,String)</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getStringAttr(NamedNodeMap,String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBooleanAttr(Node,String,boolean)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getIntAttr(Node,String,int)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getFloatAttr(Node,String,float)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.parseColor(String)</name>
      <ncss>22</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.parseColor2(String)</name>
      <ncss>47</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.evaluate(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.evaluate(String,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.expression()</name>
      <ncss>22</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.getTermValue()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.getFactorValue()</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.PeekableStringTokenizer(String,String,boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.peek()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.hasMoreTokens()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.nextToken()</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundRectClipShape()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundRectClipShape(int,int,int,int,int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.setRoundedRect(int,int,int,int,int,int,int)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getX()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getY()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getArcWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getArcHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getBounds2D()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getCornerFlags()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.setFrame(double,double,double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.contains(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.classify(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.intersects(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.contains(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getPathIterator(AffineTransform)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.RoundishRectIterator(RoundRectClipShape,AffineTransform)</name>
      <ncss>31</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.getWindingRule()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.isDone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.currentSegment(int[])</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.currentSegment(int[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test8.foo()</name>
      <ncss>29</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.createUI(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.MotifInternalFrameUI(JInternalFrame)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installUI(JComponent)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installDefaults()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installKeyboardActions()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.uninstallDefaults()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.getFrame()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.createNorthPane(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.getMaximumSize(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.uninstallKeyboardActions()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setupMenuOpenKey()</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setupMenuCloseKey()</name>
      <ncss>26</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.activateFrame(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.deactivateFrame(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setColors(JInternalFrame)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createUI(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.installUI(JComponent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.uninstallUI(JComponent)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.paintCurrentValue(Graphics,Rectangle,boolean)</name>
      <ncss>12</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.getPreferredSize(JComponent)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.BasicComboBoxUI.ComboBoxLayoutManager.layoutContainer(Container)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createLayoutManager()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.installKeyboardActions()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createPopup()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createEditor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createArrowButton()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.XPComboBoxButton.XPComboBoxButton()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.XPComboBoxButton.getPreferredSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.RolloverListener.mouseEntered(MouseEvent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.RolloverListener.mouseExited(MouseEvent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.WindowsComboPopup(JComboBox)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.createKeyListener()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.InvocationKeyHandler.InvocationKeyHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboBoxEditor.setItem(Object)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.commentText()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.tags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.tags(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.seeTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.inlineTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.firstSentenceTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.getRawCommentText()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.setRawCommentText(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.name()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.compareTo(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isField()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isEnumConstant()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isConstructor()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isAnnotationTypeElement()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isInterface()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isException()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isError()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isEnum()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isAnnotationType()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isOrdinaryClass()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isClass()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isIncluded()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.position()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.ArrayQueue(int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.resize(int)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.add(T)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.remove(int)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.get(int)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.size()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.resolveServerClassLoader(Map,MBeanServer)</name>
      <ncss>25</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.resolveClientClassLoader(Map)</name>
      <ncss>11</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.initCause(T,Throwable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getCause(Throwable)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getNotifBufferSize(Map)</name>
      <ncss>24</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getMaxFetchNotifNumber(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getFetchTimeout(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getIntegerAttribute(Map,String,long,long,long)</name>
      <ncss>20</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.checkAttributes(Map)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.filterAttributes(Map)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.purgeUnserializable(Collection)</name>
      <ncss>20</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.hideAttributes(SortedMap)</name>
      <ncss>55</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.parseHiddenAttributes(String,SortedSet,SortedSet)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getServerConnectionTimeout(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getConnectionCheckPeriod(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.mapToHashtable(Map)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.SinkOutputStream.write(OutputStream[],int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.SinkOutputStream.write(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.NoOpAP.NoOpAP()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.NoOpAP.process()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.CompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.CompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.process()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.getCompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.getCompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createSourceFile(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createClassFile(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createTextFile(Location,String,File,String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createBinaryFile(Location,String,File)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.getCommandName()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.printCommandHelp(PrintStream,boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.processCommand(String[],ORB,PrintStream)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.getFilter(Modifier)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.getFilter(Declaration)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.and(DeclarationFilter)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.or(DeclarationFilter)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.not()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.filter(D)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.filter(Declaration,D)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter(Modifier)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter(Modifier,Modifier)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.matches(Declaration)</name>
      <ncss>5</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._gnudoit(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setNewEmacsWidth()</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setProjectSuffix()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.Jacob(Controller,String[])</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.loadProject()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.save()</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.showClasses()</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openOldProject(String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.createMakefile()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.setClassDependencies()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editFile(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.startJavaLanguageSpecHelp()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.insertPackage()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.removePackage()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._selectClasses(String,boolean)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyFile()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.init()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.refresh()</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.initKeyStore(URL,String,String)</name>
      <ncss>22</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.initPolicyFile()</name>
      <ncss>47</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.checkForTrustedIdentity(Certificate)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.init(URL)</name>
      <ncss>20</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getInputStream(URL)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getCodeSource(PolicyParser.GrantEntry,KeyStore)</name>
      <ncss>17</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.addGrantEntry(PolicyParser.GrantEntry,KeyStore)</name>
      <ncss>46</ncss>
      <ccn>20</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getInstance(String,String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getCertificates(KeyStore,String)</name>
      <ncss>25</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.elements()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(Subject,CodeSource)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(CodeSource)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(Permissions,CodeSource)</name>
      <ncss>25</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.addSelfPermissions(Permission,CodeSource,CodeSource,Permissions)</name>
      <ncss>23</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPrincipalInfo(PolicyParser.PrincipalEntry,CodeSource)</name>
      <ncss>38</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getSignerCertificates(CodeSource)</name>
      <ncss>26</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.canonicalizeCodebase(CodeSource,boolean)</name>
      <ncss>48</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.PolicyEntry(CodeSource)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.add(Permission)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.getCodeSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.toString()</name>
      <ncss>14</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.PolicyPermissions(PolicyFile,CodeSource)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.add(Permission)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.init()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.implies(Permission)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.elements()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.toString()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>hallo.hello.Test91.getAttributes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>lama.karma.Test92.show()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.UncaughtExceptionHandler.uncaughtException(Thread,Throwable)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getDefaultUncaughtExceptionHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getUncaughtExceptionHandler()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setUncaughtExceptionHandler(UncaughtExceptionHandler)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.dispatchUncaughtException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setPriority0(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.stop0(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.suspend0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.resume0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.interrupt0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>hope.pope.Test94.compareTo(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>steve.jobs.Test95.KeyEvent(Component,int,long,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test96.removeAWTEventListener(AWTEventListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.name()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.ordinal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.Enum(String,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.clone()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.compareTo(E)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.getDeclaringClass()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.valueOf(T,String)</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.getenv(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.getenv()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.environment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.emptyEnvironment(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.environ()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ProcessEnvironment()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.validateVariable(String)</name>
      <ncss>3</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.validateValue(String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.ExternalData(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.getBytes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.Variable(String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOfQueryOnly(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOfQueryOnly(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOf(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOf(Variable[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.compareTo(Variable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.Value(String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOfQueryOnly(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOfQueryOnly(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOf(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOf(Value[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.compareTo(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.toString(Value)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.StringEnvironment(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.get(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.put(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.keySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.entrySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.values()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.toEnvironmentBlock(m.values[][])</name>
      <ncss>17</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.toEnvironmentBlock(String,String[])</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.StringEntry(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.setValue(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.StringEntrySet(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.setValue(Value)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.vvEntry(Object)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.StringValues(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.StringKeySet(Variable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayCompare(int[],int[][])</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayEquals(boolean[],boolean[][])</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayHash(int[])</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatListHeader(int,String[])</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatListLine(String,String[])</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._divide(int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._divide(long,long)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatPackageMatrix(int,int,int,int,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.AsciiFormatter(Javancss)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printPackageNcss()</name>
      <ncss>21</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatObjectResume(int,long,long,long,long)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printObjectNcss()</name>
      <ncss>21</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter._formatFunctionResume(int,long,long,long)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printFunctionNcss()</name>
      <ncss>19</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.AsciiFormatter.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printPackageNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printObjectNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printFunctionNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Formatter.printJavaNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.FunctionMetric.FunctionMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.FunctionMetric.clear()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.createSourceReader(File)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureSource(File)</name>
      <ncss>28</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureSource(Reader)</name>
      <ncss>48</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureFiles(List)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._measureRoot(Reader)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getImports()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFunctions()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printObjectNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printFunctionNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printPackageNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(List)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(File)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.parseImports()</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setSourceFile(File)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(Reader)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss._addJavaFiles(File,List)</name>
      <ncss>11</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.findFiles(List,boolean)</name>
      <ncss>36</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(String[],String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.WindowAdapter.windowClosing(WindowEvent)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.Javancss(String[])</name>
      <ncss>65</ncss>
      <ccn>28</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLOC()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getJvdc()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getJdcl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getSl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getMl()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFunctionMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getObjectMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getPackageMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLastErrorMessage()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getLastError()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setExit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setXML(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.useXML()</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getFormatter()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.getEncoding()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.setEncoding(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.newReader(InputStream)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Javancss.newReader(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.JavancssAntTask()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFormat(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setPackageMetrics(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassMetrics(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFunctionMetrics(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setGenerateReport(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setSrcdir(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setOutputfile(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClasspath(Path)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setAbortOnFail(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.execute()</name>
      <ncss>16</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.generateReport(List)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.thresholdsExceeded(List)</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.findFilesToAnalyse()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.copyFiles(String[])</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.createClasspath()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.getCommandLineArguments(List)</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.createSourceListFile(List)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.getJavaNcss(List)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.packageThresholdsExceeded(List)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.packageThresholdExceeded(PackageMetric)</name>
      <ncss>27</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.classThresholdsExceeded(List)</name>
      <ncss>8</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.classThresholdExceeded(ObjectMetric)</name>
      <ncss>38</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.functionThresholdsExceeded(List)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.functionThresholdExceeded(FunctionMetric)</name>
      <ncss>30</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassPerPkgMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassPerPkgMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFuncPerPkgMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFuncPerPkgMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerPkgMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerPkgMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassPerClassMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setClassPerClassMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFuncPerClassMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setFuncPerClassMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerClassMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerClassMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setJvdcPerClassMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setJvdcPerClassMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setCcnPerFuncMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setCcnPerFuncMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerFuncMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setNcssPerFuncMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setJvdcPerFuncMax(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssAntTask.setJvdcPerFuncMin(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.save()</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame._setMenuBar()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.getInit()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.JavancssFrame(Init)</name>
      <ncss>23</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.showJavancss(Javancss)</name>
      <ncss>61</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.run()</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.setVisible(boolean)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.setSelectedTab(String)</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavancssFrame.actionPerformed(ActionEvent)</name>
      <ncss>23</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Main.main(String[])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.Metric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.clear()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.compareTo(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.Metric.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.ObjectMetric.ObjectMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.ObjectMetric.clear()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.PackageMetric()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.clear()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.PackageMetric.add(PackageMetric)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._divide(int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._divide(long,long)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatPackageMatrix(int,int,int,int,int,int,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.XmlFormatter(Javancss)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printPackageNcss()</name>
      <ncss>25</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatObjectResume(int,long,long,long,long,long,long,long)</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printObjectNcss()</name>
      <ncss>31</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter._formatFunctionResume(int,long,long,long,long,long,long)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printFunctionNcss()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printJavaNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printStart()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.XmlFormatter.printEnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.setTestDir(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestDir()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.getTestFile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.AbstractTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.AbstractTest(Test)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.main()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.AbstractTest.main(File)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.measureTestFile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcss(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcss(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int,int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkNcssAndLoc(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testJavadocs()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testJavadocLines()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(int,String,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(javadocLines[],String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJavadocLines(Javancss,String,int)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkParse(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.JavancssTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.JavancssTest(Test)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._doIt()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testNcss()</name>
      <ncss>143</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testNcssAndMore()</name>
      <ncss>73</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest._checkJvdcs(int,int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testCCN()</name>
      <ncss>21</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.assertCCN(List,int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.measureWithArgs(String[])</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testEncoding()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testVersion()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.JavancssTest.testRecursive()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.testParsing()</name>
      <ncss>16</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.testXML2Text()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.XmlFormatterTest()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.XmlFormatterTest(Test)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.getXslFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest._doIt()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.test.XmlFormatterTest.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.parse()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.parseImportUnit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getNcss()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getLOC()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getJvdc()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getFunction()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getObject()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getPackage()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getImports()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getPackageObjects()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.JavaParserInterface.getLastFunction()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.setDebugStream(java.io.PrintStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjStopStringLiteralDfa_0(int,long,long,long)</name>
      <ncss>96</ncss>
      <ccn>78</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjStartNfa_0(int,long,long,long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjStopAtPos(int,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjStartNfaWithStates_0(int,int,int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa0_0()</name>
      <ncss>101</ncss>
      <ccn>85</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa1_0(long,long)</name>
      <ncss>117</ncss>
      <ccn>87</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa2_0(long,long,long,long)</name>
      <ncss>68</ncss>
      <ccn>53</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa3_0(long,long,long,long)</name>
      <ncss>74</ncss>
      <ccn>61</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa4_0(long,long,long,long)</name>
      <ncss>66</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa5_0(long,long,long,long)</name>
      <ncss>60</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa6_0(long,long)</name>
      <ncss>46</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa7_0(long,long)</name>
      <ncss>30</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa8_0(long,long)</name>
      <ncss>27</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa9_0(long,long)</name>
      <ncss>21</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa10_0(long,long)</name>
      <ncss>13</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa11_0(long,long)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCheckNAdd(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjAddStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCheckNAddTwoStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCheckNAddStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCheckNAddStates(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveNfa_0(int,int)</name>
      <ncss>496</ncss>
      <ccn>230</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa0_2()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa1_2(long)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa0_1()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjMoveStringLiteralDfa1_1(long)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCanMove_0(int,int,int,long,long)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCanMove_1(int,int,int,long,long)</name>
      <ncss>80</ncss>
      <ccn>77</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjCanMove_2(int,int,int,long,long)</name>
      <ncss>80</ncss>
      <ccn>77</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.JavaParser15TokenManager(JavaCharStream)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.JavaParser15TokenManager(JavaCharStream,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.ReInit(JavaCharStream)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.ReInitRounds()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.ReInit(JavaCharStream,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.SwitchTo(int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.jjFillToken()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.getNextToken()</name>
      <ncss>94</ncss>
      <ccn>35</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.SkipLexicalActions(Token)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.MoreLexicalActions()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.JavaParser15TokenManager.TokenLexicalActions(Token)</name>
      <ncss>22</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.Token.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.Token.newToken(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.setDebugStream(java.io.PrintStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjStopStringLiteralDfa_0(int,long,long,long)</name>
      <ncss>96</ncss>
      <ccn>78</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjStartNfa_0(int,long,long,long)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjStopAtPos(int,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjStartNfaWithStates_0(int,int,int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa0_0()</name>
      <ncss>101</ncss>
      <ccn>85</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa1_0(long,long)</name>
      <ncss>117</ncss>
      <ccn>87</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa2_0(long,long,long,long)</name>
      <ncss>68</ncss>
      <ccn>53</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa3_0(long,long,long,long)</name>
      <ncss>74</ncss>
      <ccn>61</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa4_0(long,long,long,long)</name>
      <ncss>66</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa5_0(long,long,long,long)</name>
      <ncss>60</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa6_0(long,long)</name>
      <ncss>46</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa7_0(long,long)</name>
      <ncss>30</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa8_0(long,long)</name>
      <ncss>27</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa9_0(long,long)</name>
      <ncss>21</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa10_0(long,long)</name>
      <ncss>13</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa11_0(long,long)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCheckNAdd(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjAddStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCheckNAddTwoStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCheckNAddStates(int,int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCheckNAddStates(int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveNfa_0(int,int)</name>
      <ncss>496</ncss>
      <ccn>230</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa0_2()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa1_2(long)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa0_1()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjMoveStringLiteralDfa1_1(long)</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCanMove_0(int,int,int,long,long)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCanMove_1(int,int,int,long,long)</name>
      <ncss>80</ncss>
      <ccn>77</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjCanMove_2(int,int,int,long,long)</name>
      <ncss>80</ncss>
      <ccn>77</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.JavaParser15DebugTokenManager(JavaCharStream)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.JavaParser15DebugTokenManager(JavaCharStream,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.ReInit(JavaCharStream)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.ReInitRounds()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.ReInit(JavaCharStream,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.SwitchTo(int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.jjFillToken()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.getNextToken()</name>
      <ncss>94</ncss>
      <ccn>35</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.SkipLexicalActions(Token)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.MoreLexicalActions()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.JavaParser15DebugTokenManager.TokenLexicalActions(Token)</name>
      <ncss>22</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.Token.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.parser.java15.debug.Token.newToken(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._gnudoit(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setNewEmacsWidth()</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._setProjectSuffix()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.Jacob(Controller,String[])</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.loadProject()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.save()</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.showClasses()</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.openOldProject(String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.createMakefile()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.setClassDependencies()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editFile(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.startJavaLanguageSpecHelp()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.insertPackage()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.removePackage()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob._selectClasses(String,boolean)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.readFile(URL)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swapInt(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.swapInt()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.objectsToVector(Object[])</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,Vector)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.filter(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test10.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Provider.Service(Provider)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedEntrySet.CheckedEntrySet(V,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.checkedSortedMap(V,K,V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.CheckedSortedMap(V,K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.comparator()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.firstKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.lastKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.subMap(K,K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.headMap(K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CheckedSortedMap.tailMap(K)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.iterator()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptySet.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptyList()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.get(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyList.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.emptyMap()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.get(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.keySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.values()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.entrySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.EmptyMap.readResolve()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singleton(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.SingletonSet(E)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.next()</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.iterator()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonSet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singletonList(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.SingletonList(E)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonList.get(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.singletonMap(K,V)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.SingletonMap(K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.get(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.keySet()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.entrySet()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.values()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.ImmutableEntry(K,V)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.setValue(V)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.hashCode()</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.SingletonMap.ImmutableEntry.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.nCopies(int,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.CopiesList(int,E)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.CopiesList.get(int)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.reverseOrder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator.compare(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.reverseOrder(T)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator2.ReverseComparator2(T)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.ReverseComparator2.compare(T,T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.Enumeration.hasMoreElements()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.Enumeration.nextElement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test101.enumeration(T)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.list(T)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.eq(Object,Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.frequency(Collection,Object)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.disjoint(Collection,Collection)</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test101.addAll(T,T)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AClass.AClass(int,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AClass.getN()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AClass.getS()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AnEnum.aMethod()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AnEnum.aMethod()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test105.Test105(String[],String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Test11.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid1(Bar.Info)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid2(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test111.isValid(T.Info)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.Test113(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug0(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug1(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test113.bug2(Object)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test114.Javancss(String[],String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser._formatPackage(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getNcss()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getLOC()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getJvdc()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getFunction()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getObject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getImports()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getPackageObjects()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getLastFunction()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isPublic(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isProtected(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isPrivate(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isStatic(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isAbstract(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isFinal(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isNative(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isStrictfp(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isSynchronized(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isTransient(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.isVolatile(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ModifierSet.removeModifier(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CompilationUnit()</name>
      <ncss>124</ncss>
      <ccn>54</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImportUnit()</name>
      <ncss>60</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PackageDeclaration()</name>
      <ncss>28</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImportDeclaration()</name>
      <ncss>33</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeDeclaration()</name>
      <ncss>53</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassDeclaration()</name>
      <ncss>77</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnmodifiedClassDeclaration()</name>
      <ncss>57</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassBody()</name>
      <ncss>40</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NestedClassDeclaration()</name>
      <ncss>64</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassBodyDeclaration()</name>
      <ncss>80</ncss>
      <ccn>39</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarationLookahead()</name>
      <ncss>67</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InterfaceDeclaration()</name>
      <ncss>64</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NestedInterfaceDeclaration()</name>
      <ncss>63</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnmodifiedInterfaceDeclaration()</name>
      <ncss>80</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InterfaceMemberDeclaration()</name>
      <ncss>47</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldDeclaration()</name>
      <ncss>82</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableDeclarator()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableDeclaratorId()</name>
      <ncss>24</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.VariableInitializer()</name>
      <ncss>40</ncss>
      <ccn>33</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArrayInitializer()</name>
      <ncss>51</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclaration()</name>
      <ncss>162</ncss>
      <ccn>53</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarator()</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameters()</name>
      <ncss>34</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameter()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConstructorDeclaration()</name>
      <ncss>148</ncss>
      <ccn>68</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExplicitConstructorInvocation()</name>
      <ncss>46</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Initializer()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Type()</name>
      <ncss>46</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldTypeLookahead()</name>
      <ncss>29</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimitiveType()</name>
      <ncss>30</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ResultType()</name>
      <ncss>22</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Name()</name>
      <ncss>22</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldTypeNameLookahead()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NameList()</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Expression()</name>
      <ncss>40</ncss>
      <ccn>33</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Assignment()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssignmentOperator()</name>
      <ncss>42</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalExpression()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalOrExpression()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ConditionalAndExpression()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InclusiveOrExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExclusiveOrExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AndExpression()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EqualityExpression()</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.InstanceOfExpression()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.RelationalExpression()</name>
      <ncss>31</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ShiftExpression()</name>
      <ncss>27</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AdditiveExpression()</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MultiplicativeExpression()</name>
      <ncss>27</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnaryExpression()</name>
      <ncss>54</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PreIncrementExpression()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PreDecrementExpression()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.UnaryExpressionNotPlusMinus()</name>
      <ncss>55</ncss>
      <ccn>35</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CastLookahead()</name>
      <ncss>60</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PostfixLookahead()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PostfixExpression()</name>
      <ncss>19</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.CastExpression()</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimaryExpression()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimaryPrefix()</name>
      <ncss>53</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.PrimarySuffix()</name>
      <ncss>29</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Literal()</name>
      <ncss>25</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BooleanLiteral()</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NullLiteral()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Arguments()</name>
      <ncss>37</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArgumentList()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AllocationExpression()</name>
      <ncss>52</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ArrayDimsAndInits()</name>
      <ncss>36</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Statement()</name>
      <ncss>86</ncss>
      <ccn>43</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.LabeledStatement()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssertStatementLookahead()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AssertStatement()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Block()</name>
      <ncss>52</ncss>
      <ccn>44</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BlockStatement()</name>
      <ncss>58</ncss>
      <ccn>44</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.LocalVariableDeclaration()</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EmptyStatement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.StatementExpression()</name>
      <ncss>81</ncss>
      <ccn>59</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SwitchStatement()</name>
      <ncss>69</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SwitchLabel()</name>
      <ncss>21</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.IfStatement()</name>
      <ncss>17</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.WhileStatement()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.DoStatement()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForStatement()</name>
      <ncss>144</ncss>
      <ccn>114</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForInit()</name>
      <ncss>36</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.StatementExpressionList()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ForUpdate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.BreakStatement()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ContinueStatement()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReturnStatement()</name>
      <ncss>41</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ThrowStatement()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SynchronizedStatement()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TryStatement()</name>
      <ncss>28</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Identifier()</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Annotation()</name>
      <ncss>15</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.NormalAnnotation()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MarkerAnnotation()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.SingleMemberAnnotation()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValuePairs()</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValuePair()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValue()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberValueArrayInitializer()</name>
      <ncss>52</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeDeclaration(int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeBody()</name>
      <ncss>39</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.AnnotationTypeMemberDeclaration()</name>
      <ncss>81</ncss>
      <ccn>48</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.DefaultValue()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.Modifiers()</name>
      <ncss>85</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceDeclaration(int)</name>
      <ncss>34</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumDeclaration(int)</name>
      <ncss>37</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeParameters()</name>
      <ncss>34</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ExtendsList(boolean)</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ImplementsList(boolean)</name>
      <ncss>16</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceBody(boolean)</name>
      <ncss>42</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumBody()</name>
      <ncss>79</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeParameter()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceType()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ClassOrInterfaceBodyDeclaration(boolean)</name>
      <ncss>92</ncss>
      <ccn>66</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.EnumConstant()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeBound()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeArguments()</name>
      <ncss>19</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.TypeArgument()</name>
      <ncss>31</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReferenceType()</name>
      <ncss>33</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.WildcardBounds()</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FieldDeclaration15(int)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclaration15(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MethodDeclarator15()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameters15()</name>
      <ncss>41</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.FormalParameter15()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.MemberSelector()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_1(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_2(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_3(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_4(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_5(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_6(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_7(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_8(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_9(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_10(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_11(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_12(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_13(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_14(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_15(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_16(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_17(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_18(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_19(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_20(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_21(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_22(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_23(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_24(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_25(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_26(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_27(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_28(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_29(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_30(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_31(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_32(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_33(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_34(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_35(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_36(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_37(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_38(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_39(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_40(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_41(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_42(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_43(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_44(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_45(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_46(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_47(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_48(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_49(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_50(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_51(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_52(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_53(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_54(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_55(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_56(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_57(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_58(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_59(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_60(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_61(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_62(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_63(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_64(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_2_65(int)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_551()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_562()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_472()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_444()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_113()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_561()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_550()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_3()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_428()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_78()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_112()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_530()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_445()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_411()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_2()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_486()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_382()</name>
      <ncss>34</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_111()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_110()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_462()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_560()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_436()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_559()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_558()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_549()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_404()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_109()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_403()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_402()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_381()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_108()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_380()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_343()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_316()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_44()</name>
      <ncss>41</ncss>
      <ccn>37</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_295()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_294()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_293()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_272()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_292()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_230()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_145()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_529()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_379()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_107()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_106()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_437()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_439()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_358()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_357()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_356()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_355()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_354()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_438()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_353()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_352()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_40()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_351()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_350()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_349()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_435()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_348()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_43()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_347()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_346()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_77()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_345()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_1()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_344()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_317()</name>
      <ncss>83</ncss>
      <ccn>66</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_42()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_461()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_460()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_420()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_397()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_62()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_459()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_367()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_39()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_325()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_41()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_458()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_457()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_368()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_456()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_61()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_455()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_104()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_454()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_328()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_417()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_327()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_218()</name>
      <ncss>27</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_453()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_434()</name>
      <ncss>48</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_326()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_60()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_399()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_433()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_103()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_38()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_15()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_65()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_418()</name>
      <ncss>47</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_396()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_497()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_310()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_281()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_452()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_136()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_64()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_395()</name>
      <ncss>22</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_261()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_135()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_297()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_340()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_339()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_419()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_181()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_432()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_338()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_313()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_134()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_324()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_174()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_59()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_451()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_244()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_290()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_366()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_268()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_289()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_284()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_365()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_323()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_180()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_185()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_522()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_450()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_296()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_431()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_92()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_184()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_173()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_133()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_226()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_304()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_225()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_303()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_137()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_63()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_302()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_301()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_300()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_416()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_179()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_131()</name>
      <ncss>36</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_521()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_299()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_276()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_172()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_496()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_314()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_215()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_214()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_520()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_178()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_57()</name>
      <ncss>33</ncss>
      <ccn>29</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_132()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_213()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_171()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_130()</name>
      <ncss>23</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_56()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_37()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_32()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_55()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_364()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_36()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_258()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_322()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_177()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_519()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_363()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_101()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_35()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_170()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_362()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_361()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_34()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_250()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_257()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_360()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_518()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_176()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_517()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_516()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_495()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_321()</name>
      <ncss>32</ncss>
      <ccn>27</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_169()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_256()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_481()</name>
      <ncss>36</ncss>
      <ccn>31</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_249()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_53()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_14()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_248()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_285()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_13()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_247()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_58()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_298()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_90()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_175()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_31()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_255()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_12()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_544()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_89()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_168()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_33()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_52()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_11()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_54()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_543()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_374()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_273()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_288()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_542()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_246()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_491()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_186()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_245()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_265()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_275()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_541()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_373()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_333()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_287()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_242()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_540()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_254()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_539()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_501()</name>
      <ncss>33</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_94()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_243()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_30()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_267()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_286()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_241()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_253()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_335()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_183()</name>
      <ncss>29</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_29()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_252()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_334()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_309()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_490()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_359()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_251()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_308()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_320()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_97()</name>
      <ncss>22</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_266()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_274()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_26()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_240()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_492()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_28()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_27()</name>
      <ncss>55</ncss>
      <ccn>49</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_443()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_201()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_319()</name>
      <ncss>38</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_424()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_98()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_25()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_24()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_23()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_224()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_306()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_280()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_279()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_567()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_305()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_278()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_557()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_259()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_277()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_566()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_548()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_556()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_372()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_545()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_528()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_511()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_565()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_555()</name>
      <ncss>22</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_547()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_371()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_527()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_515()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_370()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_546()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_332()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_524()</name>
      <ncss>22</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_526()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_510()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_331()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_369()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_330()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_200()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_329()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_307()</name>
      <ncss>23</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_182()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_525()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_485()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_514()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_499()</name>
      <ncss>27</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_513()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_483()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_199()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_523()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_512()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_509()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_494()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_484()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_478()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_91()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_471()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_498()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_239()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_198()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_406()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_482()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_442()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_197()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_409()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_408()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_470()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_407()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_405()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_401()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_393()</name>
      <ncss>39</ncss>
      <ccn>32</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_238()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_196()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_441()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_423()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_376()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_422()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_337()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_195()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_237()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_129()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_400()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_152()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_312()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_194()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_128()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_375()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_236()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_193()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_127()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_336()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_151()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_159()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_126()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_192()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_311()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_125()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_235()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_191()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_282()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_124()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_158()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_150()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_123()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_190()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_263()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_234()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_122()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_162()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_96()</name>
      <ncss>63</ncss>
      <ccn>50</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_189()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_149()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_157()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_121()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_22()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_262()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_233()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_120()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_148()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_220()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_119()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_474()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_156()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_161()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_105()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_219()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_118()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_446()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_232()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_51()</name>
      <ncss>63</ncss>
      <ccn>50</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_155()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_80()</name>
      <ncss>10</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_147()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_86()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_160()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_447()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_429()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_166()</name>
      <ncss>48</ncss>
      <ccn>38</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_231()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_165()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_167()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_21()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_146()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_88()</name>
      <ncss>35</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_83()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_154()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_10()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_378()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_85()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_9()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_480()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_479()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_469()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_8()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_153()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_84()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_468()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_164()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_7()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_82()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_20()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_467()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_6()</name>
      <ncss>21</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_50()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_476()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_163()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_466()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_87()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_465()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_464()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_5()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_217()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_463()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_440()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_102()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_216()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_49()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_209()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_208()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_207()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_489()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_206()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_504()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_205()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_204()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_203()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_283()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_99()</name>
      <ncss>43</ncss>
      <ccn>34</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_202()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_377()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_508()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_264()</name>
      <ncss>30</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_503()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_342()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_116()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_223()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_500()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_222()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_507()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_117()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_221()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_506()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_211()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_212()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_260()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_505()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_502()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_493()</name>
      <ncss>38</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_477()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_341()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_210()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_100()</name>
      <ncss>20</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_315()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_291()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_421()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_115()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_488()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_144()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_270()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_398()</name>
      <ncss>18</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_81()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_18()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_271()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_19()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_48()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_269()</name>
      <ncss>25</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_47()</name>
      <ncss>25</ncss>
      <ccn>25</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_475()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_449()</name>
      <ncss>21</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_487()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_229()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_448()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_430()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_228()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_138()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_227()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_188()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_95()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_187()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_538()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_537()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_318()</name>
      <ncss>33</ncss>
      <ccn>28</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_392()</name>
      <ncss>24</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_391()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_390()</name>
      <ncss>14</ncss>
      <ccn>16</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_536()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_415()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_535()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_389()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_571()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_554()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_534()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_388()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_93()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_17()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_387()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_16()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_564()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_114()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_414()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_413()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_46()</name>
      <ncss>17</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_553()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_570()</name>
      <ncss>14</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_143()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_531()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_569()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_412()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_45()</name>
      <ncss>18</ncss>
      <ccn>21</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_568()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_563()</name>
      <ncss>13</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_552()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_532()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_142()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_533()</name>
      <ncss>29</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_386()</name>
      <ncss>29</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_427()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_141()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_385()</name>
      <ncss>30</ncss>
      <ccn>36</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_426()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_384()</name>
      <ncss>22</ncss>
      <ccn>26</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_425()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_410()</name>
      <ncss>18</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_140()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_394()</name>
      <ncss>50</ncss>
      <ccn>42</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_383()</name>
      <ncss>29</ncss>
      <ccn>30</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_473()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_139()</name>
      <ncss>6</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3_4()</name>
      <ncss>10</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_3R_79()</name>
      <ncss>28</ncss>
      <ccn>22</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(java.io.InputStream)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(java.io.InputStream)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(java.io.Reader)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(java.io.Reader)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.JavaParser(JavaParserTokenManager)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.ReInit(JavaParserTokenManager)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_consume_token(int)</name>
      <ncss>21</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_scan_token(int)</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getNextToken()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.getToken(int)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_ntk()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_add_error_token(int,int)</name>
      <ncss>25</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.generateParseException()</name>
      <ncss>31</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.enable_tracing()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.disable_tracing()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_rescan_token()</name>
      <ncss>206</ncss>
      <ccn>69</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.JavaParser.jj_save(int,int)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test116.methodica()</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.TempBooleanAttributes(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.isSingleValued()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getTrueString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.getFalseString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>net.tds.openwave.ldap.attributes.TempBooleanAttributes.equals(BooleanAttribute)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestEnum.TestEnum(Type)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestEnum.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.readFile(URL)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test12.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test120.getFiles()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test120.getFile()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test123.getFile()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.Test123.finalize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.Example2.Example2()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test125.save(ManagedFile)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.world()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.getLocation(LocationKey)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.insertLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.updateLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mypackage.service.Test126.deleteLocation(Location)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ClassWithGenericizedConstructor.ClassWithGenericizedConstructor(T)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test128.update(Component,UpdateStrategy)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>PerfTest.class.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>PerfTest.startTests()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test13.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Bug.Bug()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test123.SimpleBean.hasAnnotation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test123.SimpleBean.doesNotHaveAnnotation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test123.testAnnotationLimiter()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test132.Test132()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test133.convertIntoKnownBaseType(Object,Class)</name>
      <ncss>11</ncss>
      <ccn>12</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test134.main(String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>MyClass.MyInterface.doStuff()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestJavadocConstructor.TestJavadocConstructor(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>TestJavadocConstructor.testMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test14.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test14.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>TestJavadocAnnotation.testMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>TestJavadocNew.TestJavadocAnnotation.testMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>TestJavadocNew.testMethod(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean.getS()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean.inherit0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean.inherit1()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.edorasframework.core.util.ClassDescriberTest.SuperBean.inherit2()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test.flatten(Source,Store)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Class1.foo()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Class2.bar()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Class2.foo()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test147.Object.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test147.Object.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test147.test2.test()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test15.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test16.Predicate.test(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test16.filter()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test17.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test17.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test18.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.foo(String[],Controller)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.Jacob(Controller,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.foo2(int,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test19.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.Something()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>AudioItem.next()</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.init()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.start()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.stop()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.mouseUp(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>AudioItem.paint(Graphics)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoop.ImageLoop(URL,String,ImageLoopItem)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.init()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.run()</name>
      <ncss>9</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.paint(Graphics)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.update(Graphics)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.start()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.stop()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ImageLoopItem.mouseDown(int,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Daten._lesenDateien()</name>
      <ncss>28</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.init()</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putDatei(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.doPlan()</name>
      <ncss>99</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putAnzGamer(int)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putNextGamer(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putVerein(int,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.putStadionname(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Daten.getVereine()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>InputWindow.InputWindow(Interface,String,String)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>InputWindow.action(Event,Object)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SelectFromListWindow.SelectFromListWindow(Interface,String,String[])</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SelectFromListWindow.action(Event,Object)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ShowMsgBox.ShowMsgBox(Frame,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ShowMsgBox.action(Event,Object)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.Interface()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.putInput(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.putInput(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.input(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Interface.selectFromList(String,String[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SimSoccer._init()</name>
      <ncss>22</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>SimSoccer.main(String[])</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._getNeurons()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setInputNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setUnivers(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setStartPosition(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.nextStep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Net._getNeurons()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setInputNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net._setUnivers(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setNeurons(Vector)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.setStartPosition(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.nextStep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Net.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Neuron.getWeight()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.setWeight(FloatPoint)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.distanceTo(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.moveTo(InputNeuron,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.move()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Neuron.addNeighbor(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.addMetaNeighbor(Neuron)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.getNeighbors()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Neuron.getMetaNeighbors()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init._setProjectPath()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.start()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.setProjectFullName(String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getProjectFullName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getProjectPath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getTextBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Init.getListBackground()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob2.createMakefile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob2.test()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._gnudoit(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(Package,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClassFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getRcsVersion()</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getRcs()</name>
      <ncss>25</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakefileAll()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getClean()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakefileZip()</name>
      <ncss>42</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._getMakePublic()</name>
      <ncss>56</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.Jacob3(Controller,String[])</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.loadProject()</name>
      <ncss>14</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.save()</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.showClasses()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.openOldProject(String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.createMakefile()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editFile(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.startJavaLanguageSpecHelp()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.insertPackage()</name>
      <ncss>24</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.removePackage()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3._selectClasses(String,boolean)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.selectMainClass()</name>
      <ncss>24</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.removeClasses()</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.addClasses()</name>
      <ncss>39</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>jacob.Jacob3.exit()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test30.filter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(SocketImpl)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int,InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,InetAddress,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(String,int,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.Socket(InetAddress,int,InetAddress,int,boolean)</name>
      <ncss>18</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getInetAddress()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getLocalAddress()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getPort()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getLocalPort()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getInputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getOutputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setTcpNoDelay(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getTcpNoDelay()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSoLinger(boolean,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getSoLinger()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSoTimeout(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.getSoTimeout()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.close()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.net.Socket.setSocketImplFactory(SocketImplFactory)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.createStatement()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.prepareStatement(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.prepareCall(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.nativeSQL(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setAutoCommit(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getAutoCommit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.commit()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.rollback()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.isClosed()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getMetaData()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setReadOnly(boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.isReadOnly()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setCatalog(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getCatalog()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.setTransactionIsolation(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getTransactionIsolation()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.getWarnings()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.sql.Connection.clearWarnings()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.DecimalFormat(String,DecimalFormatSymbols)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.format(double,StringBuffer,FieldPosition)</name>
      <ncss>23</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.format(long,StringBuffer,FieldPosition)</name>
      <ncss>23</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.parse(String,ParsePosition)</name>
      <ncss>118</ncss>
      <ccn>59</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getDecimalFormatSymbols()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setDecimalFormatSymbols(DecimalFormatSymbols)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getPositivePrefix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setPositivePrefix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getNegativePrefix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setNegativePrefix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getPositiveSuffix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setPositiveSuffix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getNegativeSuffix()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setNegativeSuffix(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getMultiplier()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setMultiplier(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.getGroupingSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setGroupingSize(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isDecimalSeparatorAlwaysShown()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.clone()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.equals(Object)</name>
      <ncss>5</ncss>
      <ccn>10</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toLocalizedPattern()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.toPattern(boolean)</name>
      <ncss>32</ncss>
      <ccn>19</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyPattern(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyLocalizedPattern(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.applyPattern(String,boolean)</name>
      <ncss>125</ncss>
      <ccn>34</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.appendNativeDigits(StringBuffer,FieldPosition)</name>
      <ncss>29</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isSpecialChar(char)</name>
      <ncss>2</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.isLongMIN_VALUE(DigitList)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.DecimalFormat.readObject(ObjectInputStream)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.forward()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.backward()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.text.TextBoundaryData.map()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.text.Test39.Test39()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>javancss.text.Test39.run()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Jacob.removePackage()</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test40.Test40(int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.getI()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.setI(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.Test41(int)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.darwinize()</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test41.dummy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.Test46()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.filter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test46.main(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test47.filter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test48.Test48()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test48.foo()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>MainJMenuBar.MainJMenuBar(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.Something1()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something1.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.Something2()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.sleep()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Something2.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenuBar(Vector,MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.updateMenu()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getOldFileItems(Init)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getMenuBodyElements(Vector,Init)</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu._getHelpBroker(MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.MainJMenu(Vector,MainJFrame)</name>
      <ncss>58</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.removeOldFileItems()</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.swing.MainJMenuBar.MainJMenu.insertOldFiles(MainJFrame)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test51.Test51(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.methodTest52()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Test52()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Test52(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test52.Inner.Inner()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test53.Test53(String,Object,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test53.Test53(String,Object,String,String[])</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test54.Test54(Fd2Record)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test55.Test55(Hashtable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test55.Test56(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.Math.Math()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.sin(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.cos(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.tan(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.asin(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.acos(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.atan(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.toRadians(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.toDegrees(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.exp(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.log(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.sqrt(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.IEEEremainder(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.ceil(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.floor(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.rint(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.atan2(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.pow(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.round(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.round(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.initRNG()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.Math.random()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(float)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.abs(double)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.max(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.Math.min(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.StrictMath()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.sin(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.cos(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.tan(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.asin(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.acos(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.atan(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.toRadians(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.toDegrees(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.exp(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.log(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.sqrt(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.IEEEremainder(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.ceil(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.floor(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.rint(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.atan2(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.pow(double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.round(float)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.round(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.initRNG()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.random()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(float)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.abs(double)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.max(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(int,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(long,long)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(float,float)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>java.lang.StrictMath.min(double,double)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.equals(Object)</name>
      <ncss>6</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.Event(String,String,String,String,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getSourceHost()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getSourceComponent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getCreationDate()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getDescription()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Event.getLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.Utilities(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.printStackTrace()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStack()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStackSafe()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.addClassToHashtable(Hashtable,String)</name>
      <ncss>13</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.removeClassFromHashtable(Hashtable,String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.levelTest(int)</name>
      <ncss>15</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.categoryTest(String)</name>
      <ncss>22</ncss>
      <ccn>16</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.sourceClassValid()</name>
      <ncss>47</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.atoi(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.itoa(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.max(long,long)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.max(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.min(int,int)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.print(char)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.print(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.println(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.println(Exception)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.panicIf(boolean)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.panicIf(boolean,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.setDebug(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.debug(Object)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.debug(int)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showLiveSignal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showLiveSignal(char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(float)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rnd(double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isAlpha(char)</name>
      <ncss>7</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.timeToSeconds(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getOccurances(String,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.multiplyChar(char,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.multiplyChar(String,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWith(int,int,char)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWithSpace(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.paddWithZero(int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.rtrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.ltrim(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.unifySpaces(String)</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.unicode2ascii(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.compare(String,String)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector,String)</name>
      <ncss>11</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isEmpty(String)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(int,String,char)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(String,char)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.stringToLines(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.equalsCaseless(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.firstCharToUpperCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.firstCharToLowerCase(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.replace(String,String,String)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isSpaceLine(String)</name>
      <ncss>8</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getHeuteSortable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getTodaySortable()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concatPath(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.openFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.openOutputFile(String)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.readFile(String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.readFile(URL)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.writeFile(String,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.equalsFile(String,String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util._getFileName(Frame,String,String,int)</name>
      <ncss>20</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util._getFileName(Frame,String,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getFileName(Frame,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getFileName(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.existsFile(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.existsDir(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.exists(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.fillRect(Graphics,int,int,int,int,Color)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getScreenSize(Component)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.width(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getWidth(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.height(Component)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.getHeight(Component)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.maximizeWindow(Window)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.centerComponent(Component)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.isOKOrCancel(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showMessage(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showAboutDialog(Init)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputCancel(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputCancel(String,String)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.inputListCancel(String,Vector)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showDocument(Applet,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.showDocument(AppletContext,String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.system(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swap(Object,Object)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swap()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swapInt(int,int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.swapInt()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.objectsToVector(Object[])</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,Vector)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.filter(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.map(Vector,Transformer)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.Predicate.test(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.contains(Vector,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.contains(Vector,Predicate)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.sort(Vector)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.quickSort(Object[],int,int,Comparator)</name>
      <ncss>35</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.quickSort(Vector,int,int,Comparator)</name>
      <ncss>36</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.sort(Vector,Comparator)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.concat(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ccl.util.Util.subtract(Vector,Vector)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.Collect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkDebugCollectRef(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.setDebug(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.register(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkStatisticID(Statistic)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.unregister(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isRegistered(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.currentValue(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.report(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reportAll()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reset(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.set(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidCategory(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidLevel(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.Collect()</name>
      <ncss>13</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkDebugCollectRef(Debug)</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.setDebug(Debug)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.register(Statistic)</name>
      <ncss>17</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.checkStatisticID(Statistic)</name>
      <ncss>23</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.unregister(Statistic)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isRegistered(Statistic)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.currentValue(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.report(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reportAll()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.increment(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.decrement(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.reset(Statistic)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.set(Statistic,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidCategory(String)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.isValidLevel(int)</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_checkDebugCollectRef(Debug)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_checkStatisticID(Statistic)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.jassInternal_isRegistered(Statistic)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Collect.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.clone()</name>
      <ncss>15</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.Debug()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.Debug(DebugConstants,Collect)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.setOutputInterface(DebugOutput)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getAssert()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getCollect()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getOutputInterface()</name>
      <ncss>23</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getDebugConstants()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOn()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOn(Thread)</name>
      <ncss>24</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOff()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.isOff(Thread)</name>
      <ncss>15</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.turnOn()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.turnOff()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addCategory(String,int)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeCategory(String)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.containsCategory(String)</name>
      <ncss>18</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listCategories()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addClass(Class)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addClass(String)</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeClass(Class)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeClass(String)</name>
      <ncss>16</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getContext(Thread)</name>
      <ncss>23</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addContext(Context)</name>
      <ncss>24</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeContext(Context)</name>
      <ncss>24</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listClasses()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.setLevel(int)</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.getLevel()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.listThreads()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.init(DebugConstants,Collect)</name>
      <ncss>34</ncss>
      <ccn>15</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.addCategoryToHashtable(Hashtable,String,int)</name>
      <ncss>35</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.removeCategoryFromHashtable(Hashtable,String)</name>
      <ncss>21</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getOutputInterface()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getAssert()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getCollect()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.jassInternal_getDebugConstants()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Debug.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.Utilities(Debug)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.printStackTrace()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.dumpStackSafe()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.addClassToHashtable(Hashtable,String)</name>
      <ncss>23</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.removeClassFromHashtable(Hashtable,String)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.levelTest(int)</name>
      <ncss>51</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.categoryTest(String)</name>
      <ncss>65</ncss>
      <ccn>18</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.sourceClassValid()</name>
      <ncss>92</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.Utilities.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(int,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.printMsg(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.getWriter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.clone()</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.WindowOutput(Debug)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.ActionListener.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.ActionListener.actionPerformed(ActionEvent)</name>
      <ncss>19</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.WindowAdapter.windowClosing(WindowEvent)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.WindowOutput.createUI()</name>
      <ncss>45</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.TestSuiteThread(String)</name>
      <ncss>15</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.run()</name>
      <ncss>188</ncss>
      <ccn>52</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.finalize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.equals(java.lang.Object)</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.toString()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.interrupt()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.isInterrupted()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.destroy()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.getContextClassLoader()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>idebughc.testsuite.TestSuiteThread.setContextClassLoader(java.lang.ClassLoader)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test66.Test66()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test67.assert(boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test67.main(String[])</name>
      <ncss>27</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test68.main(String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test7.foo()</name>
      <ncss>29</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test70.InnerClass.test()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.Runnable.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.Runnable.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.TestRun.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.main(String[])</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test71.TestRun.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.testPWS()</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test72.testPWU10()</name>
      <ncss>17</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test72.intersect(BoundingBox)</name>
      <ncss>2</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.verboseIntersect(BoundingBox)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test72.testQuestionMark()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyInputStream.AnyInputStream(EncapsInputStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyOutputStream.AnyOutputStream(ORB)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyOutputStream.create_input_stream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.convertToNative(ORB,Any)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyImpl(ORB)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.AnyImpl(ORB,Any)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.type()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.realType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.realType(TypeCode)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.type(TypeCode)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.equal(Any)</name>
      <ncss>67</ncss>
      <ccn>62</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.equalMember(TypeCode,InputStream,InputStream)</name>
      <ncss>95</ncss>
      <ccn>80</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.create_output_stream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.create_input_stream()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.read_value(org.omg.CORBA.portable.InputStream,TypeCode)</name>
      <ncss>21</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.write_value(OutputStream)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Streamable(Streamable)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Streamable()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_short(short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.getTCKindName(int)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.checkExtractBadOperation(int)</name>
      <ncss>8</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.checkExtractBadOperationList(tcName[])</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_short()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_long(int)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_long()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ushort(short)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ushort()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ulong(int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ulong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_float(float)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_float()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_double(double)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_double()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_longlong(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_longlong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_ulonglong(long)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_ulonglong()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_boolean(boolean)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_boolean()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_char(char)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_char()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_wchar(char)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_wchar()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_octet(byte)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_octet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_string(String)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_string()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_wstring(String)</name>
      <ncss>12</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_wstring()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_any(Any)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_any()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Object(org.omg.CORBA.Object)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Object(org.omg.CORBA.Object,TypeCode)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Object()</name>
      <ncss>11</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_TypeCode(TypeCode)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_TypeCode()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Principal(Principal)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Principal()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_Value()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Value(Serializable)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_Value(Serializable,org.omg.CORBA.TypeCode)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_fixed(java.math.BigDecimal)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.insert_fixed(java.math.BigDecimal,org.omg.CORBA.TypeCode)</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extract_fixed()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.createTypeCodeForClass(java.lang.Class,ORB)</name>
      <ncss>24</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.getPrimitiveTypeCodeForClass(Class,ORB)</name>
      <ncss>29</ncss>
      <ccn>20</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extractAny(TypeCode,ORB)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.extractAnyFromStream(TypeCode,InputStream,ORB)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>corba.abroc.Test75.isInitialized()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.PrivilegedAction.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.IIOPOutputStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.beginOptionalCustomData()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.setOrbStream(org.omg.CORBA_2_3.portable.OutputStream)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.getOrbStream()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.increaseRecursionDepth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.decreaseRecursionDepth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeObjectOverride(Object)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.simpleWriteObject(Object,byte)</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.getFieldsNoCopy()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.defaultWriteObjectDelegate()</name>
      <ncss>8</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.enableReplaceObjectDelegate(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.annotateClass(Class)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.close()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.drain()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.flush()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.replaceObject(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.reset()</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(byte[])</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(byte[],int,int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.write(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeBoolean(boolean)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeByte(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeBytes(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeChar(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeChars(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeDouble(double)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeFloat(float)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeInt(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeLong(long)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeShort(int)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeStreamHeader()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.internalWriteUTF(org.omg.CORBA.portable.OutputStream,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeUTF(String)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.checkSpecialClasses(Object)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.checkSubstitutableSpecialClasses(Object)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.outputObject(Object)</name>
      <ncss>27</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.invokeObjectWriter(ObjectStreamClass,Object)</name>
      <ncss>19</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeField(ObjectStreamField,Object)</name>
      <ncss>56</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.writeObjectField(ObjectStreamField,Object)</name>
      <ncss>33</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>swatch.watch.Test76.outputClassFields(Object,Class,ObjectStreamField[])</name>
      <ncss>46</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.PrivilegedAction.run()</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.JNDIStateFactoryImpl()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.getStateToBind(Object,Name,Context,Hashtable)</name>
      <ncss>18</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pac.kage.Test77.getORB(Context)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.Runnable.run()</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.java.security.PrivilegedAction.run()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.addToQueue(ImageInputStream)</name>
      <ncss>24</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>ho.ha.hi.Test78.removeFromQueue(ImageInputStream)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Metacity(String)</name>
      <ncss>60</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getTitlePaneLayout()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getRoundedClipShape(int,int,int,int,int,int,int)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.paintButtonBackground(SynthContext,Graphics,int,int,int,int)</name>
      <ncss>71</ncss>
      <ccn>27</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawButton(Node,String,String,Graphics,int,int,JInternalFrame)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.paintFrameBorder(SynthContext,Graphics,int,int,int,int)</name>
      <ncss>69</ncss>
      <ccn>24</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Privileged.doPrivileged(int,Object)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.Privileged.run()</name>
      <ncss>55</ncss>
      <ccn>23</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getThemeDir(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getUserTheme()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.tileImage(Graphics,Image,int,int,int,int,int[])</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getImage(String,Color)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getImage(String)</name>
      <ncss>10</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.ColorizeImageFilter()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.setColor(Color)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.colorize(Image,Color)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ColorizeImageFilter.filterRGB(int,int,int)</name>
      <ncss>13</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.findChild(JComponent,String)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.addLayoutComponent(String,Component)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.removeLayoutComponent(Component)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.preferredLayoutSize(Container)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.minimumLayoutSize(Container)</name>
      <ncss>40</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.TitlePaneLayout.layoutContainer(Container)</name>
      <ncss>35</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getFrameGeometry()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.setFrameGeometry(JComponent,Map)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getInt(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBoolean(String,boolean)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawArc(Node,Graphics)</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawLine(Node,Graphics)</name>
      <ncss>17</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawRectangle(Node,Graphics)</name>
      <ncss>17</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTile(Node,Graphics,JInternalFrame)</name>
      <ncss>32</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTint(Node,Graphics)</name>
      <ncss>20</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawTitle(Node,Graphics,JInternalFrame)</name>
      <ncss>16</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateButtonSize(JComponent)</name>
      <ncss>17</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateTitleArea(JInternalFrame)</name>
      <ncss>22</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.calculateTitleTextWidth(Graphics,JInternalFrame)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.setClip(Node,Graphics)</name>
      <ncss>12</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKArrow(Node,Graphics)</name>
      <ncss>50</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKBox(Node,Graphics)</name>
      <ncss>36</ncss>
      <ccn>10</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGTKVLine(Node,Graphics)</name>
      <ncss>19</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawGradient(Node,Graphics)</name>
      <ncss>28</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawImage(Node,Graphics)</name>
      <ncss>35</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawIcon(Node,Graphics,JInternalFrame)</name>
      <ncss>24</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawInclude(Node,Graphics,JInternalFrame)</name>
      <ncss>20</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.draw(Node,Graphics,JInternalFrame)</name>
      <ncss>55</ncss>
      <ccn>20</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.drawPiece(Node,Graphics,String,int,int,int,int,JInternalFrame)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBorderInsets(SynthContext,Insets)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.logError(String,Exception)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.logError(String,String)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PrivilegedAction.run()</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getXMLDoc(URL)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNodesByName(Node,String)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(String,String[])</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(Node,String,String[])</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getNode(NodeList,String,String[])</name>
      <ncss>22</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getStringAttr(Node,String)</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getStringAttr(NamedNodeMap,String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getBooleanAttr(Node,String,boolean)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getIntAttr(Node,String,int)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.getFloatAttr(Node,String,float)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.parseColor(String)</name>
      <ncss>22</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.parseColor2(String)</name>
      <ncss>47</ncss>
      <ccn>18</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.evaluate(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.evaluate(String,int)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.expression()</name>
      <ncss>22</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.getTermValue()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.ArithmeticExpressionEvaluator.getFactorValue()</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.PeekableStringTokenizer(String,String,boolean)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.peek()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.hasMoreTokens()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.PeekableStringTokenizer.nextToken()</name>
      <ncss>12</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundRectClipShape()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundRectClipShape(int,int,int,int,int,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.setRoundedRect(int,int,int,int,int,int,int)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getX()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getY()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getArcWidth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getArcHeight()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getBounds2D()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getCornerFlags()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.setFrame(double,double,double,double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.contains(double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.classify(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.intersects(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.contains(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.getPathIterator(AffineTransform)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.RoundishRectIterator(RoundRectClipShape,AffineTransform)</name>
      <ncss>31</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.getWindingRule()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.isDone()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.currentSegment(int[])</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>plat.ch.Test79.RoundRectClipShape.RoundishRectIterator.currentSegment(int[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>Test8.foo()</name>
      <ncss>29</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.createUI(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.MotifInternalFrameUI(JInternalFrame)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installUI(JComponent)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installDefaults()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.installKeyboardActions()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.uninstallDefaults()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.getFrame()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.createNorthPane(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.getMaximumSize(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.uninstallKeyboardActions()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setupMenuOpenKey()</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.actionPerformed(ActionEvent)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.AbstractAction.isEnabled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setupMenuCloseKey()</name>
      <ncss>26</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.activateFrame(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.deactivateFrame(JInternalFrame)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>holi.cow.MTest80.setColors(JInternalFrame)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createUI(JComponent)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.installUI(JComponent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.uninstallUI(JComponent)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.paintCurrentValue(Graphics,Rectangle,boolean)</name>
      <ncss>12</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.getPreferredSize(JComponent)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.BasicComboBoxUI.ComboBoxLayoutManager.layoutContainer(Container)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createLayoutManager()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.installKeyboardActions()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createPopup()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createEditor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.createArrowButton()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.XPComboBoxButton.XPComboBoxButton()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.XPComboBoxButton.getPreferredSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.RolloverListener.mouseEntered(MouseEvent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.RolloverListener.mouseExited(MouseEvent)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.WindowsComboPopup(JComboBox)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.createKeyListener()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboPopup.InvocationKeyHandler.InvocationKeyHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>pla.gi.at.Test81.WindowsComboBoxEditor.setItem(Object)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.commentText()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.tags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.tags(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.seeTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.inlineTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.firstSentenceTags()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.getRawCommentText()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.setRawCommentText(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.name()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.compareTo(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isField()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isEnumConstant()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isConstructor()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isMethod()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isAnnotationTypeElement()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isInterface()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isException()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isError()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isEnum()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isAnnotationType()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isOrdinaryClass()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isClass()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.isIncluded()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>clas.s.Test82.position()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.ArrayQueue(int)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.resize(int)</name>
      <ncss>14</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.add(T)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.remove(int)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.get(int)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>yahoo.google.Test84.size()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.resolveServerClassLoader(Map,MBeanServer)</name>
      <ncss>25</ncss>
      <ccn>17</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.resolveClientClassLoader(Map)</name>
      <ncss>11</ncss>
      <ccn>8</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.initCause(T,Throwable)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getCause(Throwable)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getNotifBufferSize(Map)</name>
      <ncss>24</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getMaxFetchNotifNumber(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getFetchTimeout(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getIntegerAttribute(Map,String,long,long,long)</name>
      <ncss>20</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.checkAttributes(Map)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.filterAttributes(Map)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.purgeUnserializable(Collection)</name>
      <ncss>20</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.hideAttributes(SortedMap)</name>
      <ncss>55</ncss>
      <ccn>15</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.parseHiddenAttributes(String,SortedSet,SortedSet)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getServerConnectionTimeout(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.getConnectionCheckPeriod(Map)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.mapToHashtable(Map)</name>
      <ncss>8</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.SinkOutputStream.write(OutputStream[],int,int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xml.xslt.Test85.SinkOutputStream.write(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.NoOpAP.NoOpAP()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.NoOpAP.process()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.CompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.CompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.CompositeAnnotationProcessor.process()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.getCompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>mirror.list.Test86.getCompositeAnnotationProcessor(AnnotationProcessor)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createSourceFile(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createClassFile(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createTextFile(Location,String,File,String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Filer.createBinaryFile(Location,String,File)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.getCommandName()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.printCommandHelp(PrintStream,boolean)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>boca.corba.Test88.processCommand(String[],ORB,PrintStream)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.getFilter(Modifier)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.getFilter(Declaration)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.and(DeclarationFilter)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.or(DeclarationFilter)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.DeclarationFilter.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.not()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.matches(Declaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.filter(D)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.filter(Declaration,D)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter(Modifier)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.AccessFilter(Modifier,Modifier)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>oki.doki.Test89.AccessFilter.matches(Declaration)</name>
      <ncss>5</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setGnuclientPath()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._gnudoit(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._showPackages()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setNewEmacsWidth()</name>
      <ncss>14</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._setProjectSuffix()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.Jacob(Controller,String[])</name>
      <ncss>18</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.loadProject()</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.save()</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.showClasses()</name>
      <ncss>18</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openProject(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openProject()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.openOldProject(String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.createMakefile()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.setClassDependencies()</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editFile(String)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.editProjectFile(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.startJavaLanguageSpecHelp()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.isTimelog()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.TimelogFunctor.exec()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.execTimelog()</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.insertPackage()</name>
      <ncss>26</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.removePackage()</name>
      <ncss>18</ncss>
      <ccn>8</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._selectClasses(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9._selectClasses(String,boolean)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.selectMainClass()</name>
      <ncss>26</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.removeClasses()</name>
      <ncss>13</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.addClasses()</name>
      <ncss>21</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.exit()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>test.Test9.getMainPackage(Test)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyFile()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.init()</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.refresh()</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.initKeyStore(URL,String,String)</name>
      <ncss>22</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.initPolicyFile()</name>
      <ncss>47</ncss>
      <ccn>19</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.checkForTrustedIdentity(Certificate)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.init(URL)</name>
      <ncss>20</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getInputStream(URL)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getCodeSource(PolicyParser.GrantEntry,KeyStore)</name>
      <ncss>17</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.addGrantEntry(PolicyParser.GrantEntry,KeyStore)</name>
      <ncss>46</ncss>
      <ccn>20</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getInstance(String,String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getCertificates(KeyStore,String)</name>
      <ncss>25</ncss>
      <ccn>11</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.elements()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.java.security.PrivilegedAction.run()</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(Subject,CodeSource)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(CodeSource)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPermissions(Permissions,CodeSource)</name>
      <ncss>25</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.addSelfPermissions(Permission,CodeSource,CodeSource,Permissions)</name>
      <ncss>23</ncss>
      <ccn>14</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getPrincipalInfo(PolicyParser.PrincipalEntry,CodeSource)</name>
      <ncss>38</ncss>
      <ccn>13</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.getSignerCertificates(CodeSource)</name>
      <ncss>26</ncss>
      <ccn>14</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.canonicalizeCodebase(CodeSource,boolean)</name>
      <ncss>48</ncss>
      <ccn>17</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.PolicyEntry(CodeSource)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.add(Permission)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.getCodeSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyFile.PolicyEntry.toString()</name>
      <ncss>14</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.PolicyPermissions(PolicyFile,CodeSource)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.add(Permission)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.init()</name>
      <ncss>11</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.implies(Permission)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.elements()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>com.com.com.PolicyPermissions.toString()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>hallo.hello.Test91.getAttributes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>lama.karma.Test92.show()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getState()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.UncaughtExceptionHandler.uncaughtException(Thread,Throwable)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getDefaultUncaughtExceptionHandler()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.getUncaughtExceptionHandler()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setUncaughtExceptionHandler(UncaughtExceptionHandler)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.dispatchUncaughtException(Throwable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.setPriority0(int)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.stop0(Object)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.suspend0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.resume0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test93.interrupt0()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>hope.pope.Test94.compareTo(T)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>steve.jobs.Test95.KeyEvent(Component,int,long,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>Test96.removeAWTEventListener(AWTEventListener)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.name()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.ordinal()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.Enum(String,int)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.clone()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.compareTo(E)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.getDeclaringClass()</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>bla.poo.Test98.valueOf(T,String)</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.getenv(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.getenv()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.environment()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.emptyEnvironment(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.environ()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ProcessEnvironment()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.validateVariable(String)</name>
      <ncss>3</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.validateValue(String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.ExternalData(String,String[])</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.getBytes()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.ExternalData.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.Variable(String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOfQueryOnly(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOfQueryOnly(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOf(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.valueOf(Variable[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.compareTo(Variable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Variable.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.Value(String,String[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOfQueryOnly(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOfQueryOnly(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOf(String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.valueOf(Value[])</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.compareTo(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.Value.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.toString(Value)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.StringEnvironment(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.containsKey(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.containsValue(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.get(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.put(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.keySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.entrySet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.values()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEnvironment.toEnvironmentBlock(m.values[][])</name>
      <ncss>17</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.toEnvironmentBlock(String,String[])</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.StringEntry(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.setValue(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.toString()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntry.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.StringEntrySet(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.getKey()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.Map.Entry.setValue(Value)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.vvEntry(Object)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringEntrySet.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.StringValues(Value)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.equals(Object)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringValues.hashCode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.StringKeySet(Variable)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.size()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.isEmpty()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.clear()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.hasNext()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.next()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.Iterator.remove()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.iterator()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.contains(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.StringKeySet.remove(Object)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayCompare(int[],int[][])</name>
      <ncss>6</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayEquals(boolean[],boolean[][])</name>
      <ncss>7</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>xyz.bla.Test99.arrayHash(int[])</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function_averages>
      <ncss>10.08</ncss>
      <ccn>5.65</ccn>
      <javadocs>0.21</javadocs>
    </function_averages>
    <ncss>102,412.00</ncss>
  </functions>
</javancss>
